{"version":3,"sources":["SharedComponents/DatePicker/DatePicker.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","SharedComponents/TextField/CustomTextField.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","Pages/LoginPage/LoginPage.module.scss","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.module.scss","SharedComponents/404/Error.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.module.scss","Constant/images/images.js","SharedComponents/HeaderComponent/HeaderComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.module.scss","../node_modules/react-pdf/node_modules/pdfjs-dist/build sync","SharedComponents/LoadingComponent/LoadingComponent.module.scss","SharedComponents/PageTitleComponent/PageTitleComponent.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TableFooterComponent/TableFooterComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Protected.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.module.scss","SharedComponents/SnackbarComponent/SnackbarComponent.module.scss","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","SharedComponents/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","FontAwesomeLibrary.js","SharedComponents/TextField/CustomTextField.js","Utilities/GenerateFormData.js","Pages/Protected/Store/actions/pageTitle.js","Pages/Protected/Store/actions/snackbar.js","Pages/Protected/Store/actions/pdf.js","SharedComponents/SnackbarComponent/SnackbarComponent.js","SharedComponents/LoadingComponent/LoadingComponent.js","Pages/Protected/Store/actions/pageLoading.js","SharedComponents/404/404.js","Services/ErrorHandler/exclude.js","Services/ErrorHandler/index.js","Services/Api/instance.js","Services/Api/CommonServices.js","Utilities/IndexedDb2.js","Controllers/ConfigController2.js","Pages/LoginPage/LoginPage.js","SharedComponents/HeaderComponent/HeaderComponent.js","SharedComponents/SideBarComponent/SideBarComponent.js","Pages/Protected/Store/actions/sidebar.js","SharedComponents/PageTitleComponent/PageTitleComponent.js","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.js","Pages/Protected/Store/actions/breadcrumbs.js","SharedComponents/PdfViewer2/PdfViewer2.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent.js","Utilities/TextFormatter.js","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlesPage/BundlesPage.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/BatchEncoder/Store/actions/batch.js","Pages/Protected/Claims/BatchEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/pageTitleReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/bundlesReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/batchReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/BatchEncoder/Store/index.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/index.js","Pages/Protected/Claims/BatchEncoder/Routes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.js","Services/Api/ClaimsEncodingServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchesPage/BatchesPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderAPESchedule/ProviderAPESchedule.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderPPESchedule/ProviderPPESchedule.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.js","Services/Api/LoaDetailsService.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claim.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/grandTotal.js","Utilities/RenameProperty.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/Emergency.js","Constant/reimbursementTypes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.js","Utilities/IndexedDbHelper.js","Services/Storage/IcdCptStorageServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetailsValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatientValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedureValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultationValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursementValidator.js","Controllers/ReimbursementFormController.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergencyValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.js","Constant/media.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDentalValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowanceValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPEValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECUValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPEValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacyValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagementValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.js","Services/Api/CustomerCareServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/ClaimPage/ClaimPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/grandTotalReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Routes.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/ForAdjudicationTile/ForAdjudicationTile.js","Pages/Protected/Claims/Components/MyClaimsTile/MyClaimsTile.js","Pages/Protected/Claims/Components/SubmittedClaimsTile/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile.js","Services/Api/ClaimsAdjudicationServices.js","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claim.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/error.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/escalation.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reassign.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reject.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/utilization.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsViewer/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Utilities/SafeAccess.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Utilities/FieldFormatter.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.js","Utilities/ArrayCompare.js","Utilities/BenefitNode2.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/helper.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.js","SharedComponents/PdfViewer/PdfViewer.js","Pages/Protected/Claims/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/BaseValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/HospitalItemValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/BaseValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/BaseValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/BaseValidatorBuilder.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/BaseValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/HospitalItemValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/BaseValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/HospitalItemValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/ClaimsViewer/claimBtnValidation.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/ClaimsViewer/index.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/discrepancy.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/recon.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/discrepancyReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/errorReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/escalationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimRecordsReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reassignReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/rejectReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reconReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/utilizationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/index.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/index.js","Pages/Protected/Claims/ClaimsAnalyst/Routes.js","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/PaymentRequest/Routes.js","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.js","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/MedicalConsultant/Routes.js","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsReconciliation/Routes.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReconciledClaimsTile/ReconciledClaimsTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsVerifierTile/ClaimsVerifierTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsForApprovalTile/ClaimsForApprovalTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/MedicalCollectiblesTile/MedicalCollectiblesTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReimbursementClaimTile/ReimbursementClaimTile.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/ReconciledServices.js","Services/Api/ClaimsVerifierSupervisorServices/ForApprovalServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Routes.js","Pages/Protected/Claims/index.js","Pages/Protected/Store/reducers/sidebarReducer.js","Pages/Protected/Store/reducers/pageTitleReducer.js","Pages/Protected/Store/reducers/breadcrumbsReducer.js","Pages/Protected/Store/reducers/pageLoadingReducer.js","Pages/Protected/Store/reducers/snackbarReducer.js","Pages/Protected/Store/reducers/pdfReducer.js","Pages/Protected/Store/index.js","Pages/Protected/Store/reducers/index.js","Services/ProtectedPageScrollEvent.js","Pages/Protected/Protected.js","App.js","serviceWorker.js","index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.module.scss","SharedComponents/PdfViewer/PdfViewer.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderAPESchedule/ProviderAPESchedule.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderPPESchedule/ProviderPPESchedule.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","SharedComponents/SideBarComponent/SideBarComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.module.scss"],"names":["module","exports","Object","freeze","logo","avatar","pokeball","webpackEmptyContext","req","e","Error","code","keys","resolve","id","FontAwesomeLibrary","init","library","add","faHome","faBoxOpen","faBookOpen","faTools","faFileAlt","faExclamationCircle","faBalanceScale","faEdit","faTrash","faSave","faPrint","faSearchPlus","faSearchMinus","faArrowAltCircleRight","faArrowAltCircleLeft","faCalendarDay","CustomTextField","props","label","required","readOnly","constainerStyle","error","onChange","type","other","value","React","useState","_error","setError","useEffect","trim","className","classes","root","style","Typography","variant","wrapper","Fragment","Paper","InputBase","input","autoComplete","GenerateFormData","data","formData","FormData","map","item","index","Array","isArray","_item","JSON","stringify","append","setPageTitle","payload","setSnackbar","setPdf","dispatch","SnackbarComponent","snackbar","useSelector","state","useDispatch","handleClose","event","reason","open","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","elevation","severity","action","IconButton","aria-label","icon","onClick","fontSize","AlertTitle","message","SnackbarService","args","LoadingComponent","onScrollContainer","containerNode","containerStyle","setContainerStyle","getBoundingClientRect","top","left","loading","pageLoading","onWheel","overlay","CircularProgress","size","LoadingService","history","ErrorPage","counter","setCounter","_counter","interval","setInterval","clearInterval","push","title","Button","color","ErrorPageInit","useHistory","ErrorPageService","ExcludeErrorConstants","all","exclude","headers","status","handler","success","response","fail","config","Promise","reject","addToken","hasOwnProperty","isAuthorized","createInstance","url","instance","axios","create","baseURL","interceptors","request","use","window","localStorage","partnerUrl","process","clientUrl","replace","getItem","ErrorHandler","axiosClient","CommonServices","method","skip_generate_form_data","IndexedDb2","dbName","stores","version","indexedDB","onupgradeneeded","db","target","result","store","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","console","log","key","storeName","mode","transaction","objectStore","put","getAll","ConfigController2","connect","getData","length","user_data","i","update","LoginPage","disableControls","setDisableControls","username","password","user","setUser","show","loginError","setLoginError","document","submit","a","preventDefault","to","login","err","res","ex","setUserManagementData","setItem","Grid","container","xs","direction","justify","alignItems","src","images","alt","hidden","form","disabled","Link","href","note","HeaderComponent","logout","anchorEl","setAnchorEl","styles","Avatar","aria-controls","aria-haspopup","currentTarget","Menu","Boolean","keepMounted","MenuItem","SideBarComponent","items","sidebar","menu","circle","text","SideBarService","PageTitleComponent","pageTitle","borderColor","PageTitleService","BreadcrumbsComponent","breadcrumbs","selected","Breadcrumbs","BreadcrumbsService","pdfjs","GlobalWorkerOptions","workerSrc","Transition","forwardRef","ref","Slide","PdfViewer2Component","pdf","name","fileName","initialPageNumber","initialScale","service","enabled","file","setFile","numPages","setNumPages","scale","setScale","pageNumber","setPageNumber","then","_blob","Blob","handleOnClose","print","require","ipcRenderer","blobToBase64","send","on","reader","FileReader","readAsDataURL","onloadend","printable","split","printJS","base64","blob","onload","Dialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","edge","DialogContent","padding","controls","align","Tooltip","control","URL","createObjectURL","link","createElement","setAttribute","body","appendChild","click","onLoadSuccess","PdfViewer2Service","options","DashboardTileComponent","children","count","header","viewList","actionHeader","onFilterChange","isFilterShown","filter","setFilter","FormControl","Select","list","Children","child","displayName","TaskTrayComponent","sizes","showTitle","toArray","cloneElement","_sizes","sm","lg","spacing","itemSize","s","TicketListComponent","viewAllLink","content","caption","useStyles1","makeStyles","theme","flexShrink","marginLeft","TablePaginationActions","useTheme","page","rowsPerPage","onChangePage","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","pagination","limit","rowsPerPageOptions","TableContainer","component","table","TableHead","footer","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","useStyles","display","minWidth","flex","iconButton","divider","width","height","margin","SearchTextComponent","placeholder","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","moment","headCells","sortField","CustomizedDialogs","setViewList","onViewListChange","category","p","debounce","setDebounce","fullWidth","maxWidth","aria-labelledby","PaperProps","DialogTitle","disableTypography","button","dividers","search","clearTimeout","setTimeout","overflow","stickyHeader","headCell","TableCell","TableSortLabel","active","orderBy","order","sort","row","bundle_number","date","due","facility","BatchEncodingServices","params","batch_number","Dashboard","created","submitted","bundles","setBundles","initialValue","getBundles","range","getBundleCount","values","batchResponse","batchCountResponse","createdBundles","results","createdBundleCount","prevState","submittedBundles","submittedBundleCount","handleFilterChange","handleOnShowViewList","startCase","tiles","createBundle","_params","searchAndAddContainer","addButton","SearchAndAdd","wrap","BundleList","bundle","rowClick","hover","soa_number","facility_id","facility_name","doctor_name","totalNumberOfBatch","date_received","fetching","BundlesPage","AutoComplete","suggestions","focus","setFocus","onBlur","relatedTarget","onFocus","square","suggestion","handleItemClick","DatePicker","setOpen","selectedDate","setSelectedDate","Date","utils","MomentUtils","TextFieldComponent","TextFieldCurrency","currency","customInput","isNumericString","displayType","thousandSeparator","decimalScale","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","field","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","term","earliest_term","isNaN","newDate","full_name","md","total_rcs","due_date","total_soa_amt","doctor_id","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","EnhancedTable","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","Checkbox","center","numeric","disablePadding","sortDirection","defaultFunction","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","deleteStatus","onOpen","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","batch","setBatch","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","_index","handleClick","claim","buttonWrapper","deleteMessage","getMessage","DropDown","disableComponents","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","greater","less","notes","allow","abortEarly","validate","ExtractValidationResult","setSelectedBatch","setBatchAction","setShowBatchForm","setSaveBatchControl","resetSuggestionObject","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","onChangeDoctor","saveControl","setErrors","doctor","multiline","rows","BatchFormValidator","messages","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setOpenDialog","openBundleDialog","setOpenBundleDialog","setOpenError","submitStatus","setsubmitStatus","match","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","received","soa","amount","getBatches","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","newBatch","updateBatch","f","createBatch","updateBundle","handleOnOk","deleteMultipleBatch","catch","source","NewBundlePage","due_date_adjustment","newBundle","setNewBundle","inputs","save","toISOString","NewBundleValidator","pageTitleReducer","initialState","bundlesReducer","batchNumber","batchReducer","suggestionsReducer","combineReducers","createStore","sideBarItems","dashboard","specificBundle","BatchEncoderRoutes","Store","exact","onItemClick","ClaimsEncodingServices","claim_number","my","completed","openTickets","getBatchCount","openBatches","openBatchCount","myBatches","myBatchCount","completedBatches","completedBatchCount","handleOnEncode","assignBatch","BatchesPage","BatchDetails","groups","date_from","date_to","ClaimListHeader","onClickAdd","onClickAPESchedule","onClickPPESchedule","inputChange","ClaimList","onConfirm","submittedBatch","setOrder","setOrderBy","setPagination","claims","setClaims","claim_numbers","_claims","claimNumbers","c","property","rowsLength","role","tabIndex","loa_number","approval_code","member","first_name","last_name","account_number","from","ProviderAPESchedule","dialog","setDialog","header1","colSpan","cell","partition","maxHeight","List","random","ListItem","ListItemText","ProviderPPESchedule","BatchPage","setBatchNumber","setDetails","claimCount","setClaimCount","openDeleteDialog","setOpenDeleteDialog","showAPESchedule","setShowAPESchedule","showPPESchedule","setShowPPESchedule","getClaimsAndCount","getClaims","_batchNumber","getBatch","submitBatch","onOpenDelete","deleteMultipleClaim","ContractRange","now","onChangeDateFrom","onChangeDateTo","LoaDetailsService","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimPro","setClaimDoctor","setClaimRoom","setClaimDiagnosis","setClaimType","initDropDowns","setDropDown","initSuggestions","setSuggestionObject","addSuggestionToArray","setProcedure","setHospitalItem","setProfessionalFee","setGrandTotal","renameProp","oldProp","newProp","old","others","AutoFillPlaceholder","AutoFill","loa","member_name","member_info","member_last_name","member_names","member_middle_name","pop","member_first_name","join","common","loa_no","member_account_number","member_id","procedures","professional_fees","diagnosis","diagnoses","primary_icd10_code","primary_diagnosis","proc","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","prof","diag","icd10_code","date_admitted_date","date_discharged_date","room_type","room","room_rate","total_amount","pro_id","pro_name","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","hospital_items","medical_partner_id","partner_id","medical_partner_name","partner_name","rooms","rate","InPatient","pshilhealth_amount_paid","recommendation","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","partner_doctor_name","OutPatientConsultation","department","OutPatientProcedure","reimbursementTypes","ReimbursementTypes","BaseDetails","onChangeReimbursementType","showReimbursement","showCompany","showContractRange","showClaimSource","showApprovalCode","showLoaNumber","claimType","approvalCode","setApprovalCode","getLoaDetails","reimbursement_type","ICDTextFields","description","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Radio","IndexedDbHelper","deleteDb","callback","deleteDatabase","openDb","onUprade","onSuccess","onError","createStoreOnDb","onComplete","oncomplete","createIndexOnStore","isUnique","unique","openDbAndSave","entries","onSaveComplete","onLoopEnd","saveToStore","forEach","entry","IcdCptStorageServices","DB_NAME","OBJECT_STORE_NAME_CPT","OBJECT_STORE_NAME_ICD","records","readStorageEntries","loadEntries","toLowerCase","filterKey","includes","full_description","full_code","LOOKUP_LIMIT","DiagnosisList","handleOnClickAddDiagnosis","handleOnChangeIcd10","icd10","getIcd10Suggestions","removeSuggestionToArray","handleOnRemoveDiagnosis","CptTextFields","CptTextField","gross_amount","ProcedureForm","procedure","unsubscribe","subscribe","handleOnChangeProcedureForm","handleOnChangeCpt","cpt","toString","getCptSuggestions","ProcedureFormValidator","buttons","HospitalItemTextFields","HospitalItemTextField","item_code","onChangeName","HospitalItemForm","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","handleOnChangeHospitalForm","HospitalItemFormValidator","specialization","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","Table","_children","TableHeader","textAlign","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureList","totalAmount","setTotalAmount","amountPerItem","parseFloat","showProcedureForm","generateKey","right","HospitalItemList","showHospitalItemForm","ProfessionalFeeList","showProfessionalFeeForm","ClaimFooter","handleOnSave","_setDialog","_resolve","SoftValidatorAlertComponent","t","SoftValidatorService","fields","_fields","hasPrimary","itemError","ClaimInPatient","onChangeFacility","getClaimDetails","onChangePro","dropDown","grandTotal","isAdd","setIsAdd","allowedFields","setAllowedFields","_allowedFields","middle_name","pro","claim_sub","sub_type","currentValue","sum","reduce","handleOnChangeFacility","doValidateAll","hasErrorBase","base_error","BaseDetailsValidator","ClaimInPatientValidator","startOf","endOf","group","groupEnd","doValidateBase","DiagnosisListValidator","goBack","addClaim","_claimNumber","updateClaim","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientProcedureValidator","ClaimOutPatientConsultation","ClaimOutPatientConsultationValidator","medicine_category","official_receipt_number","defaultFormFields","base_details","date_of_service","medicine_category_out","reimbursement_category","reimbursement_category_out","customFormField","assign","ClaimReimbursement","formFields","setFormFields","FormController","reimbursement_details","ClaimReimbursementValidator","ClaimEmergency","ClaimEmergencyValidator","media","dentalChart","ClaimDental","Media","ClaimMedicineAllowance","ClaimAPE","ClaimECU","ClaimPPE","ClaimPharmacy","ClaimMedicalSupplies","ClaimClinicManagement","CustomerCareServices","member_account_no","member_oid","contract_oid","tree_oid","is_exact","ClaimPage","breadCrumbs","_claim_type","getBatchDetails","getClaim","getFacilitySuggestions","handleOnChangePro","employee_id","getProSuggestions","proUsersLookup","elem","handleOnChangeAnaesthesiologist","getAnaesthesiologistSuggestions","anaesthesiologist","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","amount_not_covered","amount_due_from_member","reason_for_charging_member","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","initSubscriber","specificBatch","ClaimsDetailsEncoderRoutes","render","ForAdjudicationTile","services","getClaimCount","handleOnAnalyze","assignClaim","MyClaimsTile","SubmittedClaimsTile","claimNumber","setClaimNumber","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","handleOnShowPdf","getLetterOfAdvice","claimNo","getAnalysisSheet","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","ClaimsAdjudicationServices","responseType","Accept","getClaimResponse","analyzeRespone","analysis_results","icd_code","filters","DiscrepancyBase","discrepancy","iconStyle","retainSpace","setMessage","flat","Infinity","m","spreadResult","Popover","transformOrigin","whiteSpace","resetErrorBase","resetErrorDiagnosis","resetErrorProcedure","resetErrorHospitalItem","resetErrorProfessionalFee","setErrorBase","setErrorDiagnosis","setErrorProcedure","setErrorHospitalItem","setErrorProfessionalFee","setEscalationMessage","setReassignMessage","setRejectStatus","setLimitType","loa_details","has_corp_guarantee","remarks","permissions","requiredFields","read","delete","defaultBehaviour","lastEntry","handleOnConfirmDelete","isViewOnly","doValidate","prop","handleOnChange","reason_charging","failed","handleOnUpdate","handleOnRemoveConfirm","handleOnCancel","handleOnRemove","handleClickLineDiscrepancy","Set","expand","handleOCancel","hospital_item","professional_fee","SafeAccess","def","obj","assignee","doReject","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","userManagementService","escalations","reassign","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","reassignErrors","setReassignErrors","initDropdownUsers","roles","getUsersByRole","users","_id","visible","analysis_sheet","letter_of_advice","escalate","handleEscalateDialog","return","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","handleReassignDialog","comment","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","DisapprovedLabel","reasons","disapproved","substring","generateMessage","TextFieldSubmit","onSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","user_id","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","coverageList","planTypeList","categoryNode","roomAndBoardList","riderList","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","node","nodeId","planPackage","benefitCategory","included","idx","tree_id","LimitTable","UnitLimit","unit","Header","elemFields","setElemFields","benefitType","metadata","generateFields","Footer","showAll","billingArrangement","premium","billback","rider_fee","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","columns","RBC","EM","IP","OP","PV","SD","MT","OM","CC","DNT","SH","elemRows","setElemRows","elemColumns","setElemColumns","setShowAll","generateColumns","limits","limit_unit","parent_name","generateRows","includesAny","s1","s2","BenefitNode2","nodes","current","treePath","levelLimit","reverse","shift","level","find","nodesParam","loadExisting","nodeIDMap","tree_path","node1","node2","sort_index","oldID","itemPlanType","newID","padStart","IDSet","newIncludedFacilities","newPartner","included_facilities","newExcludedFacilities","partnerNetworkList","excluded_facilties","found","set","exResult","exTree","getNodeTree","parentNodes","childNodes","parent","foundChild","childNode","newParent","newChildNodes","benefitCategoryNodes","planType","newItem","baseNode","baseItem","exclusionList","benefitTypeNodes","mainBenefitNodes","subBenefitNodes","selectedPlanType","selectedPlanPackage","selectedBenefitCategory","exclusionArray","exclusion","categoryNodes","typeNodes","this","combineNodes2","benefitNodes","subNodes","child_nodes","combineNodes","contractNodes","planPackageNodes","planTypeNodes","coverageCategories","riderCategories","combinedNodes","benefit","baseNodes","tmp_data","basePlanType","planNodes","planTypeID","custom_metadata","properties","contract_plan_type","requested_rate","admin_fee","naf","rsd","indicative_principals","indicative_dependents","original_children","original_id","newPartnerNetworkList","partner","addFlag","planTypeNode","generatePlanNodes","findIndex","newNode","foundNode","node_path","baseIndex","getMatchByPlanCode","eligiblityNodes","parentLevel","parentCode","parentIndex","newChildren","planCode","Benefits","contractType","baseContract","clientContract","memberContract","setSelectedPlanType","setSelectedPlanPackage","setSelectedBenefitCategory","benefitRows","setBenefitRows","setExclusionList","setContractNodes","setPlanTypeNodes","setPlanPackageNodes","setBenefitCategoryNodes","setBenefitTypeNodes","setMainBenefitNodes","setSubBenefitNodes","setContractId","contracts","convertNodeData","combineBaseBenefitNodes","eList","createExclusionList","getFilteredNodes","getRows","getContractNode","getCategoryNode","getPlanTypeList","getRoomAndBoardList","getSidebarList","getCoverageList","getRiderList","contractNode","selectedPlan","setSelectedPlan","planTypes","setPlantTypes","setRows","benefits","benefitsExclusion","element","childExclusions","childId","subBenefit","parent_code","plan_type","plan","getExclusions","headCellsDoctors","PartnerNetwork","partnerService","doctorService","memberAccountNumber","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","filtered","doctors","setDoctors","fetchAll","lodash","sortBy","queryColumn","collection","searchObj","address","handleOnSort","sorted","handleOnPaginate","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","last","sub","schedule","extractLoa","__type","ticket_type","grand_total","date_admitted","date_issued","claim_no","session","newDoctor","_doctors","randomRange","Utilization","fetchService","memberBenefitLimit","utilizationLoa","alter","setList","setFilters","allFilters","setAllFilters","filteredRows","setFilteredRows","utilized","ibnr","total","graph","setGraph","_utilizationLoa","concat","icd","category_code","startsWith","allFilter","columnFilter","chunk","take","handleSearchChange","compare","comparer","some","provider","background","procedure_name","cpt_code","renderRows","PdfViewer","download","Contract","RightPanelTabs","onReturnEscalate","getUtilizations","getPartners","getDoctors","recon","tabs","comments","when","not","otherwise","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","validateReject","getUsers","setIsViewOnly","getReason","getRooms","getDropdown","doValidateProcedure","openItem","ProcedureValidator","doValidateHospitalItem","HospitalItemValidator","doValidateProfessionalFee","ProfessionalFeeValidator","base","ErrorBase","BaseValidator","ErrorDiagnosis","arr_errors","doValidateDiagnosis","ErrorProcedure","ErrorHospitalItems","ErrorProfessionalFee","defaults","generateValidationFields","validators","ipValidator","opValidator","toValidate","ValidatorBuilder","MedicalConsultantServices","UserManagementServices","role_name","ClaimAnalysis","setMember","setBaseContract","setClientContract","setMemberContract","setMemberBenefitLimit","setUtilizationLoa","breadCrumbsList","setFetching","resetRecon","setDiscrepancy","isDiscrepancy","getClaimType","getEscalationLogs","getReconNotes","handleGetClaimDetails","getMemberUtilizationLoa","getMember","getBaseBenefitPlan","getBenefitPlanTree","getMemberContract","getMemberBenefitLimit","handleGetUtilizations","handleGetPartners","handleGetDoctors","handleGetUsers","handleGetMember","adjudicationResults","fieldIndex","item_type","item_id","getComments","getNotes","getReport","getReports","handleOnEscalate","receiver_id","handleOnReject","handleOnReassign","handleOnApprove","handleOnViewAnalysisSheet","handleOnViewLetterOfAdvice","handleOnReturnEscalate","discrepancyReducer","errorReducer","escalationReducer","reassignReducer","rejectReducer","reconReducer","utilizationReducer","claimRecords","claimRecordsReducer","specificClaim","analyze","exclusions","utilization","contact","ClaimsAnalystRoutes","PaymentRequestServices","paymentRequests","override","paymentRequestClaims","paymentRequestClaimCount","_category","soa_no","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","total_batches","total_batch","acc","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","requestBatch","should_include","paymentRequest","specificPaymentRequest","PaymentRequestRoutes","for_review","ticket","claimResponse","claimCountResponse","allClaims","allClaimsCount","handleOnReview","review","MedicalConsultantRoutes","ClaimsReconServices","for_recon","ClaimsReconcilationRoutes","ReconTIle","getItems","getItemCount","ClaimsForApprovalTile","claimsCount","handleOnItemClick","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledServices","ForApprovalServices","ClaimsVerifierSupervisorServices","ClaimsVerifierTile","ReconciledClaimsTile","reconciled","forApproval","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","ClaimsSupervisorRoutes","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","removeItem","batchEncoderLogic","ClaimsReconciliationRoutes","ClaimsVerifierSupervisorRoutes","sidebarReducer","breadcrumbsReducer","snackbarReducer","pdfReducer","pageLoadingReducer","subscribers","ProtectedPageScrollEvent","cb","Protected","selectedModule","setSelectedModule","isAauthorized","setIsAuthorized","setContainerNode","getMe","getUserManagementData","resetToLogin","access_token","main_module","main_role","_setSelectedModule","location","host","protocol","scrollContainer","scrollTop","scrollTo","deltaY","accessToken","statusCode","onScroll","publish","Claims","routesForModule","initializeBaseUrls","App","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d2fdce6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__1XZyg\",\"input\":\"BaseDetails_input__pHRqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2fzNk\",\"header\":\"ICDTextField_header__pqXnc\",\"description\":\"ICDTextField_description___8gS9\",\"code\":\"ICDTextField_code__G5Fds\",\"primary\":\"ICDTextField_primary__2X9xl\",\"actions\":\"ICDTextField_actions__20aju\",\"wrapper\":\"ICDTextField_wrapper__2-mIJ\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__1sn7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__33_jP\",\"first-container\":\"ClaimAPE_first-container__2GhQb\",\"groups\":\"ClaimAPE_groups__1so6S\",\"input\":\"ClaimAPE_input__3YCJP\",\"child-container\":\"ClaimAPE_child-container__3K1NT\",\"tables-container\":\"ClaimAPE_tables-container__3FZpM\",\"left-side\":\"ClaimAPE_left-side__Dn2r2\",\"wrapper\":\"ClaimAPE_wrapper__1o-j6\",\"table\":\"ClaimAPE_table__1712c\",\"table-header\":\"ClaimAPE_table-header__3Wtai\",\"table-description\":\"ClaimAPE_table-description__3Th5T\",\"add-link\":\"ClaimAPE_add-link__164II\",\"row\":\"ClaimAPE_row__2SFXN\",\"align\":\"ClaimAPE_align__zZw0w\",\"center\":\"ClaimAPE_center__2vDr-\",\"right\":\"ClaimAPE_right__33hqW\",\"table-total\":\"ClaimAPE_table-total__3QUPH\",\"caption\":\"ClaimAPE_caption__3fFSz\",\"amount\":\"ClaimAPE_amount__VNmzU\",\"right-side\":\"ClaimAPE_right-side__1KdqK\",\"sticky\":\"ClaimAPE_sticky__2Gc6m\",\"grand-total\":\"ClaimAPE_grand-total__17ewH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3G1WP\",\"first-container\":\"ClaimMedicalSupplies_first-container__3VlM1\",\"groups\":\"ClaimMedicalSupplies_groups__1qSYd\",\"input\":\"ClaimMedicalSupplies_input__1ZmAK\",\"child-container\":\"ClaimMedicalSupplies_child-container__3FBi7\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__1Fq0r\",\"left-side\":\"ClaimMedicalSupplies_left-side__3D2mB\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__3WLRm\",\"table\":\"ClaimMedicalSupplies_table__258qm\",\"table-header\":\"ClaimMedicalSupplies_table-header__2_TTi\",\"table-description\":\"ClaimMedicalSupplies_table-description__1nujy\",\"add-link\":\"ClaimMedicalSupplies_add-link__2BUxt\",\"row\":\"ClaimMedicalSupplies_row__vGNBs\",\"align\":\"ClaimMedicalSupplies_align__33Doz\",\"center\":\"ClaimMedicalSupplies_center__2l45A\",\"right\":\"ClaimMedicalSupplies_right__1em68\",\"table-total\":\"ClaimMedicalSupplies_table-total__3JD-N\",\"caption\":\"ClaimMedicalSupplies_caption__1DdQa\",\"amount\":\"ClaimMedicalSupplies_amount__3Sav-\",\"right-side\":\"ClaimMedicalSupplies_right-side__2nXxw\",\"sticky\":\"ClaimMedicalSupplies_sticky__2F1nG\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__3dgFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__1qifU\",\"header\":\"ICDTextField_header__3VGao\",\"delete\":\"ICDTextField_delete__3vB5d\",\"description\":\"ICDTextField_description__3eIpr\",\"code\":\"ICDTextField_code__2j0R8\",\"primary\":\"ICDTextField_primary__KNO67\",\"discrepancy\":\"ICDTextField_discrepancy__1UfWd\",\"wrapper\":\"ICDTextField_wrapper__3ixXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1Skt8\",\"tiles\":\"Dashboard_tiles__lpIoJ\",\"row\":\"Dashboard_row__3KnBg\",\"task-tray\":\"Dashboard_task-tray__2lCpR\",\"list-item\":\"Dashboard_list-item__1Ic9e\",\"details\":\"Dashboard_details__1rU-L\",\"detail-item\":\"Dashboard_detail-item__3KSnH\",\"label\":\"Dashboard_label__1K4-z\",\"content\":\"Dashboard_content__2Zqqy\",\"action\":\"Dashboard_action__1LooX\",\"ticket-list\":\"Dashboard_ticket-list__3x5rn\",\"completed_task\":\"Dashboard_completed_task__3-uA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2JIh5\",\"table\":\"ProfessionalFeeList_table__2LQEU\",\"table-header\":\"ProfessionalFeeList_table-header__2OzH0\",\"table-description\":\"ProfessionalFeeList_table-description__28jUE\",\"add-link\":\"ProfessionalFeeList_add-link__35a_-\",\"row\":\"ProfessionalFeeList_row__2-_LK\",\"align\":\"ProfessionalFeeList_align__32hEA\",\"center\":\"ProfessionalFeeList_center__1SWoN\",\"right\":\"ProfessionalFeeList_right__1vR9f\",\"table-total\":\"ProfessionalFeeList_table-total__1lDQJ\",\"caption\":\"ProfessionalFeeList_caption__33xCy\",\"amount\":\"ProfessionalFeeList_amount__2dpID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__JGJMu\",\"contract-id\":\"SideBar_contract-id__3nF6_\",\"id\":\"SideBar_id__3bO4v\",\"plan-types\":\"SideBar_plan-types__gAyTx\",\"node\":\"SideBar_node__3K3Dx\",\"benefit-label\":\"SideBar_benefit-label__1EcTO\",\"selected\":\"SideBar_selected__3Yeld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__42Rd3\",\"groups\":\"ProcedureForm_groups__2ZpFn\",\"input\":\"ProcedureForm_input__2L5en\",\"buttons\":\"ProcedureForm_buttons__rHNJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__mMTrP\",\"groups\":\"HospitalItemForm_groups__1fNtv\",\"first-item\":\"HospitalItemForm_first-item__15WZA\",\"input\":\"HospitalItemForm_input__1Wo8l\",\"buttons\":\"HospitalItemForm_buttons__3RCkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTextField_root__12dTT\",\"label\":\"CustomTextField_label__2aunG\",\"wrapper\":\"CustomTextField_wrapper__3YBGm\",\"read-only-value\":\"CustomTextField_read-only-value__26nQ7\",\"text-field\":\"CustomTextField_text-field__c2000\",\"form-control\":\"CustomTextField_form-control__2n1zh\",\"discrepancy\":\"CustomTextField_discrepancy__welR8\",\"divider\":\"CustomTextField_divider__24lGj\",\"end-adornment\":\"CustomTextField_end-adornment__2JrSO\",\"input\":\"CustomTextField_input__NKim1\",\"input-amount\":\"CustomTextField_input-amount__35U02\",\"select\":\"CustomTextField_select__2C-TW\",\"has-error\":\"CustomTextField_has-error__3dF7R\",\"error\":\"CustomTextField_error__1cHzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__Y-B2-\",\"input\":\"BaseDetails_input__2Mx_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__3eq0p\",\"title\":\"BundlePage_title__3x58L\",\"root\":\"BundlePage_root__283i3\",\"list-header\":\"BundlePage_list-header__1GBCu\",\"actions\":\"BundlePage_actions__3H3cL\",\"bundle-details\":\"BundlePage_bundle-details__3EFVt\",\"batch-list\":\"BundlePage_batch-list__26oBP\",\"table-container\":\"BundlePage_table-container__1J8nf\",\"buttonWrapper\":\"BundlePage_buttonWrapper__1xA20\",\"delete-button\":\"BundlePage_delete-button__2HQIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__2MQLQ\",\"header\":\"CptTextField_header__1_r1n\",\"description\":\"CptTextField_description__2gowQ\",\"code\":\"CptTextField_code__1X5xt\",\"wrapper\":\"CptTextField_wrapper__FUZKz\",\"sub-wrapper\":\"CptTextField_sub-wrapper__1kK97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__2P-u0\",\"header\":\"HospitalItemTextField_header__3RDWG\",\"description\":\"HospitalItemTextField_description__GCnjW\",\"code\":\"HospitalItemTextField_code__17rmf\",\"wrapper\":\"HospitalItemTextField_wrapper__pOk2y\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__3CoSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__1HBs_\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__GUidY\",\"discrepancy\":\"DiscrepancyBase_discrepancy__3xf0j\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__UYnw8\",\"icon\":\"DiscrepancyBase_icon__1N9rI\",\"display-hidden\":\"DiscrepancyBase_display-hidden__3qbGn\",\"display-none\":\"DiscrepancyBase_display-none__wXzuv\",\"message\":\"DiscrepancyBase_message__36Loi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__2Dxro\",\"header\":\"CptTextField_header__1du7N\",\"description\":\"CptTextField_description__1Y2jB\",\"code\":\"CptTextField_code__3G4iL\",\"wrapper\":\"CptTextField_wrapper__2clNv\",\"sub-wrapper\":\"CptTextField_sub-wrapper__aJYZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3SL-F\",\"header\":\"HospitalItemTextField_header__1hPKE\",\"description\":\"HospitalItemTextField_description__3XQcA\",\"code\":\"HospitalItemTextField_code__1Ob5U\",\"wrapper\":\"HospitalItemTextField_wrapper__r1Dzx\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__20l4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__ZLfuZ\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__2TA8h\",\"disapproved\":\"DisapprovedLabel_disapproved__1QF0_\",\"icon-container\":\"DisapprovedLabel_icon-container__1inxJ\",\"message\":\"DisapprovedLabel_message__3Vqzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__20AOh\",\"error\":\"LoginPage_error__XJ7jz\",\"hidden\":\"LoginPage_hidden__1MHLH\",\"form\":\"LoginPage_form__-BU2g\",\"forgot-password\":\"LoginPage_forgot-password__uijLo\",\"logo\":\"LoginPage_logo__2L8u9\",\"note\":\"LoginPage_note__2phGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__31XgN\",\"header-container\":\"ViewList_header-container__1VZFJ\",\"header\":\"ViewList_header__3IJWI\",\"title\":\"ViewList_title__153PR\",\"content\":\"ViewList_content__3EBp-\",\"search\":\"ViewList_search__2T4Ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__fOI8L\",\"header-container\":\"ViewList_header-container__15b2V\",\"header\":\"ViewList_header__2yDtP\",\"title\":\"ViewList_title__6qHH5\",\"content\":\"ViewList_content__2wIcJ\",\"search\":\"ViewList_search__q7CsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__1c-fP\",\"header\":\"Exclusions_header__OkiLT\",\"body\":\"Exclusions_body__1TznK\",\"plan-types\":\"Exclusions_plan-types__3nG3V\",\"type\":\"Exclusions_type__1Sf42\",\"table\":\"Exclusions_table__3R1PL\",\"hidden\":\"Exclusions_hidden__3njgG\",\"search\":\"Exclusions_search__11bGt\",\"cell\":\"Exclusions_cell__1Xs8u\",\"center\":\"Exclusions_center__38xwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__RSkYA\",\"header-container\":\"ViewList_header-container__w5NIm\",\"header\":\"ViewList_header__3IQsQ\",\"title\":\"ViewList_title__35fAO\",\"content\":\"ViewList_content__Qwry5\",\"search\":\"ViewList_search__Wyc_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2_z8r\",\"header-container\":\"ViewList_header-container__3WWag\",\"header\":\"ViewList_header__2HSe-\",\"title\":\"ViewList_title__2UVK4\",\"content\":\"ViewList_content__3eP6Y\",\"search\":\"ViewList_search__zJncR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1Rq6u\",\"header-container\":\"ViewList_header-container__2Eafb\",\"header\":\"ViewList_header__NF-fk\",\"title\":\"ViewList_title__2u8uB\",\"content\":\"ViewList_content__1yUtF\",\"search\":\"ViewList_search__23Ay-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1wvHu\",\"header-container\":\"ViewList_header-container__12mEX\",\"header\":\"ViewList_header__3OBrG\",\"title\":\"ViewList_title__33FCj\",\"content\":\"ViewList_content__11fI4\",\"search\":\"ViewList_search__32xl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__2H6Pb\",\"title\":\"Error_title__3ihbU\",\"message\":\"Error_message__3I8g1\",\"action-messages\":\"Error_action-messages__1rqtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__3fun1\",\"title\":\"ClaimListHeader_title__WJLB-\",\"wrapper\":\"ClaimListHeader_wrapper__1F29R\",\"button\":\"ClaimListHeader_button__1wjAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__2NmED\",\"title\":\"ContractRange_title__E_hT6\",\"input\":\"ContractRange_input__3ff6N\",\"label\":\"ContractRange_label__1ekKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__47GqK\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1ojI4\",\"has-error\":\"DiagnosisList_has-error__22b9S\",\"title\":\"DiagnosisList_title__3pos_\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__TpP98\",\"error\":\"DiagnosisList_error__21k61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__2bnaD\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__3xFhl\",\"has-error\":\"DiagnosisList_has-error__1uomu\",\"title\":\"DiagnosisList_title__kXt5P\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2PTFb\",\"error\":\"DiagnosisList_error__35W7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3d9Cb\",\"wrapper\":\"Header_wrapper__11cP0\",\"groups\":\"Header_groups__1XNBo\",\"center\":\"Header_center__21GKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3v-Lv\",\"wrapper\":\"Footer_wrapper__1zMki\",\"groups\":\"Footer_groups__2MoDL\",\"center\":\"Footer_center__3a6Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__1QyJD\",\"wrapper\":\"Benefits_wrapper__2jR0h\",\"left-side\":\"Benefits_left-side__3MVYf\",\"title\":\"Benefits_title__RhMcW\",\"right-side\":\"Benefits_right-side__3VGXh\",\"center\":\"Benefits_center__2tHRK\"};","module.exports = Object.freeze({\n  logo: 'https://intellicare.net.ph/wp-content/uploads/Intellicare_green-play.png',\n  avatar: 'https://avatars.sched.co/a/c0/7249803/avatar.jpg?479',\n  pokeball: 'https://upload.wikimedia.org/wikipedia/en/3/39/Pokeball.PNG'\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HeaderComponent_root__1P3pT\",\"left-container\":\"HeaderComponent_left-container__3Dcw_\",\"right-container\":\"HeaderComponent_right-container__1OYZu\",\"avatar\":\"HeaderComponent_avatar__7kjfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__134XU\",\"tiles\":\"Dashboard_tiles__3-cNn\",\"task-tray\":\"Dashboard_task-tray__1XF4s\",\"list-item\":\"Dashboard_list-item__3qy0B\",\"details\":\"Dashboard_details__15s7s\",\"detail-item\":\"Dashboard_detail-item__3IHwo\",\"label\":\"Dashboard_label__1DKDf\",\"content\":\"Dashboard_content__2wA9x\",\"action\":\"Dashboard_action__2y9Fa\",\"ticket-list\":\"Dashboard_ticket-list__DOG3i\",\"completed_task\":\"Dashboard_completed_task__3owpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2sYb8\",\"tiles\":\"Dashboard_tiles__E_4-O\",\"task-tray\":\"Dashboard_task-tray__2VDQD\",\"list-item\":\"Dashboard_list-item__ppY3e\",\"details\":\"Dashboard_details__332wx\",\"detail-item\":\"Dashboard_detail-item__umKEs\",\"label\":\"Dashboard_label__2cGs-\",\"content\":\"Dashboard_content__2-Sut\",\"action\":\"Dashboard_action__h_HAI\",\"ticket-list\":\"Dashboard_ticket-list__1QobE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__255TG\",\"claims-container\":\"BatchPage_claims-container__3h3TE\",\"footer\":\"BatchPage_footer__1Jf_V\",\"actions\":\"BatchPage_actions__11khZ\",\"delete-button\":\"BatchPage_delete-button__1Qc1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1uEiL\",\"tiles\":\"Dashboard_tiles__1p7ax\",\"task-tray\":\"Dashboard_task-tray__12TWB\",\"list-item\":\"Dashboard_list-item__2SveG\",\"details\":\"Dashboard_details__2WxhK\",\"detail-item\":\"Dashboard_detail-item__30PKn\",\"label\":\"Dashboard_label__3e3j4\",\"content\":\"Dashboard_content__2lI50\",\"action\":\"Dashboard_action__3Q66h\",\"ticket-list\":\"Dashboard_ticket-list__3VZn-\",\"completed_task\":\"Dashboard_completed_task__2KLLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__108O5\",\"tiles\":\"Dashboard_tiles__1UqHd\",\"task-tray\":\"Dashboard_task-tray__13jCx\",\"list-item\":\"Dashboard_list-item__1POQ4\",\"details\":\"Dashboard_details__2IkLS\",\"detail-item\":\"Dashboard_detail-item__3Y59v\",\"label\":\"Dashboard_label__2rLfF\",\"content\":\"Dashboard_content__2l1Kt\",\"action\":\"Dashboard_action__xbn6T\",\"ticket-list\":\"Dashboard_ticket-list__iE5Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__23ayB\",\"tiles\":\"Dashboard_tiles__33s9X\",\"task-tray\":\"Dashboard_task-tray__1uBpo\",\"list-item\":\"Dashboard_list-item__26TQ6\",\"details\":\"Dashboard_details__17s4J\",\"detail-item\":\"Dashboard_detail-item__3sS05\",\"label\":\"Dashboard_label__2pLvS\",\"content\":\"Dashboard_content__37CXM\",\"action\":\"Dashboard_action__Qvz0B\",\"ticket-list\":\"Dashboard_ticket-list__2d55k\",\"completed_task\":\"Dashboard_completed_task__Uz_lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2RzYz\",\"tiles\":\"Dashboard_tiles__1cs7I\",\"task-tray\":\"Dashboard_task-tray__2A2Ey\",\"list-item\":\"Dashboard_list-item__2fnpW\",\"details\":\"Dashboard_details__1Wp_8\",\"detail-item\":\"Dashboard_detail-item__30oox\",\"label\":\"Dashboard_label__15Y3V\",\"content\":\"Dashboard_content__fE3g4\",\"action\":\"Dashboard_action__5pEKU\",\"ticket-list\":\"Dashboard_ticket-list__klX7O\",\"completed_task\":\"Dashboard_completed_task__VoHmg\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 226;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingComponent_root__2UfOh\",\"overlay\":\"LoadingComponent_overlay__21www\",\"loading\":\"LoadingComponent_loading__3PDNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageTitleComponent_root__3xaWu\",\"title\":\"PageTitleComponent_title__1Br2u\",\"status\":\"PageTitleComponent_status__2N8C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableFooterComponent_root__FICsV\",\"text\":\"TableFooterComponent_text__3VtIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"ValueField_field__3EGEH\",\"label\":\"ValueField_label__2SDLZ\",\"value\":\"ValueField_value__if9Zt\",\"center\":\"ValueField_center__37s1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"Protected_main-container__26YI3\",\"sub-container\":\"Protected_sub-container__3hCgJ\",\"content\":\"Protected_content__1ikZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__7mMYd\",\"header\":\"Utilization_header__3-DmX\",\"graph\":\"Utilization_graph__jS7Y3\",\"anual-benefit\":\"Utilization_anual-benefit__PiGUz\",\"line-graph\":\"Utilization_line-graph__2pYxS\",\"container\":\"Utilization_container__2_WFM\",\"line-container\":\"Utilization_line-container__2ZwHO\",\"item\":\"Utilization_item__2nbS9\",\"line-details\":\"Utilization_line-details__3ShmM\",\"label\":\"Utilization_label__mglW7\",\"color\":\"Utilization_color__3-ICH\",\"search\":\"Utilization_search__Abs3z\",\"table\":\"Utilization_table__1HuJw\",\"cell\":\"Utilization_cell__uCofH\",\"icon\":\"Utilization_icon__3jhC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SnackbarComponent_root___7Fjo\",\"icon\":\"SnackbarComponent_icon__3G7pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BreadcrumbsComponent_root__tgbvN\",\"item\":\"BreadcrumbsComponent_item__U7DgC\",\"active\":\"BreadcrumbsComponent_active__2PIYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LimitTable_root__1DBjU\",\"header\":\"LimitTable_header__3wAD9\",\"groups\":\"LimitTable_groups__aoDPg\",\"field\":\"LimitTable_field__14Ts8\",\"label\":\"LimitTable_label__2e3n3\",\"value\":\"LimitTable_value__1kdIS\",\"table\":\"LimitTable_table__2yrPv\",\"hidden\":\"LimitTable_hidden__38TGg\",\"search\":\"LimitTable_search__YDrZQ\",\"cell\":\"LimitTable_cell__2qLyf\",\"footer\":\"LimitTable_footer__15g6g\",\"center\":\"LimitTable_center__69LSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__1sbBo\",\"first-container\":\"ClaimReimbursement_first-container__32uSx\",\"groups\":\"ClaimReimbursement_groups__241R5\",\"input\":\"ClaimReimbursement_input___OMPJ\",\"child-container\":\"ClaimReimbursement_child-container__2wtdp\",\"left-side\":\"ClaimReimbursement_left-side__1goqX\",\"right-side\":\"ClaimReimbursement_right-side__38MYX\",\"tables-container\":\"ClaimReimbursement_tables-container__249Qz\",\"wrapper\":\"ClaimReimbursement_wrapper__383Ih\",\"table\":\"ClaimReimbursement_table__1nj02\",\"table-header\":\"ClaimReimbursement_table-header__cQQ21\",\"table-description\":\"ClaimReimbursement_table-description__Pq9Hn\",\"add-link\":\"ClaimReimbursement_add-link__2dL38\",\"row\":\"ClaimReimbursement_row__2HCe3\",\"align\":\"ClaimReimbursement_align__j6IS3\",\"center\":\"ClaimReimbursement_center__S4RER\",\"right\":\"ClaimReimbursement_right__XeAFi\",\"table-total\":\"ClaimReimbursement_table-total__1pp3m\",\"caption\":\"ClaimReimbursement_caption__3TBP1\",\"amount\":\"ClaimReimbursement_amount__rKTYK\",\"sticky\":\"ClaimReimbursement_sticky__3BK9k\",\"grand-total\":\"ClaimReimbursement_grand-total__2N-VA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__21XST\",\"first-container\":\"ClaimReimbursement_first-container__2yvyO\",\"groups\":\"ClaimReimbursement_groups__3nZvd\",\"input\":\"ClaimReimbursement_input__1NZdS\",\"child-container\":\"ClaimReimbursement_child-container__3yEse\",\"tables-container\":\"ClaimReimbursement_tables-container__2uzwJ\",\"left-side\":\"ClaimReimbursement_left-side__3wgYg\",\"wrapper\":\"ClaimReimbursement_wrapper__3iC8w\",\"table\":\"ClaimReimbursement_table__2wVgm\",\"table-header\":\"ClaimReimbursement_table-header__2slfB\",\"table-description\":\"ClaimReimbursement_table-description__3LfKE\",\"add-link\":\"ClaimReimbursement_add-link__2JoUD\",\"row\":\"ClaimReimbursement_row__1UAk9\",\"align\":\"ClaimReimbursement_align__1Kdzp\",\"center\":\"ClaimReimbursement_center__216eV\",\"right\":\"ClaimReimbursement_right__2S_Vn\",\"table-total\":\"ClaimReimbursement_table-total__3nxWO\",\"caption\":\"ClaimReimbursement_caption__2CsGK\",\"amount\":\"ClaimReimbursement_amount__3ImWL\",\"right-side\":\"ClaimReimbursement_right-side__17tpL\",\"sticky\":\"ClaimReimbursement_sticky__105xy\",\"grand-total\":\"ClaimReimbursement_grand-total__2eO_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__19BwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__GmVH1\",\"buttonWrapper\":\"BatchList_buttonWrapper__2sLPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__2m6gY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3O8b6\",\"table\":\"ProcedureList_table__34qBa\",\"table-header\":\"ProcedureList_table-header__3QCTp\",\"table-description\":\"ProcedureList_table-description__3UuvP\",\"add-link\":\"ProcedureList_add-link__2AoGx\",\"row\":\"ProcedureList_row__2Ve69\",\"align\":\"ProcedureList_align__2tPN_\",\"center\":\"ProcedureList_center__1VjsQ\",\"right\":\"ProcedureList_right__3XCbT\",\"discrepancy\":\"ProcedureList_discrepancy__1e3X1\",\"icon-container\":\"ProcedureList_icon-container__oKXTC\",\"table-total\":\"ProcedureList_table-total__2mgqx\",\"caption\":\"ProcedureList_caption__1J0kr\",\"amount\":\"ProcedureList_amount__2l3h5\",\"groups\":\"ProcedureList_groups__3EVV6\",\"input\":\"ProcedureList_input__2KG3R\",\"buttons\":\"ProcedureList_buttons__3CyFH\",\"table-grid\":\"ProcedureList_table-grid__2A8iX\",\"message\":\"ProcedureList_message__9EJOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__1uzvq\",\"groups\":\"ProfessionalFeeForm_groups__1znzB\",\"first-item\":\"ProfessionalFeeForm_first-item__3ANpk\",\"input\":\"ProfessionalFeeForm_input__1qWi3\",\"buttons\":\"ProfessionalFeeForm_buttons__3iX1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__1nFYH\",\"table\":\"ProfessionalFeeList_table__2CEPY\",\"specialization\":\"ProfessionalFeeList_specialization__2Kfae\",\"table-header\":\"ProfessionalFeeList_table-header__1wYMV\",\"table-description\":\"ProfessionalFeeList_table-description__g9VS-\",\"add-link\":\"ProfessionalFeeList_add-link__3nrbv\",\"row\":\"ProfessionalFeeList_row__2xo9x\",\"align\":\"ProfessionalFeeList_align__30_8y\",\"center\":\"ProfessionalFeeList_center__UtGci\",\"right\":\"ProfessionalFeeList_right__2SABv\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1Z6g6\",\"icon-container\":\"ProfessionalFeeList_icon-container__4l6V-\",\"table-total\":\"ProfessionalFeeList_table-total__HUwbc\",\"caption\":\"ProfessionalFeeList_caption__2cbLV\",\"amount\":\"ProfessionalFeeList_amount__2kNXu\",\"groups\":\"ProfessionalFeeList_groups__1176s\",\"input\":\"ProfessionalFeeList_input__2yu47\",\"buttons\":\"ProfessionalFeeList_buttons__1VX4P\",\"table-grid\":\"ProfessionalFeeList_table-grid__2DNz5\",\"message\":\"ProfessionalFeeList_message__h8DGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__1CI_E\",\"escalate\":\"ClaimFooter_escalate__30D6D\",\"header-container\":\"ClaimFooter_header-container__1Btp5\",\"header\":\"ClaimFooter_header__1i337\",\"title\":\"ClaimFooter_title__1NAHG\",\"content\":\"ClaimFooter_content__2GZa0\",\"input\":\"ClaimFooter_input__1hfjc\",\"footer\":\"ClaimFooter_footer__2gbHe\",\"assign\":\"ClaimFooter_assign__3kn3z\",\"to\":\"ClaimFooter_to__nvPCx\",\"action\":\"ClaimFooter_action__mLFex\",\"reassign\":\"ClaimFooter_reassign__1xqIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__33sf3\",\"first-container\":\"ClaimInPatient_first-container__2gCZq\",\"groups\":\"ClaimInPatient_groups__1Cz9S\",\"input\":\"ClaimInPatient_input__3PUnj\",\"child-container\":\"ClaimInPatient_child-container__3OX0C\",\"left-side\":\"ClaimInPatient_left-side__3g4Tb\",\"right-side\":\"ClaimInPatient_right-side__1KzGH\",\"tables-container\":\"ClaimInPatient_tables-container__2Tsqm\",\"wrapper\":\"ClaimInPatient_wrapper__2mNR8\",\"table\":\"ClaimInPatient_table__2gn3O\",\"table-header\":\"ClaimInPatient_table-header__2Sx2G\",\"table-description\":\"ClaimInPatient_table-description__29Zrj\",\"add-link\":\"ClaimInPatient_add-link__1lGRd\",\"row\":\"ClaimInPatient_row__1D4Qo\",\"align\":\"ClaimInPatient_align__2Ulsn\",\"center\":\"ClaimInPatient_center__3RFf5\",\"right\":\"ClaimInPatient_right__VwgTV\",\"table-total\":\"ClaimInPatient_table-total__t7p16\",\"caption\":\"ClaimInPatient_caption__3GCDs\",\"amount\":\"ClaimInPatient_amount__3VBfV\",\"sticky\":\"ClaimInPatient_sticky__WMaZ7\",\"grand-total\":\"ClaimInPatient_grand-total__36ZNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__gOq60\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3wjKw\",\"groups\":\"ClaimOutPatientProcedure_groups__24jrj\",\"input\":\"ClaimOutPatientProcedure_input__32TiB\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2DP7G\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2PMEQ\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2iRHp\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__1ppZU\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1yzW0\",\"table\":\"ClaimOutPatientProcedure_table__1UC1e\",\"table-header\":\"ClaimOutPatientProcedure_table-header__3pQqV\",\"table-description\":\"ClaimOutPatientProcedure_table-description__1_UsW\",\"add-link\":\"ClaimOutPatientProcedure_add-link__3N6Uy\",\"row\":\"ClaimOutPatientProcedure_row__qUjSD\",\"align\":\"ClaimOutPatientProcedure_align__sHOF6\",\"center\":\"ClaimOutPatientProcedure_center__1xZu6\",\"right\":\"ClaimOutPatientProcedure_right__3tzvA\",\"table-total\":\"ClaimOutPatientProcedure_table-total__VEE5p\",\"caption\":\"ClaimOutPatientProcedure_caption__qSby4\",\"amount\":\"ClaimOutPatientProcedure_amount__1zvzk\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2Xd7-\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3bQu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1I6mc\",\"first-container\":\"ClaimOutPatientConsultation_first-container__5h6py\",\"groups\":\"ClaimOutPatientConsultation_groups__NQTI_\",\"input\":\"ClaimOutPatientConsultation_input__2R2_m\",\"child-container\":\"ClaimOutPatientConsultation_child-container__3eWe5\",\"left-side\":\"ClaimOutPatientConsultation_left-side__184gF\",\"right-side\":\"ClaimOutPatientConsultation_right-side__3o07W\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__3iJbh\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2ajzz\",\"table\":\"ClaimOutPatientConsultation_table__4pv54\",\"table-header\":\"ClaimOutPatientConsultation_table-header__3P4Jp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__2e6Hm\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1Ticr\",\"row\":\"ClaimOutPatientConsultation_row__1JvqS\",\"align\":\"ClaimOutPatientConsultation_align__makXE\",\"center\":\"ClaimOutPatientConsultation_center__3Ie9L\",\"right\":\"ClaimOutPatientConsultation_right__gTeyd\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3D0no\",\"caption\":\"ClaimOutPatientConsultation_caption__2MBir\",\"amount\":\"ClaimOutPatientConsultation_amount__3pIys\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1DAFY\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__1-tgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__3lESZ\",\"text-fields\":\"PaymentRequestPage_text-fields__2HVGB\",\"sub-container\":\"PaymentRequestPage_sub-container__3pZtL\",\"input-container\":\"PaymentRequestPage_input-container__1YBoN\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__SVU-e\",\"table-container\":\"PaymentRequestPage_table-container__13AOW\",\"headers\":\"PaymentRequestPage_headers__3Uo50\",\"header\":\"PaymentRequestPage_header__1bcNZ\",\"submit-header\":\"PaymentRequestPage_submit-header__1W0nt\",\"dialog-container\":\"PaymentRequestPage_dialog-container__3Iork\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__37_w4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__28nD-\",\"header\":\"PartnerNetwork_header__2ivra\",\"search\":\"PartnerNetwork_search__2t7aN\",\"table\":\"PartnerNetwork_table__220LN\",\"hidden\":\"PartnerNetwork_hidden__tCf0J\",\"cell\":\"PartnerNetwork_cell__2Mv5F\",\"doctors\":\"PartnerNetwork_doctors__1POnD\",\"header-container\":\"PartnerNetwork_header-container__2qsSV\",\"title\":\"PartnerNetwork_title__2-tcg\",\"content\":\"PartnerNetwork_content__3UWZv\",\"center\":\"PartnerNetwork_center__wFHaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__2v-Iq\",\"first-container\":\"ClaimInPatient_first-container__OXZr8\",\"groups\":\"ClaimInPatient_groups__lcOua\",\"input\":\"ClaimInPatient_input__3jdIQ\",\"child-container\":\"ClaimInPatient_child-container__QIIuT\",\"tables-container\":\"ClaimInPatient_tables-container__LqKij\",\"left-side\":\"ClaimInPatient_left-side__Tq7gv\",\"wrapper\":\"ClaimInPatient_wrapper__ZH-92\",\"table\":\"ClaimInPatient_table__dew6o\",\"table-header\":\"ClaimInPatient_table-header__FsuTv\",\"table-description\":\"ClaimInPatient_table-description__1Fe9U\",\"add-link\":\"ClaimInPatient_add-link__346Cy\",\"row\":\"ClaimInPatient_row__2KCab\",\"align\":\"ClaimInPatient_align__1955S\",\"center\":\"ClaimInPatient_center__VQv4W\",\"right\":\"ClaimInPatient_right__3L7S3\",\"table-total\":\"ClaimInPatient_table-total__jZtXf\",\"caption\":\"ClaimInPatient_caption__1E9EL\",\"amount\":\"ClaimInPatient_amount__2KocC\",\"right-side\":\"ClaimInPatient_right-side__3ajwn\",\"sticky\":\"ClaimInPatient_sticky__2ebbG\",\"grand-total\":\"ClaimInPatient_grand-total__xFw4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__37MO9\",\"first-container\":\"ClaimOutPatientProcedure_first-container__13vV3\",\"groups\":\"ClaimOutPatientProcedure_groups__2gG1u\",\"input\":\"ClaimOutPatientProcedure_input__3AC30\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2u8xk\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__eGzg4\",\"left-side\":\"ClaimOutPatientProcedure_left-side__3C9TS\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__16Yv8\",\"table\":\"ClaimOutPatientProcedure_table__12U0M\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1JvHk\",\"table-description\":\"ClaimOutPatientProcedure_table-description__oSDoe\",\"add-link\":\"ClaimOutPatientProcedure_add-link__bxevU\",\"row\":\"ClaimOutPatientProcedure_row__2AgNm\",\"align\":\"ClaimOutPatientProcedure_align__2_YV2\",\"center\":\"ClaimOutPatientProcedure_center__D37q1\",\"right\":\"ClaimOutPatientProcedure_right__1XohB\",\"table-total\":\"ClaimOutPatientProcedure_table-total__1JfT3\",\"caption\":\"ClaimOutPatientProcedure_caption__zHxB5\",\"amount\":\"ClaimOutPatientProcedure_amount__2-LZR\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2fKwq\",\"sticky\":\"ClaimOutPatientProcedure_sticky__24mpW\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__1r2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__27aGh\",\"first-container\":\"ClaimOutPatientConsultation_first-container__2jxrr\",\"groups\":\"ClaimOutPatientConsultation_groups__3XWG-\",\"input\":\"ClaimOutPatientConsultation_input__62Yw0\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1FM9P\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__kpByP\",\"left-side\":\"ClaimOutPatientConsultation_left-side__2Fi3P\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2-nz3\",\"table\":\"ClaimOutPatientConsultation_table__3IuV2\",\"table-header\":\"ClaimOutPatientConsultation_table-header__BF9Bp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1ZXuv\",\"add-link\":\"ClaimOutPatientConsultation_add-link__2Qq6L\",\"row\":\"ClaimOutPatientConsultation_row__fXDHe\",\"align\":\"ClaimOutPatientConsultation_align__2_uM2\",\"center\":\"ClaimOutPatientConsultation_center__3k5RP\",\"right\":\"ClaimOutPatientConsultation_right__2-rsT\",\"table-total\":\"ClaimOutPatientConsultation_table-total__1MwcL\",\"caption\":\"ClaimOutPatientConsultation_caption__37p4X\",\"amount\":\"ClaimOutPatientConsultation_amount__2b19u\",\"right-side\":\"ClaimOutPatientConsultation_right-side__O3yFh\",\"sticky\":\"ClaimOutPatientConsultation_sticky__ToHiR\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__13Qul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3VPur\",\"root\":\"PdfViewer2_root__29H9D\",\"controls\":\"PdfViewer2_controls__2l3Du\",\"control\":\"PdfViewer2_control__3VcZS\",\"disabled\":\"PdfViewer2_disabled__bNT53\",\"pdf\":\"PdfViewer2_pdf__2PQdd\",\"page-number\":\"PdfViewer2_page-number__HnONp\",\"file-name\":\"PdfViewer2_file-name__1ruAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2wVSO\",\"groups\":\"HospitalItemForm_groups__1Fg5M\",\"first-item\":\"HospitalItemForm_first-item__2ePcz\",\"input\":\"HospitalItemForm_input__1mYF_\",\"buttons\":\"HospitalItemForm_buttons__37mLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__15jC2\",\"table\":\"HospitalItemList_table__3yh5r\",\"table-header\":\"HospitalItemList_table-header__3RZl4\",\"table-description\":\"HospitalItemList_table-description__364M7\",\"add-link\":\"HospitalItemList_add-link__Xdz4i\",\"row\":\"HospitalItemList_row__1If2d\",\"align\":\"HospitalItemList_align__3ghha\",\"center\":\"HospitalItemList_center__3LdSG\",\"right\":\"HospitalItemList_right__2swK1\",\"discrepancy\":\"HospitalItemList_discrepancy__3KCEE\",\"icon-container\":\"HospitalItemList_icon-container__2YuKZ\",\"table-total\":\"HospitalItemList_table-total__zx-JI\",\"caption\":\"HospitalItemList_caption__37q7e\",\"amount\":\"HospitalItemList_amount__1uGS2\",\"groups\":\"HospitalItemList_groups__B6ozB\",\"input\":\"HospitalItemList_input__1lx7g\",\"buttons\":\"HospitalItemList_buttons__1PYeO\",\"table-grid\":\"HospitalItemList_table-grid__3rmkl\",\"message\":\"HospitalItemList_message__1XsB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__2RjZ-\",\"first-container\":\"ClaimEmergency_first-container__3U3WQ\",\"groups\":\"ClaimEmergency_groups__2XAPr\",\"input\":\"ClaimEmergency_input__gRc92\",\"child-container\":\"ClaimEmergency_child-container__NS33H\",\"left-side\":\"ClaimEmergency_left-side__NaeJ8\",\"right-side\":\"ClaimEmergency_right-side__1-rH1\",\"tables-container\":\"ClaimEmergency_tables-container__Udvra\",\"wrapper\":\"ClaimEmergency_wrapper__3AdEy\",\"table\":\"ClaimEmergency_table__zDVzz\",\"table-header\":\"ClaimEmergency_table-header__3OOKd\",\"table-description\":\"ClaimEmergency_table-description__JeGzv\",\"add-link\":\"ClaimEmergency_add-link__2cF2u\",\"row\":\"ClaimEmergency_row__1UVHF\",\"align\":\"ClaimEmergency_align__3Lhvw\",\"center\":\"ClaimEmergency_center__2fNnf\",\"right\":\"ClaimEmergency_right__2GSG2\",\"table-total\":\"ClaimEmergency_table-total__3Ryh1\",\"caption\":\"ClaimEmergency_caption__WVnQP\",\"amount\":\"ClaimEmergency_amount__YNnko\",\"sticky\":\"ClaimEmergency_sticky__2Kh0X\",\"grand-total\":\"ClaimEmergency_grand-total__2qSI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3DdFv\",\"first-container\":\"ClaimEmergency_first-container__2ExBv\",\"groups\":\"ClaimEmergency_groups___-BUP\",\"input\":\"ClaimEmergency_input__26-7y\",\"child-container\":\"ClaimEmergency_child-container__RkcSX\",\"tables-container\":\"ClaimEmergency_tables-container__2NU11\",\"left-side\":\"ClaimEmergency_left-side__3Ejv9\",\"wrapper\":\"ClaimEmergency_wrapper__2KVY3\",\"table\":\"ClaimEmergency_table__3b9Gx\",\"table-header\":\"ClaimEmergency_table-header__1VXvx\",\"table-description\":\"ClaimEmergency_table-description__Z5jRp\",\"add-link\":\"ClaimEmergency_add-link__g5KU5\",\"row\":\"ClaimEmergency_row__1WDes\",\"align\":\"ClaimEmergency_align__2TR6m\",\"center\":\"ClaimEmergency_center__1W0ME\",\"right\":\"ClaimEmergency_right__1XxHA\",\"table-total\":\"ClaimEmergency_table-total__1Gg-W\",\"caption\":\"ClaimEmergency_caption__1uZX4\",\"amount\":\"ClaimEmergency_amount__3lbzz\",\"right-side\":\"ClaimEmergency_right-side__2ecDG\",\"sticky\":\"ClaimEmergency_sticky__2QKl_\",\"grand-total\":\"ClaimEmergency_grand-total__SbpYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__J7-_W\",\"groups\":\"ProcedureForm_groups__1wdPR\",\"input\":\"ProcedureForm_input__3f_i3\",\"buttons\":\"ProcedureForm_buttons__23tX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__jSz04\",\"wrapper\":\"ChatBox_wrapper__8Ky8P\",\"header\":\"ChatBox_header__2Jxo1\",\"title\":\"ChatBox_title__2o9Pe\",\"body\":\"ChatBox_body__3mZqA\",\"messages\":\"ChatBox_messages__3qxpg\",\"split\":\"ChatBox_split__3mlzt\",\"balloon\":\"ChatBox_balloon__3gLgq\",\"mheader\":\"ChatBox_mheader__180Pj\",\"sender\":\"ChatBox_sender__18Tx1\",\"time\":\"ChatBox_time__1ZHnb\",\"mbody\":\"ChatBox_mbody__17auY\",\"content\":\"ChatBox_content__m09Ig\",\"receive\":\"ChatBox_receive__1At1g\",\"me\":\"ChatBox_me__1pGgD\",\"placeholder\":\"ChatBox_placeholder__2If2H\"};","import { library } from '@fortawesome/fontawesome-svg-core'\n\n// ist of font that will use\nimport {\n  faHome,\n  faBoxOpen,\n  faBookOpen,\n  faTools,\n  faFileAlt,\n  faExclamationCircle,\n  faBalanceScale,\n  faEdit,\n  faTrash,\n  faSave,\n  faPrint,\n  faSearchPlus,\n  faSearchMinus,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faCalendarDay\n} from '@fortawesome/free-solid-svg-icons'\n\nconst FontAwesomeLibrary = {\n  init: () => {\n    library.add(\n      faHome,\n      faBoxOpen,\n      faBookOpen,\n      faTools,\n      faFileAlt,\n      faExclamationCircle,\n      faBalanceScale,\n      faEdit,\n      faTrash,\n      faSave,\n      faPrint,\n      faSearchPlus,\n      faSearchMinus,\n      faArrowAltCircleRight,\n      faArrowAltCircleLeft,\n      faCalendarDay\n    )\n  }\n}\n\nexport default FontAwesomeLibrary\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\n\nimport classes from './CustomTextField.module.scss'\nexport default function CustomTextField (props) {\n  const { label = '', required, readOnly, constainerStyle = {}, error, onChange, type, ...other } = props\n  const { value = '' } = props\n\n  const [_error, setError] = React.useState()\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n    if (typeof value === 'number') {\n      if (value <= 0) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = e => {\n    setError()\n    if (typeof onChange === 'function') onChange(e)\n  }\n\n  return (\n    <div className={classes.root} style={constainerStyle}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${_error && classes['has-error']}`}>\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                type={type}\n                {...other}\n                autoComplete='off'\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function GenerateFormData (data) {\n  const formData = new FormData()\n  Object.keys(data).map((item, index) => {\n    if (Array.isArray(data[item])) {\n      data[item].map(_item => {\n        const value = typeof _item === 'object' ? JSON.stringify(_item) : _item\n        formData.append(`${item}[]`, value)\n      })\n    } else {\n      const value = typeof data[item] === 'object' ? JSON.stringify(data[item]) : data[item]\n      formData.append(item, value)\n    }\n  })\n\n  return formData\n}\n","export const setPageTitle = payload => {\n  return {\n    type: 'SET_DASHBOARD_PAGE_TITLE',\n    payload\n  }\n}\n","export const setSnackbar = payload => {\n  return {\n    type: 'SET_SNACKBAR',\n    payload\n  }\n}\n","export const setPdf = payload => {\n  return {\n    type: 'SET_PDF',\n    payload\n  }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertTitle from '@material-ui/lab/AlertTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSnackbar } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './SnackbarComponent.module.scss'\n\nlet dispatch = null\n\nconst SnackbarComponent = () => {\n  const snackbar = useSelector(state => state.snackbar)\n  dispatch = useDispatch()\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return\n\n    dispatch(setSnackbar({ open: false }))\n  }\n\n  return (\n    <Snackbar\n      className={classes.root}\n      open={snackbar.open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n    >\n      <div>\n        <Alert\n          elevation={6}\n          variant='filled'\n          severity={snackbar.severity}\n          action={\n            <IconButton aria-label='delete' className={classes.icon} onClick={handleClose}>\n              <CloseIcon fontSize='small' />\n            </IconButton>\n          }\n        >\n          <AlertTitle>Error</AlertTitle>\n          {snackbar.message}\n        </Alert>\n      </div>\n    </Snackbar>\n  )\n}\n\nconst SnackbarService = {\n  set: args => dispatch(setSnackbar(args))\n}\n\nexport { SnackbarComponent, SnackbarService }\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setpageLoading } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './LoadingComponent.module.scss'\n\nlet dispatch = null\n\nconst LoadingComponent = ({ onScrollContainer, containerNode }) => {\n  const [containerStyle, setContainerStyle] = React.useState({})\n\n  React.useEffect(() => {\n    if (containerNode) {\n      const { top, left } = containerNode.getBoundingClientRect()\n      setContainerStyle({ top: `${top}px`, left: `${left}px` })\n    }\n  }, [containerNode])\n\n  dispatch = useDispatch()\n  const loading = useSelector(state => state.pageLoading)\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.root} style={containerStyle} onWheel={onScrollContainer}>\n          <div className={classes.overlay} />\n          <CircularProgress className={classes.loading} size={50} />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst LoadingService = {\n  loading: value => dispatch(setpageLoading(value))\n}\n\nexport { LoadingComponent, LoadingService }\n","export const setpageLoading = payload => {\n  return {\n    type: 'SET_PAGE_LOADING',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst ErrorPage = props => {\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        Page not found\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        We cant seem to find the page you're looking for.\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst ErrorPageInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst ErrorPageService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { ErrorPageInit, ErrorPage, ErrorPageService }\n","const ExcludeErrorConstants = {\n  '404': 'X-404',\n  all: 'X-All'\n}\nconst exclude = ({ headers, status }) => !!headers[ExcludeErrorConstants[status]]\n\nexport { exclude, ExcludeErrorConstants }\n","import { SnackbarService } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { ErrorPageService } from 'SharedComponents/404/404'\n\nimport { exclude } from './exclude'\n\nconst handler = {\n  success: response => response,\n  fail: error => {\n    const { response, config } = error\n\n    if (!exclude({ headers: config.headers, status: 'all' })) {\n      if (response) {\n        const { status } = response\n\n        if (status >= 500 && status < 600) {\n          // Internal Server Error\n          SnackbarService.set({ open: true, message: 'Something went wrong!', severity: 'error' })\n        } else if (status === 404) {\n          // Resource not found\n          if (!exclude({ headers: response.config.headers, status })) {\n            ErrorPageService.redirect()\n          }\n        }\n      } else {\n        // No Internet\n        SnackbarService.set({ open: true, message: 'No internet connection!', severity: 'error' })\n      }\n    }\n\n    LoadingService.loading(false)\n\n    return Promise.reject(error)\n  }\n}\n\nexport default handler\n","import axios from 'axios'\nimport GenerateFormData from 'Utilities/GenerateFormData'\nimport ErrorHandler from 'Services/ErrorHandler'\n\nconst addToken = (data = {}) => !(data.hasOwnProperty('isAuthorized') && !data.isAuthorized)\n\nconst createInstance = (url = '') => {\n  let instance = axios.create()\n  let baseURL = null\n\n  instance.interceptors.request.use(request => {\n    // Do something before request is sent\n    if (!baseURL) {\n      baseURL = window.localStorage.partnerUrl\n        ? window.localStorage.partnerUrl + url\n        : `${process.env.REACT_APP_SERVER_API}${url}`\n\n      if (url === '/client' || url === '/icd') {\n        baseURL = window.localStorage.clientUrl || `${process.env.REACT_APP_CLIENT_API}/`\n        baseURL = baseURL.replace('/api/', '/')\n      }\n    }\n\n    request.baseURL = baseURL\n\n    const { data } = request\n\n    if (addToken(data)) request.headers['Authorization'] = `Bearer ${window.localStorage.getItem('token')}`\n\n    if (data) delete data.isAuthorized\n\n    if (data && !request.headers['skip_generate_form_data']) request.data = GenerateFormData(data)\n\n    // Check if login is made via hims-app and not awb-only app\n    // if (window.localStorage.getItem('hims_login') === 'true') {\n    //   request.headers['X-Hims-App'] = 'hims-app'\n    // }\n\n    return request\n  })\n\n  instance.interceptors.response.use(ErrorHandler.success, ErrorHandler.fail)\n\n  return instance\n}\n\nexport default createInstance\n","import instance from './instance'\nconst axios = instance()\nconst axiosClient = instance('/client')\nexport default class CommonServices {\n  // static login (data) {\n  //   return axios({\n  //     url: '/auth/login',\n  //     method: 'POST',\n  //     data: { ...data, isAuthorized: false }\n  //   })\n  // }\n\n  static login (data) {\n    return axiosClient({\n      url: '/api/login',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data: { ...data, isAuthorized: false }\n    })\n  }\n\n  static logout (data) {\n    return axiosClient({\n      url: '/api/logout',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data\n    })\n  }\n  static getMe (data) {\n    return axios({\n      url: '/me',\n      method: 'GET'\n    })\n  }\n}\n","export default class IndexedDb2 {\n  static async connect ({ dbName, stores = [], version = 1 }) {\n    return new Promise((resolve, reject) => {\n      let request = window.indexedDB.open(dbName/*, version */)\n\n      request.onupgradeneeded = function (event) {\n        const db = event.target.result\n\n        for (let store of stores) {\n          db.objectStoreNames.contains(store) || db.createObjectStore(store, { keyPath: 'key' })\n        }\n      }\n\n      request.onsuccess = function (event) {\n        const db = event.target.result\n        resolve(db)\n      }\n      request.onerror = function (event) {\n        console.log('[onerror]', request.error)\n        reject(request.error)\n      }\n    })\n  }\n\n  static async update ({ db, storeName, mode = 'readwrite', data }) {\n    const transaction = db.transaction(storeName, mode)\n    const objectStore = transaction.objectStore(storeName)\n    const { keyPath } = objectStore\n    for (let key in data) objectStore.put({ [keyPath]: key, value: data[key] })\n  }\n\n  static async getData ({ db, storeName }) {\n    const transaction = db.transaction(storeName, 'readonly')\n    const objectStore = transaction.objectStore(storeName)\n\n    return new Promise(resolve => {\n      objectStore.getAll().onsuccess = function (event) {\n        resolve(event.target.result)\n      }\n    })\n  }\n}\n","import IndexedDb2 from 'Utilities/IndexedDb2'\n\nconst dbName = 'himsDb'\nconst stores = ['user_data', 'config']\n\nexport default class ConfigController2 {\n  static async getUserManagementData () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'user_data' })\n\n    if (!result.length) return\n\n    let user_data = {}\n\n    for (let i of result) user_data[i.key] = i.value\n\n    return user_data\n  }\n\n  static async setUserManagementData (data) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    await IndexedDb2.update({ db, storeName: 'user_data', data })\n  }\n\n  static async initializeBaseUrls () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'config' })\n\n    if (!result.length) return\n\n    let config = {}\n\n    for (let i of result) config[i.key] = i.value\n\n    if (config['PARTNER_URL'] && config['PARTNER_URL']) {\n      window.localStorage.partnerUrl = config['PARTNER_URL']\n    }\n\n    if (config['CLIENT_URL'] && config['CLIENT_URL']) {\n      window.localStorage.clientUrl = config['CLIENT_URL']\n    }\n  }\n}\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n// import TextField from '@material-ui/core/TextField'\n// import Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\n\nimport { to } from 'await-to-js'\nimport CommonServices from 'Services/Api/CommonServices'\n\n// import { ConfigController } from 'Controllers/ConfigController'\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nimport classes from './LoginPage.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function LoginPage ({ history }) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [user, setUser] = React.useState({ username: '', password: '' })\n  const [loginError, setLoginError] = React.useState({\n    show: false,\n    message: ''\n  })\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Login'\n  }, [])\n\n  const submit = async event => {\n    event.preventDefault()\n    setDisableControls(true)\n\n    const [err, res] = await to(CommonServices.login(user))\n\n    if (err) {\n      setDisableControls(false)\n      let message = 'Login Failed!'\n      try {\n        message = err.response.data.message\n      } catch (ex) {}\n\n      setLoginError({ show: true, message: message })\n    } else {\n      const { login } = res.data\n\n      await ConfigController2.setUserManagementData(login)\n\n      window.localStorage.setItem('from_login', true)\n      history.push('/')\n    }\n  }\n\n  return (\n    <Grid container>\n      <Grid item container xs={8} />\n      <Grid item container xs={3} direction='column' justify='center' alignItems='flex-start'>\n        <Grid item container className={classes.logo} alignItems='flex-end' justify='center'>\n          <img src={images.logo} alt='logo' />\n        </Grid>\n        <Grid item>\n          <Paper className={classes.container}>\n            <Typography variant='h5'>Intellicare HIMS</Typography>\n\n            <Typography variant='caption' className={`${classes.error} ${!loginError.show ? classes.hidden : ''}`}>\n              {loginError.message}\n            </Typography>\n\n            <form className={classes.form}>\n              <CustomTextField\n                id='username'\n                label='Username'\n                disabled={disableControls}\n                onChange={e => setUser({ ...user, username: e.target.value })}\n              />\n\n              <CustomTextField\n                id='password'\n                label='Password'\n                type='password'\n                disabled={disableControls}\n                onChange={e => setUser({ ...user, password: e.target.value })}\n              />\n\n              <Button\n                type='submit'\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                disabled={disableControls}\n                onClick={submit}\n              >\n                Login\n              </Button>\n\n              <div className={classes['forgot-password']}>\n                <Link href='https://fb.com'>Forgot your password?</Link>\n              </div>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item container>\n          <Typography className={classes.note}>\n            Problems logging in? Please <a href='./'>contact your IT Team</a> for assistance.\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\n\n// Styles\nimport styles from './HeaderComponent.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function HeaderComponent ({ logout }) {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  return (\n    <Grid item container className={styles.root}>\n      <Grid item className={styles['left-container']}>\n        <img src={images.logo} alt='logo' />\n      </Grid>\n      <Grid item className={styles['right-container']}>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n\n        <Avatar alt='avatar' src={images.avatar} className={styles.avatar} />\n        <IconButton\n          aria-controls='simple-menu'\n          aria-haspopup='true'\n          onClick={event => setAnchorEl(event.currentTarget)}\n        >\n          <ArrowDropDown />\n        </IconButton>\n\n        <Menu\n          id='header-menu'\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          keepMounted\n          onClose={() => setAnchorEl(null)}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSidebarItems } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './SideBarComponent.module.scss'\n\nlet dispatch = null\n\nconst SideBarComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.sidebar)\n\n  return (\n    <div className={classes.root}>\n      <Scrollbars className={classes.menu}>\n        {items.map(item => (\n          <Link to={item.to} className={classes.item} key={item.to}>\n            <div className={classes.circle}>\n              <FontAwesomeIcon icon={item.icon} className={classes.icon} />\n            </div>\n            {item.label ? <span className={classes.text}>{item.label}</span> : ''}\n          </Link>\n        ))}\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='tools' className={classes.icon} />\n          </div>\n          <span className={classes.text}>Settings</span>\n        </Link>\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='book-open' className={classes.icon} />\n          </div>\n          {/* <span className={classes.text}>Settings</span> */}\n        </Link>\n      </Scrollbars>\n    </div>\n  )\n}\n\nconst SideBarService = {\n  setItems: items => {\n    dispatch(setSidebarItems(items))\n  }\n}\n\nexport { SideBarComponent, SideBarService }\n","export const setSidebarItems = payload => {\n  return {\n    type: 'SET_SIDEBAR_ITEMS',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageTitle } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './PageTitleComponent.module.scss'\n\nlet dispatch = null\n\nconst PageTitleComponent = () => {\n  dispatch = useDispatch()\n  const pageTitle = useSelector(state => state.pageTitle)\n  return (\n    <div className={classes.root}>\n      <Typography variant='h6' className={classes.title} id='dashboard-page-title'>\n        {pageTitle.text}\n      </Typography>\n\n      {pageTitle.status && (\n        <span\n          className={`${classes.status}`}\n          style={{ color: pageTitle.status.color, borderColor: pageTitle.status.color }}\n        >\n          {pageTitle.status.text}\n        </span>\n      )}\n    </div>\n  )\n}\n\nconst PageTitleService = (text, status = null) => {\n  dispatch(setPageTitle({ text, status }))\n}\n\nexport { PageTitleComponent, PageTitleService }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setBreadcrumbsItems, setSelectedBreadcrumbs } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './BreadcrumbsComponent.module.scss'\n\nlet dispatch = null\n\nconst BreadcrumbsComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.breadcrumbs.selected)\n  return (\n    <Breadcrumbs aria-label='breadcrumb' className={classes.root}>\n      {items.map((item, index) => {\n        if (index !== items.length - 1) {\n          return (\n            <Link to={item.to} className={classes.item} key={index}>\n              <Typography variant='body2'>{item.text}</Typography>\n            </Link>\n          )\n        } else {\n          return (\n            <Typography color='textPrimary' variant='body2' key={index}>\n              {item.text}\n            </Typography>\n          )\n        }\n      })}\n    </Breadcrumbs>\n  )\n}\n\nconst BreadcrumbsService = {\n  setItems: items => dispatch(setBreadcrumbsItems(items)),\n  setSelectedItems: items => dispatch(setSelectedBreadcrumbs(items))\n}\n\nexport { BreadcrumbsComponent, BreadcrumbsService }\n","export const setBreadcrumbsItems = payload => {\n  return {\n    type: 'SET_BREADCRUMBS_ITEMS',\n    payload\n  }\n}\n\nexport const setSelectedBreadcrumbs = payload => {\n  return {\n    type: 'SET_SELECTED_BREADCRUMBS',\n    payload\n  }\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfViewer2Component = () => {\n  dispatch = useDispatch()\n\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n\n  React.useEffect(() => {\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n    setFile()\n  }\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <Dialog fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        <div className={classes.root}>\n          <div className={classes.controls}>\n            <Typography className={classes['file-name']} align='left'>\n              {name}\n            </Typography>\n            <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n            <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom in' className={classes.control}>\n              <span>\n                <IconButton onClick={() => setScale(scale + 0.2)}>\n                  <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom out' className={classes.control}>\n              <span>\n                <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n                  <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={print}>\n                  <FontAwesomeIcon icon='print' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={download}>\n                  <FontAwesomeIcon icon='save' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </div>\n\n          <div className={classes.pdf}>\n            <Document\n              file={file}\n              onLoadSuccess={document => {\n                setNumPages(document.numPages)\n              }}\n            >\n              <Page pageNumber={pageNumber} scale={scale} />\n            </Document>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Component, PdfViewer2Service }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n      />\n    </Paper>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nexport { CurrencyFormatter, DigitFormatter, UpperWord, DateFormatter, DateFormatterFromNow }\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for bundle number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    {category === 'created' && 'Update'}\n                    {category === 'submitted' && 'View'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport * as moment from 'moment'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [bundles, setBundles] = React.useState({\n    created: { count: 0, data: [] },\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Created Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'created', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const createdBundles = batchResponse.data.data.results\n\n      const createdBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, created: { data: createdBundles, count: createdBundleCount } }))\n    })\n\n    //* Submitted Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'submitted', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const submittedBundles = batchResponse.data.data.results\n\n      const submittedBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, submitted: { data: submittedBundles, count: submittedBundleCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    BatchEncodingServices.getBundles({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBundles(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Bundles`), category })\n    BatchEncodingServices.getBundles({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingServices.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: bundles.created.count, id: 'created-count' }}\n              sizes={{ sm: 12 }}\n              title='Created Bundles'\n              id='created-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('created')}\n                  id='created-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              actionHeader={\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  onClick={generateBundleNumber}\n                  id='create-new-bundle'\n                >\n                  Create New Bundle\n                </Button>\n              }\n              onFilterChange={handleFilterChange('created')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='created-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='created-due-date'>Due Date</TableCell>\n                    <TableCell id='created-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.created.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`created-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                            Update\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: bundles.submitted.count, id: 'submitted-count' }}\n              sizes={{ sm: 12 }}\n              title='Submitted Bundles'\n              id='submitted-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('submitted')}\n                  id='submitted-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('submitted')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='submitted-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='submitted-due-date'>Due Date</TableCell>\n                    <TableCell id='submitted-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.submitted.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`submitted-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={0}\n            title='Open Tickets'\n            // viewAll={{ to: '/batches?category=open', caption: 'View List' }}\n            viewAllLink={{ to: '/batches?category=open', caption: '' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\nimport * as moment from 'moment'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nconst useStyles = makeStyles(theme => ({\n  searchAndAddContainer: {\n    padding: '0 0 10px 0'\n  },\n  addButton: {\n    width: 200\n  }\n}))\n\nconst SearchAndAdd = ({ classes }) => {\n  return (\n    <Grid item container alignItems='center' wrap='nowrap' className={classes.searchAndAddContainer}>\n      <Grid item xs={12}>\n        <SearchTextComponent />\n      </Grid>\n\n      <Grid item container className={classes.addButton} justify='flex-end'>\n        <Link to='/bundles/create'>\n          <Button color='primary' size='medium'>\n            + Add new bundle\n          </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst BundleList = ({ bundle = [], rowClick }) => {\n  return (\n    <Paper className='table'>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Bundle No.</TableCell>\n            <TableCell>SOA No.</TableCell>\n            <TableCell>Medical Partner ID</TableCell>\n            <TableCell>Facility Name</TableCell>\n            <TableCell>Doctor's Name</TableCell>\n            <TableCell>Total # of Batch</TableCell>\n            <TableCell>Date Received</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell>Status </TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {bundle.items && bundle.items.results\n            ? bundle.items.results.slice(0, 10).map(i => (\n              <TableRow hover key={i.bundle_number} onClick={event => rowClick(i.bundle_number)}>\n                <TableCell>{i.bundle_number}</TableCell>\n                <TableCell>{i.soa_number}</TableCell>\n                <TableCell>{i.facility_id}</TableCell>\n                <TableCell>{i.facility_name}</TableCell>\n                <TableCell>{i.doctor_name}</TableCell>\n                <TableCell>{i.totalNumberOfBatch || 0}</TableCell>\n                <TableCell>{moment(i.date_received).format('MM/DD/YYYY')}</TableCell>\n                <TableCell>\n                  {moment(i.date_received)\n                    .add(30, 'days')\n                    .format('MM/DD/YYYY')}\n                </TableCell>\n                <TableCell>{i.status}</TableCell>\n              </TableRow>\n            ))\n            : null}\n        </TableBody>\n      </Table>\n\n      {bundle.fetching ? (\n        <Grid container className='table-loading'>\n          <span>Fetching Data...</span>\n        </Grid>\n      ) : (\n        ''\n      )}\n\n      {!bundle.fetching && !bundle.items.length ? (\n        <Grid container className='table-no-data'>\n          <span>No data</span>\n        </Grid>\n      ) : (\n        ''\n      )}\n    </Paper>\n  )\n}\n\nexport default function BundlesPage (props) {\n  PageTitleService('Dashboard')\n  BreadcrumbsService.setSelectedItems(['dashboard'])\n\n  const [bundle, setBundles] = React.useState({ fetching: true, items: [] })\n\n  React.useEffect(() => {\n    BatchEncodingServices.getBundles().then(res => {\n      setBundles({ fetching: false, items: res.data.data })\n    })\n  }, [])\n  const rowClick = bundle_number => {\n    props.history.push(`/bundles/${bundle_number}`)\n  }\n\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <SearchAndAdd classes={classes} />\n      <BundleList bundle={bundle} rowClick={rowClick} />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [_error, setError] = React.useState()\n  const [focus, setFocus] = React.useState()\n  // const [isItemClick, setIsItemClick] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['autocomplete-field']} ${_error && classes['has-error']}`} onBlur={handleBlur}>\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const { id, label, required, value, format, readOnly, onChange, error, ...other } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n  }\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n                    <InputBase id={id} className={classes.input} value={p.value} />\n\n                    <div className={classes['date-button']}>\n                      <IconButton className={classes.button} size='small' onClick={() => setOpen(true)}>\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                // {...other}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport * as moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) { }\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {checkAll && (\n                  <TableCell padding='checkbox'>\n                    {allowCheck ? (\n                      <Checkbox\n                        disabled={allowCheckDisabled}\n                        indeterminate={indeterminate}\n                        checked={checked}\n                        onChange={handleSelectAllClick}\n                        color={checkboxColor}\n                      />\n                    ) : null}\n                  </TableCell>\n                )}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button onClick={onCancel} variant='contained' color='primary' className='button-negative'>\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button onClick={onOk} variant='contained' color='primary' className='button-positive' autoFocus>\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    onOpen,\n    deleteStatus,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this Batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these Batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        allowCheck\n        allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                  <Checkbox\n                    color='default'\n                    disabled={Boolean(isBundleCompleted)}\n                    checked={i.selected}\n                    onClick={event => handleClick({ index, batch })}\n                  />\n                </TableCell>\n                <TableCell id={`batch-no-${i}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i}`}>{i.total_rcs}</TableCell>\n                {!deleteStatus && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This Batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const { id, label = '', required, items = [], readOnly, onChange, disableComponents = false, error, ...other } = props\n  const { value = '' } = props\n\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${_error && classes['has-error']} ${disableComponents &&\n                classes.disabled}`}\n            >\n              <Select\n                id={id}\n                onChange={handleChange}\n                classes={{ root: classes.select }}\n                input={<InputBase className={classes.input} />}\n                {...other}\n                disabled={disableComponents}\n              >\n                {items.map((item, index) => (\n                  <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                    {item.text}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .required()\n    .greater(0)\n    .less(100000000),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export const setSelectedBatch = payload => {\n  return {\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport * as moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setShowBatchForm, setSelectedBatch, setSaveBatchControl } from '../../Store/actions'\n\n// const claim_types = [\n//   { value: 'In Patient', text: 'In Patient' },\n//   { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n//   { value: 'Out Patient Consultation', text: 'Out Patient Consultation' }\n// ]\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(state => state.batch.selected)\n  const show = useSelector(state => state.batch.show)\n  const action = useSelector(state => state.batch.action)\n  const suggestions = useSelector(state => state.suggestions)\n  const saveControl = useSelector(state => state.batch.saveControl)\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = value => {\n    const { error } = BatchFormValidator(value)\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    const hasError = validate({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes\n    })\n\n    if (hasError) return\n    onSave(batch)\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={handleOnSave}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from '../../Components/BundleDetails/BundleDetails'\nimport BatchList from '../../Components/BatchList/BatchList'\nimport BatchForm from '../../Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} from '../../Store/actions'\n\n// Validator\nimport BundleValidator from './BundleValidator'\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n      BreadcrumbsService.setSelectedItems(['dashboard', 'bundles', `specificBundle:${bundle_number}`])\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  const cancelBundle = () => props.history.push(`/`)\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: '',\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    console.log(error)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent />\n              {bundle.status === 'IN_PROGRESS' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              deleteStatus={submitStatus}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={() =>\n                  setOpenBundleDialog(state => ({\n                    ...state,\n                    show: true,\n                    message: 'Are you sure you want to submit?',\n                    handleOnOk: handleOnSubmit\n                  }))\n                }\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport * as moment from 'moment'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: '',\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field, selectedIndex } = args\n    console.log(args)\n    setNewBundle(state => ({ ...state, [field]: value }))\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'bundles', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-bundle-number'\n            label='Bundle No.'\n            value={newBundle.bundle_number}\n            fullWidth\n            disabled\n            error={errors.bundle_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldNumber\n            id='create-new-bundle-total-rcs'\n            required\n            label='Total No. of RCS'\n            value={newBundle.total_rcs}\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-date-received'\n            label='Date Received'\n            value={newBundle.date_received}\n            disabled={disableControls}\n            onChange={date => {\n              // Adjust due date accordingly to date received and term adjustment\n              const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n              setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n            }}\n            error={errors.date_received}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-due-date'\n            label='Due Date'\n            disabled={disableControls}\n            value={newBundle.due_date}\n            onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n            error={errors.due_date}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-soa-number'\n            label='SOA No.'\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n            error={errors.soa_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldCurrency\n            id='create-new-bundle-total-soa'\n            required\n            label='Total SOA Amount'\n            fullWidth\n            value={newBundle.total_soa_amt}\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-id'\n            required\n            label='Medical Partner ID'\n            value={newBundle.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-name'\n            required\n            label='Medical Partner Name (Facility)'\n            value={newBundle.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-docotr-partner-id'\n            label='Medical Partner ID'\n            value={newBundle.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={newBundle.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      <div className={classes.actions}>\n        <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n          Cancel\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={handleOnSave}\n          disabled={disableControls}\n          id='save'\n        >\n          Save\n        </Button>\n      </div>\n    </Paper>\n  )\n}\n","\nconst pageTitleReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","const initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","const initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'BATCH_ENCODER') {\n  args.push(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport pageTitleReducer from './pageTitleReducer'\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nconst reducers = combineReducers({\n  pageTitle: pageTitleReducer,\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// Pages of Batch Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BundlesPage from './Pages/BundlesPage/BundlesPage'\nimport BundlePage from './Pages/BundlePage/BundlePage'\nimport NewBundlePage from './Pages/NewBundlePage/NewBundlePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Bundles',\n    icon: 'box-open',\n    to: '/bundles'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  bundles: {\n    text: 'Bundles',\n    to: '/bundles'\n  },\n  specificBundle: {\n    text: data => data,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Provider store={Store}>\n        <Switch>\n          <Route path='/' exact component={Dashboard} />\n          <Route path='/bundles' exact component={BundlesPage} />\n          <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n          <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        </Switch>\n      </Provider>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for batch number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={category === 'open' ? `encode-batch-${index}` : category === 'my' ? `update-batch-${index}` : `view-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => onItemClick({ category, batch_number: row.batch_number })}\n                >\n                  {category === 'open' && 'Encode'}\n                  {category === 'my' && 'Update'}\n                  {category === 'completed' && 'View'}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [batches, setBatches] = React.useState({\n    open: { count: 0, data: [] },\n    my: { count: 0, data: [] },\n    completed: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Open Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n\n    //* My Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    })\n\n    //* Completed Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, completed: { data: completedBatches, count: completedBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    ClaimsEncodingServices.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBatches(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnEncode = batch_number => {\n    ClaimsEncodingServices.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    ClaimsEncodingServices.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsEncodingServices.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, batch_number }) => {\n    if (category === 'open') handleOnEncode(batch_number)\n    else if (category === 'my' || category === 'completed') props.history.push(`/batches/${batch_number}`)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              id='open-batches'\n              count={{ color: 3, value: batches.open.count, id: 'open-batches-count' }}\n              title='Open Batches'\n              viewList={\n                <Typography\n                  id='ob-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('open')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('open')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='ob-batch-no'>Batch No.</TableCell>\n                    <TableCell id='ob-due-date'>Due Date</TableCell>\n                    <TableCell id='ob-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.open.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`encode-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnEncode(item.batch_number)}\n                        >\n                          Encode\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='my-batches'\n              count={{ color: 8, value: batches.my.count, id: 'my-batches-count' }}\n              title='My Batches'\n              viewList={\n                <Typography\n                  id='mb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('my')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('my')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='mb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='mb-due-date'>Due Date</TableCell>\n                    <TableCell id='mb-facility-name'>Facility Name</TableCell>\n                    <TableCell id='mb-status'>Status</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.my.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`update-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          Update\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='completed-batches'\n              count={{ color: 5, value: batches.completed.count, id: 'completed-batches-count' }}\n              title='Completed Batches'\n              viewList={\n                <Typography\n                  id='cb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('completed')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('completed')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='cb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='cb-due-date'>Due Date</TableCell>\n                    <TableCell id='cb-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.completed.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`view-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          View\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={openTickets.count}\n            title='Open Tickets'\n            viewAllLink={{ to: '/batches', caption: 'View all' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {openTickets.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickAPESchedule,\n    onClickPPESchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {type === 'ECU' && (\n          <Button\n            id='ape-schedule'\n            variant='contained'\n            color='primary'\n            className={`${classes.button} button-positive`}\n            onClick={onClickAPESchedule}\n          >\n            Provider's APE Schedule\n          </Button>\n        )}\n\n        {type === 'PPE' && (\n          <Button\n            id='ppe-schedule'\n            variant='contained'\n            color='primary'\n            className={`${classes.button} button-positive`}\n            onClick={onClickPPESchedule}\n          >\n            Provider's PPE Schedule\n          </Button>\n        )}\n        {status !== 'Completed' && (\n          <Button\n            id='add-claim'\n            variant='contained'\n            color='primary'\n            className={`${classes.button} button-positive`}\n            onClick={onClickAdd}\n            disabled={disabled}\n          >\n            Add Claim\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\n// import classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n  // {}\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  onItemClick,\n  type,\n  onOpen,\n  onConfirm,\n  openDialog,\n  onCancel,\n  forDeletion,\n  setForDeletion,\n  submittedBatch\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [pagination, setPagination] = React.useState({\n    count: 4,\n    rowsPerPage: 5,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this Claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these Claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ claim_numbers: [] })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setForDeletion({ claim_numbers: claimNumbers })\n  }\n  const handleItemClick = index => onItemClick(index)\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow hover role='checkbox' tabIndex={-1} key={row.claim_number}>\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    disabled={submittedBatch}\n                    checked={row.selected}\n                    color='default'\n                    onClick={event => handleClick({ index, claims })}\n                  />\n                </TableCell>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n\n                {/* <TableCell>\n              <div className={classes.buttonWrapper}>\n                <IconButton id='delete-icd' onClick={() => onOpen(row.claim_number)}>\n                  <DeleteIcon fontSize='small' />\n                </IconButton>\n              </div>\n            </TableCell> */}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onConfirm}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderAPESchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: ' ECU Reference No.', sortField: '' },\n  { id: '2', name: ' ECU Inclusive Dates', sortField: '' },\n  { id: '3', name: ' Account Name', sortField: '' },\n  { id: '3', name: ' ECU Prepared By', sortField: '' }\n]\n\nexport default function ProviderAPESchedule (props) {\n  // Events\n  const { facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel active={0} direction={'asc'} onClick={() => {}}>\n                        {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        'text-align': 'center',\n                        'font-style': 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>ECU Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderPPESchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: ' PPE Reference No.', sortField: '' },\n  { id: '2', name: ' PPE Inclusive Dates', sortField: '' },\n  { id: '3', name: ' Account Name', sortField: '' },\n  { id: '3', name: ' PPE Prepared By', sortField: '' }\n]\n\nexport default function ProviderPPESchedule (props) {\n  // Events\n  const { facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel active={0} direction={'asc'} onClick={() => {}}>\n                        {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        'text-align': 'center',\n                        'font-style': 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>PPE Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={'Notes Here'}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../Components/ClaimList/ClaimList'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ProviderAPESchedule from '../../Components/ProviderAPESchedule/ProviderAPESchedule'\nimport ProviderPPESchedule from '../../Components/ProviderPPESchedule/ProviderPPESchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [selectedClaim, setselectedClaim] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showAPESchedule, setShowAPESchedule] = React.useState(false)\n  const [showPPESchedule, setShowPPESchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        getClaimsAndCount({ batch_number: batchNumber, search })\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, search = '' }) => {\n    ClaimsEncodingServices.getClaims({ batch_number, params: { search } }).then(res => {\n      const { results, count } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      LoadingService.loading(true)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      getClaimsAndCount({ batch_number: _batchNumber })\n    })\n  }, [props.match.params._batchNumber])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n\n    if (submitStatus === 'Completed') return\n\n    props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    ClaimsEncodingServices.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    ClaimsEncodingServices.deleteMultipleClaim({\n      batch_number: batchNumber,\n      data: forDeletion\n    })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickAPESchedule={() => setShowAPESchedule(true)}\n            onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            items={claims}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onOpen={onOpenDelete}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            forDeletion={forDeletion}\n            setForDeletion={setForDeletion}\n            submittedBatch={submitStatus === 'Completed'}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 ? (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  ) : (\n                    ''\n                  )}\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push('/')}\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive'>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this Batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderAPESchedule facility={details.facility} dialog={showAPESchedule} setDialog={setShowAPESchedule} />\n          <ProviderPPESchedule facility={details.facility} dialog={showPPESchedule} setDialog={setShowPPESchedule} />\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\nexport default function ContractRange (props) {\n  const {\n    date_from = Date.now(),\n    date_to = Date.now(),\n    errors = {},\n    disableControls,\n    onChangeDateFrom = () => {},\n    onChangeDateTo = () => {},\n    readOnly = true\n  } = props\n\n  return (\n    <div className={classes['root']}>\n      <div className={classes['title']}>\n        <Typography variant='subtitle1'>Contract Year:</Typography>\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          From:\n        </Typography>\n        <DatePicker\n          id='contract-date-from'\n          label=''\n          value={date_from}\n          disabled={disableControls}\n          onChange={onChangeDateFrom}\n          error={errors.date_to}\n          readOnly={readOnly}\n        />\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          To:\n        </Typography>\n        <DatePicker\n          id='contract-date-to'\n          label=''\n          value={date_to}\n          disabled={disableControls}\n          onChange={onChangeDateTo}\n          error={errors.date_to}\n          readOnly={readOnly}\n        />\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class LoaDetailsService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setGrandTotal = payload => {\n  return {\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import InPatient from './InPatient'\nimport Emergency from './Emergency'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillPlaceholder = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const member_name = loa.member_info.member_name.split(',')\n  const member_last_name = member_name[0]\n  const member_names = member_name[1].trim().split(' ')\n  const member_middle_name = member_names[(member_names.length - 1)]\n  member_names.pop()\n  const member_first_name = member_names.join().replace(/,/g, ' ')\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: member_last_name,\n    member_first_name: member_first_name,\n    member_middle_name: member_middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'OUT_PATIENT_CONSULTATION':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n    case 'OUT_PATIENT_PROCEDURE':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n    case 'EMERGENCY':\n      Emergency({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillPlaceholder }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","const types = [\n  { value: 'In-Patient', text: 'In-Patient' },\n  { value: 'Out-Patient', text: 'Out-Patient' },\n  { value: 'Professional Fee', text: 'Professional Fee' },\n  { value: 'Maternity Assistance', text: 'Maternity Assistance' }\n]\n\nconst dropdown = () => {\n  const list = []\n  for (const index in types) {\n    list.push({ text: types[index].text, value: types[index].value })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n","import React from 'react'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from '../ContractRange/ContractRange'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport LoaDetailsService from 'Services/Api/LoaDetailsService'\nimport { AutoFill, AutoFillPlaceholder } from './../../AutoFill'\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ReimbursementTypes from 'Constant/reimbursementTypes'\n\n// On Init\nconst reimbursementTypes = ReimbursementTypes.dropdown()\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    onChangeReimbursementType = () => {},\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    showLoaNumber = true\n  } = props\n\n  const claim_type = useSelector(state => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim() && (value.trim() !== approvalCode)) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      LoaDetailsService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={reimbursementTypes}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={''}\n                disabled={disableControls}\n                onChange={event => {}}\n                error={''}\n              />\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                value={''}\n                disabled={disableControls}\n                onChange={event => {}}\n                error={''}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              value={''}\n              disabled={disableControls}\n              onChange={event => {}}\n              error={''}\n            />\n          </div>\n        )}\n        {showContractRange && <ContractRange />}\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField\n            id='member-account-number'\n            required\n            label='Member Account No.'\n            value={claim.member_account_number}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_account_number',\n                value: event.target.value\n              })\n            }\n            error={errors.member_account_number}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillPlaceholder />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this Diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","function IndexedDbHelper () {}\n\n/**\n * Deletes an IndexedDb database.\n *\n * @param {string} name database to be deleted\n * @param {function} callback function to be invoked\n */\n\nIndexedDbHelper.deleteDb = function (name, callback) {\n  var request = window.indexedDB.deleteDatabase(name)\n\n  request.onerror = function (event) {\n    // console.log(\"Error deleting database.\");\n    callback()\n  }\n\n  request.onsuccess = function (event) {\n    // console.log(\"Database deleted successfully\");\n    callback()\n  }\n}\n\n/**\n * Opens an IndexedDb database.\n *\n * @param {string} name IndexedDb database to create/open\n * @param {function} onUprade callback function to be invoked when database\n *            is to be created or when there is a need to upgrade\n * @param {function} onSuccess callback function to be invoked upon successfully opening database\n * @param {function} onError callback function to be invoked upon failure\n */\nIndexedDbHelper.openDb = function (name, onUprade, onSuccess, onError) {\n  let request = window.indexedDB.open(name)\n\n  request.onerror = function (event) {\n    console.error(event)\n    if (onError) onError(event)\n  }\n\n  request.onsuccess = function (event) {\n    let db = event.target.result\n    if (onSuccess) onSuccess(db, event)\n  }\n\n  // Triggered when a new database is created or when the\n  // version number of an existing database has been incremented\n  request.onupgradeneeded = function (event) {\n    // Save the IDBDatabase interface\n    let db = event.target.result\n    if (onUprade) onUprade(db, event)\n  }\n}\n\n/**\n * Creates object store\n *\n * @param {object} db reference to database object\n * @param {string} name name of object store to be created\n * @param {string} keyPath unique key in object\n * @param {function} onComplete callback to be invoked upon object store creation\n */\nIndexedDbHelper.createStoreOnDb = function (db, name, keyPath, onComplete) {\n  // console.log('test', 'creating store ' + name);\n\n  let store = db.createObjectStore(name, { keyPath: keyPath })\n  if (onComplete) store.transaction.oncomplete = onComplete\n  return store\n}\n\n/**\n * Creates index on an object store.\n *\n * @param {object} store reference to object store\n * @param {string} name name of index to be created\n * @param {boolean} isUnique whether index is unique or not\n */\nIndexedDbHelper.createIndexOnStore = function (store, name, isUnique) {\n  store.createObjectStore(name, { unique: isUnique })\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {string} dbName IndexedDb database to open\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.openDbAndSave = function (dbName, storeName, entries, onSaveComplete, onLoopEnd) {\n  IndexedDbHelper.openDb(\n    dbName,\n\n    function (db, event) {},\n\n    function (db, event) {\n      IndexedDbHelper.saveToStore(db, storeName, entries, onSaveComplete, onLoopEnd)\n    },\n\n    function (event) {\n      console.error('error opening ' + dbName)\n      console.error(event)\n      if (onLoopEnd) onLoopEnd()\n    }\n  )\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {object} db IndexedDb database reference\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.saveToStore = function (db, storeName, entries, onSaveComplete, onLoopEnd) {\n  if (!entries || entries.length === 0) {\n    if (onLoopEnd) onLoopEnd()\n\n    return\n  }\n\n  let transaction = db.transaction([storeName], 'readwrite')\n\n  transaction.oncomplete = function (event) {\n    console.log('entries written to IndexedDb objectstore: ' + storeName + ' total: ' + entries.length)\n    if (onSaveComplete) onSaveComplete()\n  }\n\n  let store = transaction.objectStore(storeName)\n\n  entries.forEach(function (entry) {\n    // console.log(entry)\n    try {\n      store.add(entry)\n    } catch (ex) {}\n  })\n\n  if (onLoopEnd) onLoopEnd()\n}\n\nIndexedDbHelper.getAll = function (db, storeName, callback) {\n  try {\n    let objectStore = db.transaction(storeName, 'readonly').objectStore(storeName)\n    objectStore.getAll().onsuccess = function (event) {\n      callback(event.target.result)\n    }\n  } catch (ex) {\n    let empty = []\n    callback(empty)\n  }\n}\n\nexport { IndexedDbHelper }\n","import { IndexedDbHelper } from 'Utilities/IndexedDbHelper'\nimport instance from '../Api/instance'\n// const axios = instance('/c/ce')\n// const FlexSearch = require('flexsearch');\n\nexport default class IcdCptStorageServices {\n  /**\n   * Initializes a IndexedDb database and the object stores needed to store/access ICDs and CPTs\n   *\n   * @param {function} callback function to be invoked upon completion\n   */\n  static initializeStorage (callback) {\n    // IcdCptStorageServices.flexSearchIndex = {}\n\n    let dbName = IcdCptStorageServices.DB_NAME\n\n    IndexedDbHelper.deleteDb(dbName, function () {\n      IndexedDbHelper.openDb(\n        dbName,\n\n        function (db, event) {\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_CPT, 'code')\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_ICD, 'code')\n        },\n\n        function (db, event) {\n          console.log('success opening ' + dbName)\n          IcdCptStorageServices.db = db\n\n          if (callback) callback()\n        },\n\n        function (event) {\n          console.error('error opening ' + dbName)\n          console.error(event)\n          if (callback) callback()\n        }\n      )\n    })\n  }\n\n  /**\n   * Saves ICD entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveIcdEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_ICD,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  /**\n   * Saves CPT entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveCptEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_CPT] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_CPT,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  static readStorageEntries (storeName, callback) {\n    // Load entries from IndexedDB and into memory records\n    IndexedDbHelper.openDb(\n      IcdCptStorageServices.DB_NAME,\n      null,\n      function (db, event) {\n        IndexedDbHelper.getAll(db, storeName, function (entries) {\n          callback(entries)\n        })\n      },\n      null\n    )\n  }\n\n  static loadEntries (storeName, callback) {\n    // If memory records is still empty\n    if (!IcdCptStorageServices.records[storeName]) {\n      IcdCptStorageServices.readStorageEntries(storeName, function (entries) {\n        IcdCptStorageServices.records[storeName] = entries\n        callback(IcdCptStorageServices.records[storeName])\n      })\n    } else {\n      // Use entries from memory records\n      callback(IcdCptStorageServices.records[storeName])\n    }\n  }\n\n  /**\n   * Peform lookups.\n   *\n   * This method has been created to emulate the output of ClaimsEncodingServices.lookups() so that\n   * autosuggest features that rely on the behavior ClaimsEncodingServices.lookups() will still function\n   * if this method is used as a replacement.\n   *\n   * @see ClaimsEncodingServices.lookups()\n   */\n  static lookups ({ on, params }) {\n    let promise = new Promise(function (resolve, reject) {\n      let storeName = null\n      if (on === 'icd-10') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_ICD\n      } else if (on === 'cpt') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_CPT\n      }\n\n      IcdCptStorageServices.loadEntries(storeName, function (entries) {\n        // Perform search\n        let value = params.query.toLowerCase()\n\n        let result = []\n        let filterKey = ''\n        if (on === 'icd-10') {\n          filterKey = 'full_description'\n          switch (params.by) {\n            case 'code':\n              filterKey = 'full_code'\n              break\n            case 'category':\n              filterKey = 'category_code'\n              break\n          }\n\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.full_description, code: entry.full_code, ...entry }))\n          }\n        } else if (on === 'cpt') {\n          filterKey = 'label'\n          if (params.by === 'code') filterKey = 'code'\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.label, code: entry.code, ...entry }))\n          }\n        }\n\n        // Sort by filter key\n        result.sort((a, b) => {\n          let item1 = ('' + a[filterKey]).toLowerCase()\n          let item2 = ('' + b[filterKey]).toLowerCase()\n\n          if (item1 > item2) {\n            return 1\n          }\n\n          return -1\n        })\n\n        // Pick top X entries\n        result = result.slice(0, IcdCptStorageServices.LOOKUP_LIMIT)\n\n        result = { data: { data: result } }\n\n        resolve(result)\n      })\n    })\n\n    return promise\n\n    // return axios({\n    //   url: `/lookups/${on}`,\n    //   method: 'GET',\n    //   params: { limit: 10, ...params }\n    // })\n    // Expected: [{code: \"A000\", description: \"Cholera due to Vibrio cholerae 01, biovar cholerae\"}]\n  }\n}\n\nIcdCptStorageServices.DB_NAME = 'himsDb'\nIcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icd10_list'\nIcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpt_list'\n// IcdCptStorageServices.DB_NAME = 'claimsDb'\n// IcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icds'\n// IcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpts'\n\nIcdCptStorageServices.LOOKUP_LIMIT = 10\n\nIcdCptStorageServices.records = {}\n\n// IcdCptStorageServices.flexSearchIndex = {};\n\n// static populate(cat, entries){\n//     let index = (IcdCptStorageServices.flexSearchIndex[cat] || (\n//         IcdCptStorageServices.flexSearchIndex[cat] = new FlexSearch\n//     )).add(entries)\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = new FlexSearch\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(1, {id:0, key1: 'a'})\n//   // // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(2, entries[1])\n\n//   // // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find({\n//   // //   full_description: data[0]['full_description']\n//   // // })\n\n//   // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find(\n//   //   function(item){\n//   //     console.log(item)\n//   //     return true;\n//   //     //return item.full_description == data[0]['full_description'];\n//   // });\n\n//   // alert('')\n//   // console.log(entries)\n\n// }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, errors } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    //.less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {procedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={procedure.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {procedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => dispatch(setProcedure({ show: false }))}>\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {procedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(procedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this Procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(procedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {hospitalItem.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <HospitalItemTextFields>\n              <HospitalItemTextField\n                id='hospital-item'\n                codeId={`hospital-code`}\n                name={hospitalItem.details.name || ''}\n                item_code={hospitalItem.details.item_code || ''}\n                suggestions={suggestions.hospitalItem}\n                onChangeName={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                }\n                onChangeCode={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                }\n                errors={errors}\n              />\n            </HospitalItemTextFields>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {hospitalItem.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveHospitalItem}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setHospitalItem({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {hospitalItem.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this Hospital Item?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {professionalFee.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={`${classes.groups} ${classes['first-item']}`}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id || ''}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name || ''}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.specialization}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {professionalFee.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProfessionalFee}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {professionalFee.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this Professional Fee?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { setProcedure, resetSuggestionObject } from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n    dispatch(setProcedure(params))\n  }\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add a procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.description}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { setHospitalItem, resetSuggestionObject } from '../../Store/actions'\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add item\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.name}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.item_code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { setProfessionalFee, resetSuggestionObject } from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add PF\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.doctor_name}</td>\n                <td>{i.specialization}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk } = props\n  return (\n    <div className={classes.root}>\n      <Button variant='contained' color='primary' id='save-for-now' className='button-positive' onClick={() => handleOnSave(true)}>\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save\n      </Button>\n      <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={() => setOpenDialog(true)}>\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  reimbursement_type: Joi.string()\n    .trim()\n    .label('Reimbursement Type')\n    .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimInPatientValidator from './ClaimInPatientValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimInPatientValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Date of Service')\n    .messages({ 'date.empty': `\"Date of Service\" is required.` })\n    .required(),\n  department: Joi.string()\n    .trim()\n    .label('Department')\n    .allow('', null),\n  anesthesiologist_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID (Anesthesiologist)')\n    .allow('', null),\n  anesthesiologist_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Anesthesiologist) Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimOutPatientProcedureValidator from './ClaimOutPatientProcedureValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: [],\n    procedures: [],\n    professional_fees: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimOutPatientProcedureValidator({\n      date_to: value.date_to,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      department: value.department,\n      anesthesiologist_id: value.anesthesiologist_id,\n      anesthesiologist_name: value.anesthesiologist_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ ...state, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Member Partner (Facility) Name.\" is required.` })\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Date of Service')\n    .messages({ 'date.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  recommendation: Joi.string()\n    .trim()\n    .label('Recommendation')\n    .allow('', null),\n  anesthesiologist_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID (Anesthesiologist)')\n    .allow('', null),\n  anesthesiologist_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Anesthesiologist) Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport ClaimOutPatientConsultationValidator from './ClaimOutPatientConsultationValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [errors, setErrors] = React.useState({\n    diagnosis: [],\n    professional_fees: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimOutPatientConsultationValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      anesthesiologist_id: value.anesthesiologist_id,\n      anesthesiologist_name: value.anesthesiologist_name,\n      date_to: value.date_to,\n      recommendation: value.recommendation,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ ...state, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .allow('', null),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .allow('', null),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .messages({ 'string.empty': `\"PRO Name\" is required` })\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .allow('', null),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null),\n  medicine_category: Joi.string()\n    .trim()\n    .label('Medicine Category')\n    .allow('', null),\n  official_receipt_number: Joi.string()\n    .trim()\n    .label('Official Receipt Number')\n    .messages({ 'string.empty': `\"Official Receipt Number\" is required` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","/**\n * Controller prototype class intended to contain app-level configuration controller\n *\n */\n\nconst defaultFormFields = {\n  base_details: {\n    approval_code: true,\n    loa_number: true,\n    reimbursement_type: true,\n    member_account_number: true,\n    member_first_name: true,\n    member_last_name: true,\n    member_middle_name: true\n  },\n  date_from: true,\n  date_of_service: false,\n  date_to: true,\n  department: false,\n  diagnosis: true,\n  doctor_id: false,\n  doctor_name: false,\n  facility_id: true,\n  facility_name: true,\n  hospital_items: true,\n  medicine_category: true,\n  medicine_category_out: false,\n  official_receipt_number: true,\n  pro_id: true,\n  pro_name: true,\n  procedures: true,\n  professional_fees: true,\n  reimbursement_category: true,\n  reimbursement_category_out: false,\n  room_rate: true,\n  room_type: true\n}\n\nconst generateFormFields = reimbursement_type => {\n  // change property to false if not needed on reimbursement type\n  const customFormField = Object.assign({}, defaultFormFields)\n  customFormField.base_details = Object.assign({}, defaultFormFields.base_details)\n  switch (reimbursement_type) {\n    case 'In-Patient':\n      // TODO\n      break\n    case 'Out-Patient':\n      customFormField.date_from = false\n      customFormField.date_of_service = true\n      customFormField.date_to = false\n      customFormField.doctor_id = true\n      customFormField.doctor_name = true\n      customFormField.department = true\n      customFormField.medicine_category = false\n      customFormField.medicine_category_out = true\n      customFormField.pro_id = false\n      customFormField.pro_name = false\n      customFormField.reimbursement_category = false\n      customFormField.reimbursement_category_out = true\n      customFormField.room_rate = false\n      customFormField.room_type = false\n      break\n    case 'Professional Fee':\n    case 'Maternity Assistance':\n      customFormField.date_from = false\n      customFormField.date_of_service = true\n      customFormField.date_to = false\n      customFormField.doctor_id = true\n      customFormField.doctor_name = true\n      customFormField.department = true\n      customFormField.medicine_category = false\n      customFormField.medicine_category_out = true\n      customFormField.pro_id = false\n      customFormField.pro_name = false\n      customFormField.reimbursement_category = false\n      customFormField.reimbursement_category_out = true\n      customFormField.room_rate = false\n      customFormField.room_type = false\n      break\n    default:\n      // TODO\n      break\n  }\n  return customFormField\n}\n\nexport default { defaultFormFields, generateFormFields }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimReimbursementValidator from './ClaimReimbursementValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Controller\nimport FormController from 'Controllers/ReimbursementFormController'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [formFields, setFormFields] = React.useState(null)\n\n  React.useEffect(() => {\n    setFormFields(FormController.generateFormFields())\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    const _allowedFields = {\n      approval_code: '',\n      date_from: new Date().toISOString(),\n      date_of_service: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      diagnosis: [],\n      doctor_id: '',\n      doctor_name: '',\n      facility_id: '',\n      facility_name: '',\n      hospital_items: [],\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_last_name: '',\n      member_middle_name: '',\n      official_receipt_number: '',\n      pro_id: '',\n      pro_name: '',\n      procedures: [],\n      professional_fees: [],\n      reimbursement_category: '',\n      reimbursement_type: '',\n      room_rate: 0,\n      room_type: ''\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setFormFields(FormController.generateFormFields(data.reimbursement_details.reimbursement_type))\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            date_from: data.date.from,\n            date_of_service: data.date.service ? data.date.service : new Date().toISOString(),\n            date_to: data.date.to,\n            department: data.department,\n            diagnosis: data.diagnosis || [],\n            doctor_id: data.doctor ? data.doctor.id : '',\n            doctor_name: data.doctor ? data.doctor.name : '',\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.reimbursement_details.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_last_name: data.member.last_name,\n            member_middle_name: data.member.middle_name,\n            official_receipt_number: data.reimbursement_details.official_receipt_number,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            reimbursement_category: data.reimbursement_details.reimbursement_category,\n            reimbursement_type: data.reimbursement_details.reimbursement_type,\n            room_rate: data.room.rate || 0,\n            room_type: data.room.type || ''\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name,\n      reimbursement_type: value.reimbursement_type\n    })\n\n    let { error } = ClaimReimbursementValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes,\n      official_receipt_number: value.official_receipt_number\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = data => {\n    setFormFields(FormController.generateFormFields(data.value))\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              showApprovalCode={!!formFields.base_details.approval_code}\n              showLoaNumber={!!formFields.base_details.loa_number}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={({ value, field }) => {\n                dispatch(setClaimBaseDetails({ value, field }))\n                onChangeReimbursementType({ value })\n              }}\n            />\n\n            <div className={classes.groups}>\n              {formFields.facility_id && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.facility_id}\n                  />\n                </div>\n              )}\n\n              {formFields.facility_name && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.facility_name}\n                  />\n                </div>\n              )}\n\n              {formFields.doctor_id && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='dp-medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {formFields.doctor_name && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    required\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) => {}}\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {formFields.date_from && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='admission-date-from'\n                    required\n                    label='Admission Date (From)'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                    }\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {formFields.date_to && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='admission-date-to'\n                    required\n                    label='Admission Date (To)'\n                    value={claim.date_to}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }\n                    error={errors.date_to}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {formFields.date_of_service && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_of_service}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_of_service'\n                        })\n                      )\n                    }\n                    error={errors.date_of_service}\n                  />\n                </div>\n              )}\n\n              {formFields.department && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {formFields.medicine_category_out && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='medicine-category'\n                    label='Medicine Category'\n                    value={claim.medicine_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'medicine_category'\n                        })\n                      )\n                    }\n                    error={errors.medicine_category}\n                  />\n                </div>\n              )}\n\n              {formFields.reimbursement_category_out && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='reimbursement-category'\n                    label='Reimbursement Category'\n                    value={claim.reimbursement_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'reimbursement_category'\n                        })\n                      )\n                    }\n                    error={errors.reimbursement_category}\n                  />\n                </div>\n              )}\n\n              {formFields.room_type && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {formFields.room_rate && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {formFields.pro_id && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='pro-id'\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'pro_id'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {formFields.pro_name && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='pro-name'\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'pro_name'\n                        })\n                      )\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {formFields.medicine_category && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='medicine-category'\n                    label='Medicine Category'\n                    value={claim.medicine_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'medicine_category'\n                        })\n                      )\n                    }\n                    error={errors.medicine_category}\n                  />\n                </div>\n              )}\n\n              {formFields.reimbursement_category && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='reimbursement-category'\n                    label='Reimbursement Category'\n                    value={claim.reimbursement_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'reimbursement_category'\n                        })\n                      )\n                    }\n                    error={errors.reimbursement_category}\n                  />\n                </div>\n              )}\n\n              {formFields.official_receipt_number && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    error={errors.official_receipt_number}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .messages({ 'string.empty': `\"PRO ID\" is required.` })\n    .required(),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .messages({ 'string.empty': `\"PRO Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Date of Service')\n    .messages({ 'date.empty': `\"Date of Service\" is required.` })\n    .required(),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimEmergencyValidator from './ClaimEmergencyValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      pro_id: '',\n      pro_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: [],\n    procedures: [],\n    professional_fees: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimEmergencyValidator({\n      date_to: value.date_to,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ ...state, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","const media = {\n  dentalChart:\n     'http://1y7exd3y0q9b2aqn6d2i9q42.wpengine.netdna-cdn.com/wp-content/uploads/2015/01/periodontal-charting-862x581.jpg'\n}\n\nexport default media\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from '../ContractRange/ContractRange'\n\n// Media\nimport Media from 'Constant/media'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimDentalValidator from './ClaimDentalValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimDentalValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={\n                    (value, isSuggestionClick) => {}\n                    // onChangeDoctor({\n                    //   field: 'doctor_id',\n                    //   value,\n                    //   isSuggestionClick\n                    // })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={\n                    (value, isSuggestionClick) => {}\n                    // onChangeDoctor({\n                    //   field: 'doctor_name',\n                    //   value,\n                    //   isSuggestionClick\n                    // })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <ContractRange />\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['chart']}>\n                <img src={Media.dentalChart} alt='dental-chart' />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimMedicineAllowanceValidator from './ClaimMedicineAllowanceValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimMedicineAllowanceValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  onChange={event => {}}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from '../ContractRange/ContractRange'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimAPEValidator from './ClaimAPEValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimAPEValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <ContractRange />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimECUValidator from './ClaimECUValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimECUValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showContractRange\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO-ECU Specialist ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO-ECU Specialist Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPPEValidator from './ClaimPPEValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPPEValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPharmacyValidator from './ClaimPharmacyValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPharmacyValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  onChange={event => {}}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimMedicalSuppliesValidator from './ClaimMedicalSuppliesValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimMedicalSuppliesValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimClinicManagementValidator from './ClaimClinicManagementValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport * as moment from 'moment'\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimClinicManagementValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ member_account_no }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getContractPDF ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/pdf`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberContract ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBaseBenefitPlan () {\n    return axios({\n      url: `/benefit-plan/base`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBenefitPlanTree ({ contract_oid }) {\n    return axios({\n      url: `/benefit-plan/tree/${contract_oid}`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberBenefitLimit ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberFindBenefit ({ member_oid, contract_oid, tree_oid, is_exact }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid, tree_oid, is_exact },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ member_account_no }) {\n    return axios({\n      url: `/member/utilization-loa`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({value, field}) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from '../../Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from '../../Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from '../../Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimReimbursement from '../../Components/ClaimReimbursement/ClaimReimbursement'\nimport ClaimEmergency from '../../Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from '../../Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from '../../Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from '../../Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from '../../Components/ClaimECU/ClaimECU'\nimport ClaimPPE from '../../Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from '../../Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from '../../Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from '../../Components/ClaimClinicManagement/ClaimClinicManagement'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} from '../../Store/actions'\n\nexport default function ClaimPage (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.claim.type\n        .split(' ')\n        .join('_')\n        .toUpperCase()\n\n      dispatch(setClaimType(_claim_type))\n      console.log(_claim_type)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    ClaimsEncodingServices.getClaim({\n      batch_number: _batchNumber,\n      claim_number: _claimNumber\n    }).then(res => {\n      const { data } = res.data\n\n      // Set Diagnosis Suggestions\n      const { diagnosis = [] } = data\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n      callback(data)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type === 'IN_PATIENT' && (\n        <ClaimInPatient\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n        />\n      )}\n      {claim_type === 'OUT_PATIENT_PROCEDURE' && (\n        <ClaimOutPatientProcedure\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'OUT_PATIENT_CONSULTATION' && (\n        <ClaimOutPatientConsultation\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'REIMBURSEMENT' && (\n        <ClaimReimbursement\n          {...props}\n          claim={claim}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'EMERGENCY' && (\n        <ClaimEmergency\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n        />\n      )}\n      {claim_type === 'DENTAL' && (\n        <ClaimDental\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'MEDICINE_ALLOWANCE' && (\n        <ClaimMedicineAllowance\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'APE' && (\n        <ClaimAPE\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'ECU' && (\n        <ClaimECU\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'PPE' && (\n        <ClaimPPE\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'PHARMACY' && (\n        <ClaimPharmacy\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'MEDICAL_SUPPLIES' && (\n        <ClaimMedicalSupplies\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n      {claim_type === 'CLINIC_MANAGEMENT' && (\n        <ClaimClinicManagement\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const grandTotalReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\nimport initSubscriber from 'redux-subscriber'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_DETAILS_ENCODER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(...args)\ninitSubscriber(store)\nexport default store\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BatchesPage from './Pages/BatchesPage/BatchesPage'\nimport BatchPage from './Pages/BatchPage/BatchPage'\nimport ClaimPage from './Pages/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Provider store={Store}>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/batches' exact component={BatchesPage} />\n        <Route path='/batches/:_batchNumber' exact component={BatchPage} />\n        <Route path='/batches/:_batchNumber/claims/add' exact render={props => <ClaimPage {...props} isAdd />} />\n        <Route path='/batches/:_batchNumber/claims/:_claimNumber' exact component={ClaimPage} />\n      </Switch>\n    </Provider>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                      ? `update-claim-${index}`\n                      : category === 'submitted'\n                        ? `print-${index}`\n                        : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleOnAnalyze(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                Analysis Sheet\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                Letter Of Advice\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims.escalated.count }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('escalated')}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Claim No.</TableCell>\n              <TableCell>Due Date</TableCell>\n              <TableCell>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase(props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n          }`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div className={`${classes[`input-wrapper`]} ${message !== '' ? classes['discrepancy'] : ''}`}>{children}</div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const resetError = payload => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const resetErrorBase = payload => {\n  return {\n    type: 'RESET_ERROR_BASE',\n    payload\n  }\n}\n\nexport const resetErrorDiagnosis = payload => {\n  return {\n    type: 'RESET_ERROR_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const resetErrorProcedure = payload => {\n  return {\n    type: 'RESET_ERROR_PROCEDURE',\n    payload\n  }\n}\n\nexport const resetErrorHospitalItem = payload => {\n  return {\n    type: 'RESET_ERROR_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const resetErrorProfessionalFee = payload => {\n  return {\n    type: 'RESET_ERROR_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const setErrorBase = payload => {\n  return {\n    type: 'SET_ERROR_BASE',\n    payload\n  }\n}\n\nexport const setErrorDiagnosis = payload => {\n  return {\n    type: 'SET_ERROR_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setErrorProcedure = payload => {\n  return {\n    type: 'SET_ERROR_PROCEDURE',\n    payload\n  }\n}\n\nexport const setErrorHospitalItem = payload => {\n  return {\n    type: 'SET_ERROR_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const setErrorProfessionalFee = payload => {\n  return {\n    type: 'SET_ERROR_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const resetEscalation = payload => {\n  return {\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","export const resetReassign = payload => {\n  return {\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","export const setRejectStatus = payload => {\n  return {\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","export const setLimitType = payload => {\n  return {\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import InPatient from './InPatient'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillPlaceholder = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_info.account_number.toString(),\n    member_last_name: loa.member_info.last_name,\n    member_first_name: loa.member_info.first_name,\n    member_middle_name: loa.member_info.middle_name\n  }\n\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillPlaceholder }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].medical_partner_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import React from 'react'\n\n// Components\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport LoaDetailsService from 'Services/Api/LoaDetailsService'\nimport { AutoFill, AutoFillPlaceholder } from '../../AutoFill'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ReimbursementTypes from 'Constant/reimbursementTypes'\n\n// On Init\nconst reimbursementTypes = ReimbursementTypes.dropdown()\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showLoaNumber = true\n  } = props\n  const claim_type = useSelector(state => state.claimType)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      LoaDetailsService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={reimbursementTypes}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_account_number\n                }}\n              >\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required.description && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required.code && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    errors = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={errors.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={errors.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  resetErrorDiagnosis\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, errors, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(resetErrorDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${errors['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required={{ code: !permissions.create, description: !permissions.create }}>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${errors[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    errors={errors[index] ? errors[index].error : {}}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {errors['list'] && <span className={classes.error}>{errors['list'].error}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this Diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    errors = {},\n    codeId = '',\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    isViewOnly = false\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n              readOnly={isViewOnly}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n            readOnly={isViewOnly}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  resetErrorProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, errors = {}, doValidate, permissions } = props\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in errors) {\n      if (errors.hasOwnProperty(prop)) {\n        setErrors(errors)\n        break\n      }\n    }\n  }, [errors, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(resetErrorProcedure({ index }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetErrorProcedure({ index }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetErrorProcedure({ index }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(resetErrorProcedure({ index }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', errors)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={`${classes.root}`}>\n          <DiscrepancyBase\n            id='dp-procedure-description'\n            discrepancy={{\n              message: 'Failed',\n              result: { code: discrepancy.code, description: discrepancy.description }\n            }}\n          >\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={_errors}\n                isViewOnly={!permissions.update}\n              />\n            </CptTextFields>\n          </DiscrepancyBase>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-procedure-amount-paid-by-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_paid_by_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.amount_paid_by_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-remarks'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_remarks\n                }}\n              >\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={procedure.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_remarks}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_not_covered\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-not-covered'\n                  label='Amount Not Covered'\n                  value={procedure.details.amount_not_covered}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      procedure.details.reason = ''\n                      setErrors(state => ({ ...state, reason: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_not_covered',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_not_covered}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered-reason'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason\n                }}\n              >\n                <DropDown\n                  id='amount-not-covered-reason'\n                  label='Reason'\n                  required={procedure.details.amount_not_covered > 0}\n                  disableComponents={procedure.details.amount_not_covered === 0}\n                  value={procedure.details.reason}\n                  items={dropDown.reason}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-due-from-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_due_from_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-due-from-member'\n                  label='Amount Due from Member'\n                  value={procedure.details.amount_due_from_member}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      procedure.details.reason_for_charging_member = ''\n                      setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_due_from_member',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_due_from_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason_for_charging_member\n                }}\n              >\n                <DropDown\n                  id='hospital-item'\n                  label='Reason for Charging Member'\n                  required={procedure.details.amount_due_from_member > 0}\n                  disableComponents={procedure.details.amount_due_from_member === 0}\n                  value={procedure.details.reason_for_charging_member}\n                  items={dropDown.reason_charging}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason_for_charging_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason_for_charging_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this Procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProcedure } from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const { data, doValidate, permissions, id } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.procedure)\n  const procedure = useSelector(state => state.procedure)\n  const errors = useSelector(state => state.errors.procedure)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add a procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', errors)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td id={`${id}-description-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.description}\n                </td>\n                <td\n                  id={`${id}-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    errors={errors[index]}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    errors={errors['add']}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name*\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code*\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    discrepancy,\n    error = {},\n    isViewOnly = false\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={error.name}\n              readOnly={isViewOnly}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={error.item_code}\n            readOnly={isViewOnly}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetErrorHospitalItem\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, errors = {}, doValidate, permissions } = props\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in errors) {\n      if (errors.hasOwnProperty(prop)) {\n        setErrors(errors)\n        break\n      }\n    }\n  }, [errors, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetErrorHospitalItem({ index }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetErrorHospitalItem({ index }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetErrorHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetErrorHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', errors)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={`${classes.root}`}>\n          <div className={`${classes.groups} ${classes['first-item']}`}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <HospitalItemTextFields>\n                  <HospitalItemTextField\n                    id='hospital-item'\n                    required\n                    codeId={`hospital-code`}\n                    name={hospitalItem.details.name || ''}\n                    item_code={hospitalItem.details.item_code || ''}\n                    suggestions={suggestions.hospitalItem}\n                    onChangeName={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    onChangeCode={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors}\n                    readOnly={!permissions.update}\n                  />\n                </HospitalItemTextFields>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-amount-paid-by-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_paid_by_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.amount_paid_by_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-remarks'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_remarks\n                }}\n              >\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_remarks}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_not_covered\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-not-covered'\n                  label='Amount Not Covered'\n                  value={hospitalItem.details.amount_not_covered}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      hospitalItem.details.reason = ''\n                      setErrors(state => ({ ...state, reason: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_not_covered',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_not_covered}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered-reason'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason\n                }}\n              >\n                <DropDown\n                  id='amount-not-covered-reason'\n                  label='Reason'\n                  required={hospitalItem.details.amount_not_covered > 0}\n                  disableComponents={hospitalItem.details.amount_not_covered === 0}\n                  value={hospitalItem.details.reason}\n                  items={dropDown.reason}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-due-from-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_due_from_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-due-from-member'\n                  label='Amount Due from Member'\n                  value={hospitalItem.details.amount_due_from_member}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      hospitalItem.details.reason_for_charging_member = ''\n                      setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_due_from_member',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_due_from_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-reason-for-charging-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason_for_charging_member\n                }}\n              >\n                <DropDown\n                  id='reason-for-charging-member'\n                  label='Reason for Charging Member'\n                  required={hospitalItem.details.amount_due_from_member > 0}\n                  disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                  value={hospitalItem.details.reason_for_charging_member}\n                  items={dropDown.reason_charging}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason_for_charging_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason_for_charging_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this Hospital Item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setHospitalItem } from '../../Store/actions'\n\nexport default function HospitalItemList(props) {\n  const { data, doValidate, permissions, id } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const errors = useSelector(state => state.errors.hospital_item)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add item\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', errors)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-${index}`}\n                className={`${classes['row']} ${discrepancy[index] &&\n                  classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`${id}-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>{i.name}</td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    errors={errors[index]}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    errors={errors['add']}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetErrorProfessionalFee\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, errors = {}, doValidate, permissions } = props\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in errors) {\n      if (errors.hasOwnProperty(prop)) {\n        setErrors(errors)\n        break\n      }\n    }\n  }, [errors, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(resetErrorProfessionalFee({ index }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetErrorProfessionalFee({ index }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetErrorProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(resetErrorProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', errors)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={`${classes.root}`}>\n          <div className={`${classes.groups} ${classes['first-item']}`}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-professional-fee-amount-paid-by-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_paid_by_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.amount_paid_by_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-philhealth-remarks'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_remarks\n                }}\n              >\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_remarks}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_not_covered\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-not-covered'\n                  label='Amount Not Covered'\n                  value={professionalFee.details.amount_not_covered}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason = ''\n                      setErrors(state => ({ ...state, reason: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_not_covered',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_not_covered}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered-reason'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason\n                }}\n              >\n                <DropDown\n                  id='amount-not-covered-reason'\n                  label='Reason'\n                  required={professionalFee.details.amount_not_covered > 0}\n                  disableComponents={professionalFee.details.amount_not_covered === 0}\n                  value={professionalFee.details.reason}\n                  items={dropDown.reason}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-amount-due-from-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_due_from_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-due-from-member'\n                  label='Amount Due from Member'\n                  value={professionalFee.details.amount_due_from_member}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason_for_charging_member = ''\n                      setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                    }\n                    handleOnChange({\n                      field: 'amount_due_from_member',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_due_from_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason_for_charging_member\n                }}\n              >\n                <DropDown\n                  id='hospital-item'\n                  label='Reason for Charging Member'\n                  required={professionalFee.details.amount_due_from_member > 0}\n                  disableComponents={professionalFee.details.amount_due_from_member === 0}\n                  value={professionalFee.details.reason_for_charging_member}\n                  items={dropDown.reason_charging}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason_for_charging_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason_for_charging_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this Professional Fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProfessionalFee } from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data, doValidate, permissions, id } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(state => state.professionalFee)\n  const errors = useSelector(state => state.errors.professional_fee)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add PF\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', errors)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td id={`${id}-doctor-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`${id}-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    errors={errors[index]}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    errors={errors['add']}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","const SafeAccess = (value, path, def = undefined) => {\n  return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .required(),\n  assignee: Joi.string().trim()\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\nimport { SafeAccess } from 'Utilities/SafeAccess'\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee\n} from '../../Store/actions'\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel\n  } = props\n  // Variables\n  const { disabled, permissions } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n  const rejectStatus = useSelector(state => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      const users = data.map(user => ({ text: user.username, value: user._id }))\n      setDropDownUsers(users)\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to Submit the Claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n  return (\n    <div className={classes.root}>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewAnalysisSheet({ goBack: false })}\n              disabled={disabled && permissions.analysis_sheet.enabled}\n            >\n              View Analysis Sheet\n            </Button>\n          )}\n          {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewLetterOfAdvice({ goBack: false })}\n              disabled={disabled && permissions.letter_of_advice.enabled}\n            >\n              View Letter of Advice\n            </Button>\n          )}\n          {SafeAccess(permissions.escalate, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleEscalateDialog()}\n              disabled={disabled && permissions.escalate.enabled}\n            >\n              Escalate\n            </Button>\n          )}\n          {SafeAccess(permissions.reject, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={() => !doValidate() && setRejectModal(true)}\n              disabled={rejectStatus}\n            >\n              Reject\n            </Button>\n          )}\n\n          {SafeAccess(permissions.return, ['visible']) && (\n            <Button\n              id='btn-return'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              // onClick={() => setApproveModal(true)}\n              // disabled={disabled && permissions.return.enabled}\n            >\n              Return\n            </Button>\n          )}\n\n          {SafeAccess(permissions.approve, ['visible']) && (\n            <Button\n              id='approve'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleOnShowModal()}\n              disabled={disabled && permissions.approve.enabled}\n            >\n              Approve\n            </Button>\n          )}\n          {SafeAccess(permissions.save, ['visible']) && (\n            <Button\n              id='save-for-now'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && setSaveModal(true)}\n              disabled={disabled && permissions.save.enabled}\n            >\n              Save for now\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n        Cancel\n      </Button>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.reassign, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleReassignDialog()}\n              disabled={disabled && permissions.reassign.enabled}\n            >\n              Reassign\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      {SafeAccess(permissions.escalate, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={escalateModal.dialog}\n            className={classes.escalate}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reason For Escalation\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={escalations.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                  error={escalationErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                  </Typography>\n                  <DropDown\n                    id='escalate-to'\n                    items={dropDownUsers}\n                    value={escalations.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setEscalationAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={escalationErrors.assignee}\n                    disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={escalateModal.confirm}\n            message='Are you sure you want to Escalate Claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n              doEscalate({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reassign, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={reassignModal.dialog}\n            className={classes.reassign}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reassign\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={reassign.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setReassignMessage(event.target.value))}\n                  error={reassignErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    Assign To:\n                  </Typography>\n                  <DropDown\n                    id='reassign-to'\n                    items={dropDownUsers}\n                    value={reassign.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setReassignAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={reassignErrors.assignee}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={reassignModal.confirm}\n            message='Are you sure you want to re-assign Claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n              doReassign({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reject, ['enabled']) && (\n        <Alert\n          open={rejectModal}\n          message='Are you sure you want to reject this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRejectModal(false)}\n          onOk={() => {\n            setRejectModal(false)\n            doReject({ goBack: true })\n          }}\n        />\n      )}\n\n      {SafeAccess(permissions.approve, ['enabled']) && (\n        <Alert\n          open={approveModal.show}\n          message={approveModal.message || 'Are you sure you want to Approve the Claim?'}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setApproveModal({ show: false })}\n          onOk={() => {\n            setApproveModal({ show: false })\n            doApprove({ goBack: false })\n          }}\n        />\n      )}\n\n      <Alert\n        open={saveModal}\n        message='Are you sure you want to save the changes?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveModal(false)}\n        onOk={() => {\n          setSaveModal(false)\n          doSave(true)\n        }}\n      />\n\n      <Alert\n        open={cancelModal}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setCancelModal(false)}\n        onOk={() => {\n          setCancelModal(false)\n          doCancel({ goBack: true })\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to Reply to the Escalated Claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab key={`${item.props.label}-tab-label`} className={classes['item']} label={item.props.label} />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel key={`${item.props.label}-tab-content`} className={classes['panels']} value={value} index={index}>\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, planTypeList, categoryNode, roomAndBoardList, coverageList, riderList, onItemClick } = props\n\n  // console.log(planTypeList) // Base []\n  // console.log(categoryNode) // Room {} name\n  // console.log(roomAndBoardList) // Room Rows\n  // console.log(coverageList) // CV []\n  // console.log(riderList) // RI []\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          <TreeItem\n            key={`node-room-board`}\n            className={`${classes.node}`}\n            nodeId={`node-room-board`}\n            label={'Room and Board'}\n            onClick={() => onItemClick({ list: 'room-board', planPackage: 'RB', benefitCategory: 'RBC' })}\n          />\n          <TreeItem\n            key={`node-coverage`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-coverage`}\n            label={'COVERAGE'}\n          >\n            {coverageList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-coverage-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-coverage-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'coverage', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n          <TreeItem\n            key={`node-riders`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-riders`}\n            label={'RIDERS'}\n          >\n            {riderList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-riders-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-riders-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'riders', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function LimitTable (props) {\n  const { label, value } = props\n\n  return (\n    <div className={classes.field}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n      </Typography>\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","const UnitLimit = unit => {\n  if (!unit) return ''\n\n  switch (unit) {\n    case 'Percentage':\n      return '%'\n    default:\n      return unit\n  }\n}\n\nexport { UnitLimit }\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Header.module.scss'\n\nconst generateFields = args => {\n  const { benefitType, rows, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['custom_metadata'], {})\n\n  let billingArrangement = []\n\n  switch (benefitType) {\n    case 'RBC':\n      return [\n        <div className={classes.groups}>\n          <ValueField label={'LIMIT TYPE'} value={`MBL`} />\n          <ValueField label={'LIMIT'} value={`${DigitFormatter(4000000)} ${UnitLimit('PHP')}`} />\n          <ValueField label={'MODE OF PAYMENT'} value={`${UpperWord('annual')}`} />\n          <ValueField label={'MODE OF PAYMENT'} value={`${UpperWord('annual')}`} />\n        </div>,\n        <div className={classes.groups}>\n          <ValueField label={'PEC LIMIT TYPE'} value={`PESO`} />\n          <ValueField label={'PEC LIMIT'} value={`${DigitFormatter(200000)} ${UnitLimit('PHP')}`} />\n        </div>\n      ]\n    case 'DNT':\n      return [\n        <div className={classes.groups}>\n          <ValueField label={'PARTNER'} value={`${metadata['dental_form_partner'] || '-'}`} />\n          <ValueField\n            label={'RATE/PERSON'}\n            value={`${DigitFormatter(metadata['dental_form_rate'])} ${UnitLimit('PHP')}`}\n          />\n        </div>\n      ]\n  }\n}\n\nexport default function Header (props) {\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    setElemFields(generateFields(props))\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Footer.module.scss'\n\nconst generateFields = args => {\n  const { showAll, benefitType, rows, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['custom_metadata'], {})\n\n  let billingArrangement = []\n\n  switch (benefitType) {\n    case 'MT':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        billback: 'Bill back with admin fee (15%)',\n        rider_fee: '1-time rider fee to be upon enrollment'\n      }\n\n      return [\n        <div className={classes.groups}>\n          {(showAll || metadata['availment_per_year']) && (\n            <ValueField label={'AVAILMENT PER YEAR'} value={`${metadata['availment_per_year']}`} />\n          )}\n          {(showAll || (metadata['waiting_period_type'] && metadata['waiting_period_unit'])) && (\n            <ValueField\n              label={'Activation'}\n              value={[\n                `${metadata['waiting_period_type'] === 'effectivity' && 'Waiting period after effectivity of member'}`,\n                `${metadata['waiting_period_type'] === 'date_of_hire' && 'Waiting period after date of hire'}`,\n                `${DigitFormatter('waiting_period')} ${metadata['waiting_period_unit'] &&\n                  UnitLimit(metadata['waiting_period_unit'])}`\n              ].join('\\n')}\n            />\n          )}\n          {(showAll || billingArrangement[metadata['billing_arangement']]) && (\n            <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n          )}\n        </div>\n      ]\n    case 'CC':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n        fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n        soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n        soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed',\n        rider_fee: '1-time rider fee to be upon start of contract'\n      }\n      return [\n        <div className={classes.groups}>\n          {(showAll || metadata['billing_arangement']) && (\n            <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n          )}\n          {(showAll || metadata['billback_fee']) && (\n            <ValueField label={''} value={`${UnitLimit(metadata['billback_type'])}`} />\n          )}\n          {(showAll || metadata['rider_fee']) && (\n            <ValueField label={''} value={`${metadata['rider_fee']} ${UnitLimit(metadata['rider_fee'])}`} />\n          )}\n        </div>\n      ]\n    case 'DNT':\n      return [\n        <div className={classes.groups}>\n          {(showAll || (metadata['waiting_period_type'] && metadata['waiting_period_unit'])) && (\n            <ValueField\n              label={'Activation'}\n              value={`${DigitFormatter('waiting_period_type')} ${UnitLimit(metadata['waiting_period_unit'])}`}\n            />\n          )}\n        </div>\n      ]\n  }\n}\n\nexport default function Footer (props) {\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    setElemFields(generateFields(props))\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './LimitTable.module.scss'\n\nconst columns = {\n  // COVERAGE\n  RBC: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Rollover', sortField: 'rollerover', search: true },\n    { name: 'Refresh', sortField: 'refresh', search: true }\n  ],\n  EM: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  IP: [\n    { name: 'Category', sortField: 'parent_name', search: true },\n    { name: 'Description', sortField: 'name', search: true },\n    { name: 'Inner Limit Type', sortField: 'type', search: true },\n    { name: 'Inner Limit', sortField: 'limit', search: true },\n    { name: 'Daily Inner Limit', sortField: '', search: true }\n  ],\n  OP: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Benefit', sortField: 'benefit', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  PV: [\n    { name: 'Provision', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  APE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  PPE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  SD: [\n    { name: 'Procedure', sortField: 'category', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  MT: [\n    { name: 'Provision', sortField: 'provision', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment', sortField: 'availment', search: true }\n  ],\n  OM: [\n    { name: 'Excluded Medicine', sortField: 'excluded_medicine', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment Type', sortField: 'availment_type', search: true }\n  ],\n  CC: [\n    { name: 'Personnel', sortField: 'personnel', search: true },\n    { name: 'Number', sortField: 'number', search: true },\n    { name: 'No. of Days', sortField: 'no_of_days', search: true },\n    { name: 'Days Deployed', sortField: 'days_deployed', search: true },\n    { name: 'Time From', sortField: 'time_from', search: true },\n    { name: 'Time To', sortField: 'time_to', search: true }\n  ],\n  DNT: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  SH: [\n    { name: 'Plan', sortField: 'name', search: true },\n    { name: 'Member Type', sortField: 'member_type', search: true }\n  ]\n\n  // RIDERS\n}\n\nconst generateColumns = ({ benefitType }) => {\n  const rows = columns[benefitType] || []\n  return (\n    <TableRow>\n      {rows.map(headCell => (\n        <TableCell key={headCell.sortField}>\n          <TableSortLabel\n            // active={benefits.orderBy === headCell.sortField}\n            // direction={benefits.order ? 'asc' : 'desc'}\n            onClick={event => {}}\n          >\n            {headCell.name}\n          </TableSortLabel>\n          {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n        </TableCell>\n      ))}\n\n      <TableCell align='center' />\n    </TableRow>\n  )\n}\n\nconst generateRows = ({ benefitType, rows }) => {\n  if (rows.length <= 0) {\n    return (\n      <TableCell id={`no-record`} colSpan={5}>\n        <div\n          className={`${classes.cell} ${classes.center}`}\n          style={{\n            'text-align': 'center',\n            'font-style': 'italic',\n            padding: '10px'\n          }}\n        >\n          <span>No Record</span>\n        </div>\n      </TableCell>\n    )\n  }\n\n  switch (benefitType) {\n    case 'RBC':\n      const firstOnly = true\n      const _rows = !firstOnly ? rows : [rows[0]]\n      return _rows.map((row, index) => {\n        return (\n          row && (\n            <TableRow key={`benefit-${index}`}>\n              <TableCell id={`category-${index}`}>{row.name}</TableCell>\n              <TableCell id={`limit-${index}`}>\n                <div className={classes.cell}>\n                  {row.limits.map((limit, idx) => {\n                    return (\n                      limit.limit && (\n                        <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                      )\n                    )\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`rollover-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'rollover'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`refresh-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'refresh'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n            </TableRow>\n          )\n        )\n      })\n    case 'EM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'IP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`description-${index}`}>{row.name}</TableCell>\n            <TableCell id={`inner-limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`inner-limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`daily-inner-limit-${index}`}>{/* Unknown */}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'OP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PV':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'APE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PPE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SD':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`procedure-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'MT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-${index}`}>\n              {UpperWord(SafeAccess(row, ['custom_metadata', 'availment'], ''))}\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'OM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`excluded-medicine-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'availment'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'CC':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`personnel-${index}`}>{row.name}</TableCell>\n            <TableCell id={`number-${index}`}>{SafeAccess(row, ['custom_metadata', 'number'], '')}</TableCell>\n            <TableCell id={`number-of-days-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'no_of_days'], '')}\n            </TableCell>\n            <TableCell id={`days-deployed-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'days_deployed'], '')}\n            </TableCell>\n            <TableCell id={`time_from-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_from'], '')}</TableCell>\n            <TableCell id={`time_to-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_to'], '')}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'DNT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`name-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SH':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`plan-${index}`}>{SafeAccess(row, ['custom_metadata', 'title'], '-')}</TableCell>\n            <TableCell id={`member-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'member_type'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n  }\n}\n\nexport default function LimitTable (props) {\n  const { benefitType, rows } = props\n\n  const [elemRows, setElemRows] = React.useState([])\n  const [elemColumns, setElemColumns] = React.useState([])\n\n  const [showAll, setShowAll] = React.useState(true)\n\n  React.useEffect(() => {\n    setElemColumns(generateColumns({ benefitType }))\n    setElemRows(generateRows({ benefitType, rows }))\n\n    setShowAll(true)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <Header showAll={showAll} {...props} />\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={elemColumns}\n          body={elemRows}\n          pagination\n          count={0}\n          page={1}\n          limit={5}\n          rowsPerPageOptions={[5, 10, 15]}\n          onChange={args => {}}\n        />\n      </div>\n\n      <Footer showAll={showAll} {...props} />\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","export class BenefitNode2 {\n  static getNodeTree (item, nodes) {\n    let current = item\n    let treePath = []\n    let levelLimit = 2\n\n    if (Array.isArray(current['tree_path'])) {\n      treePath = [...current['tree_path']].reverse()\n    } else {\n      treePath = Object.values(current['tree_path']).reverse()\n    }\n    treePath.shift()\n\n    if (current.level === 3) {\n      levelLimit = 1\n    }\n\n    const nodeTree = treePath\n      .reduce((result, path) => {\n        if (current !== undefined && current.level > levelLimit) {\n          const input = {\n            id: current.id,\n            name: current.name,\n            code: current.code\n          }\n\n          if (current['original_id']) {\n            input['original_id'] = current['original_id']\n          }\n\n          result.push(input)\n\n          current = nodes.find(node => {\n            return node.level === current.level - 1 && node.code === path && node.children.includes(current.id)\n          })\n        }\n        return result\n      }, [])\n      .reverse()\n\n    return nodeTree\n  }\n\n  static convertNodeData (nodesParam, loadExisting = false) {\n    let nodeIDMap = []\n\n    let nodes = [...nodesParam]\n\n    if (!loadExisting) {\n      nodes = nodes.filter(item => {\n        if (item.level === 1 || item.level === 2 || (item.level > 2 && item.tree_path[2] === 'BASE')) {\n          return true\n        }\n        return false\n      })\n    }\n\n    nodes = nodes.sort((node1, node2) => {\n      if (node1.level === 3 && node1.code === 'BASE') return -1\n      if (node2.level === 3 && node2.code === 'BASE') return 1\n\n      if (node1.sort_index > node2.sort_index) return -1\n      if (node1.sort_index < node2.sort_index) return 1\n\n      if (node1.name > node2.name) return 1\n      if (node1.name < node2.name) return -1\n\n      return 0\n    })\n\n    nodes = nodes.map((item, i) => {\n      const oldID = item['_id']\n      let itemPlanType = 'BASE'\n\n      if (item.level > 2 && item.tree_path[2] !== 'BASE') {\n        itemPlanType = item.tree_path[2]\n      }\n\n      const newID = 'NODE-' + itemPlanType + '-' + i.toString().padStart(3, '0')\n\n      item['included'] = true\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      let metadata = Object.assign({}, item['custom_metadata'])\n\n      if (metadata['included_facilities'] && metadata['included_facilities'].length > 0) {\n        const newIncludedFacilities = [...metadata['included_facilities']]\n\n        metadata['partner_network_list'] = newIncludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = true\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        delete metadata.included_facilities\n      }\n\n      if (metadata['excluded_facilties'] && metadata['excluded_facilties'].length > 0) {\n        let newExcludedFacilities = [...metadata['excluded_facilties']]\n\n        let partnerNetworkList = []\n\n        if (metadata['partner_network_list'] !== undefined) {\n          partnerNetworkList = [...metadata['partner_network_list']]\n        }\n\n        newExcludedFacilities = newExcludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = false\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        metadata['partner_network_list'] = [...partnerNetworkList, ...newExcludedFacilities]\n\n        delete metadata.excluded_facilties\n      }\n\n      item['custom_metadata'] = metadata\n\n      nodeIDMap.push(IDSet)\n\n      if (loadExisting) {\n        item['original_id'] = item['_id']\n      }\n\n      item['id'] = newID\n\n      delete item['_id']\n\n      return Object.assign({}, item)\n    })\n\n    nodes = nodes.map(item => {\n      if (loadExisting) {\n        item['original_children'] = [...item['children']]\n      }\n\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n\n          return result\n        }, [])\n      }\n      return item\n    })\n\n    return nodes\n  }\n\n  static createExclusionList (nodes) {\n    const eList = nodes.reduce((exResult, item) => {\n      // if (item['custom_metadata']['is_excluded'] && item['custom_metadata']['is_excluded'] === true) {\n      if (item['level'] === 6 && item['tree_path'][3] === 'EX') {\n        const exTree = this.getNodeTree(item, nodes)\n        exResult.push(exTree)\n      }\n      return exResult\n    }, [])\n\n    return eList\n  }\n\n  static combineNodes (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      parent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['parent_name'] = parent.name\n          child['parent_code'] = parent.code\n          child['disabled'] = false\n          result.push(child)\n        }\n      })\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static combineNodes2 (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      let newParent = Object.assign({}, parent)\n      let newChildNodes = []\n\n      newParent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['disabled'] = false\n          newChildNodes.push(child)\n        }\n      })\n\n      newParent['child_nodes'] = newChildNodes\n      newParent['disabled'] = false\n\n      result.push(newParent)\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static getFilteredNodes (nodes, level) {\n    return nodes.filter(item => {\n      return item.level === level\n    })\n  }\n\n  static getSidebarList (benefitCategoryNodes, planType, planPackage) {\n    return benefitCategoryNodes.reduce((result, item) => {\n      if (item.tree_path[2] === planType && item.tree_path[3] === planPackage) {\n        let newItem = Object.assign({}, item)\n\n        if (planType !== 'BASE') {\n          const baseNode = benefitCategoryNodes.find(baseItem => {\n            return (\n              baseItem.name === newItem.name &&\n              baseItem.code === newItem.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === newItem.tree_path[3] &&\n              baseItem.tree_path[4] === newItem.tree_path[4]\n            )\n          })\n\n          if (baseNode && baseNode.included === false) {\n            newItem['base_disabled'] = true\n          } else {\n            newItem['base_disabled'] = false\n          }\n        }\n\n        result.push(newItem)\n      }\n\n      return result\n    }, [])\n  }\n\n  static getRows (\n    exclusionList,\n    benefitCategoryNodes,\n    benefitTypeNodes,\n    mainBenefitNodes,\n    subBenefitNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    let rows = []\n    if (['EX'].includes(selectedBenefitCategory)) {\n      if (exclusionList.length > 0) {\n        rows = exclusionList.reduce((result, exclusionArray) => {\n          const code = exclusionArray[0].code\n\n          if (code === selectedPlanType) {\n            let exclusion = Object.assign({}, exclusionArray[exclusionArray.length - 1])\n\n            const parent = Object.assign({}, exclusionArray[exclusionArray.length - 2])\n\n            exclusion['parent_name'] = parent.name\n            exclusion['parent_code'] = parent.code\n            exclusion['disabled'] = false\n            exclusion['included'] = false\n\n            const found = benefitTypeNodes.find(item => {\n              return item.id === exclusion.id\n            })\n\n            if (found && found['custom_metadata'] && found['custom_metadata']['is_excluded'] !== undefined) {\n              const metadata = Object.assign({}, found['custom_metadata'])\n              exclusion['included'] = metadata['is_excluded']\n            }\n\n            result.push(exclusion)\n          }\n\n          return result\n        }, [])\n      }\n    } else if (['ID', 'NT'].includes(selectedBenefitCategory)) {\n      const categoryNodes = benefitCategoryNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n\n      rows = this.combineNodes2(categoryNodes, typeNodes)\n    } else if (['EL'].includes(selectedBenefitCategory)) {\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      const subNodes = subBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      rows = this.combineNodes2(benefitNodes, subNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          item.child_nodes.map(child => {\n            const baseNode = subBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === child.name &&\n                baseItem.code === child.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === child.tree_path[3] &&\n                baseItem.tree_path[4] === child.tree_path[4] &&\n                baseItem.tree_path[5] === child.tree_path[5] &&\n                baseItem.tree_path[6] === child.tree_path[6] &&\n                baseItem.tree_path[7] === child.tree_path[7]\n              )\n            })\n\n            if (baseNode && baseNode.included === true) {\n              child['disabled'] = true\n            } else {\n              child['disabled'] = false\n            }\n\n            return child\n          })\n          return item\n        })\n      }\n    } else if (['RBC'].includes(selectedBenefitCategory)) {\n      rows = [...benefitCategoryNodes]\n\n      rows = rows.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedPlanPackage\n      })\n\n      rows = rows.map(item => {\n        item['disabled'] = false\n        return item\n      })\n    } else if (['EM', 'DNT', 'CC', 'EC', 'PV', 'SH', 'ADD', 'SD'].includes(selectedBenefitCategory)) {\n      rows = [...benefitTypeNodes]\n\n      rows = rows.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      if (selectedPlanType !== 'BASE' && selectedBenefitCategory !== 'SH') {\n        rows = rows.map(item => {\n          const baseNode = benefitTypeNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      } else {\n        rows = rows.map(item => {\n          item['disabled'] = false\n          return item\n        })\n      }\n      return rows\n    } else if (['MT', 'APE', 'IP', 'OP', 'OM', 'PPE'].includes(selectedBenefitCategory)) {\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[4] === selectedBenefitCategory\n      })\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      rows = this.combineNodes(typeNodes, benefitNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          const baseNode = mainBenefitNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5] &&\n              baseItem.tree_path[6] === item.tree_path[6]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      }\n    } else {\n      rows = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n    }\n\n    if (selectedBenefitCategory !== 'EX') {\n      rows = rows.filter(item => {\n        if (item['custom_metadata'] && item['custom_metadata']['standard_exclusion'] !== undefined) {\n          return !item['custom_metadata']['standard_exclusion']\n        }\n        return true\n      })\n    }\n\n    return rows\n  }\n\n  static getContractNode (contractNodes) {\n    return contractNodes.find(item => item.code === 'CT')\n  }\n\n  static getCategoryNode (\n    planPackageNodes,\n    benefitCategoryNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    if (['RBC', 'EX'].includes(selectedBenefitCategory)) {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedPlanPackage &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage\n      )\n    } else if (selectedBenefitCategory === 'NT') {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedBenefitCategory\n      )\n    } else {\n      return benefitCategoryNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n      )\n    }\n  }\n\n  static getPlanTypeList (planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes) {\n    const coverageCategories = ['EM', 'SD', 'PV']\n    const riderCategories = ['DNT', 'EC', 'CC', 'SH', 'ADD']\n    // const combinedCategories = [...coverageCategories, ...riderCategories];\n    const combinedNodes = [...mainBenefitNodes, ...benefitTypeNodes, ...subBenefitNodes]\n\n    return planTypeNodes.map(item => {\n      item['count'] = combinedNodes.reduce((result, benefit) => {\n        if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['CV'].includes(benefit.tree_path[3]) &&\n          coverageCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['RI'].includes(benefit.tree_path[3]) &&\n          riderCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included && benefit.tree_path[4] !== 'SH') {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 7 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['EM', 'EC', 'EL'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 8 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['OP'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        }\n        return result\n      }, 0)\n\n      return item\n    })\n  }\n\n  static generatePlanNodes (baseNodes, name, code, tmp_data, basePlanType = 'BASE') {\n    let planNodes = [...baseNodes]\n    let planTypeID = ''\n\n    planNodes = planNodes.filter(item => {\n      return item.level > 2 && item.tree_path[2] === basePlanType\n    })\n\n    let nodeIDMap = []\n\n    planNodes = planNodes.map((item, i) => {\n      let newItem = Object.assign({}, item)\n\n      const oldID = newItem['id']\n      const newID = 'NODE-' + code + '-' + i.toString().padStart(3, '0')\n\n      if (newItem.level > 2 && newItem.tree_path[2] === basePlanType) {\n        newItem.tree_path = Object.assign({}, newItem.tree_path)\n        newItem.tree_path[2] = code\n      }\n\n      if (newItem.level === 3 && newItem.code === basePlanType) {\n        newItem['name'] = name\n        newItem['code'] = code\n        if (!newItem['custom_metadata']) {\n          newItem['custom_metadata'] = {}\n        }\n        if (!newItem['custom_metadata_schema']) {\n          newItem['custom_metadata_schema'] = {}\n        }\n        newItem['custom_metadata'] = Object.assign({}, newItem.custom_metadata)\n        newItem['description'] = 'Specific Plan Type Template'\n        newItem['sort_index'] = 2\n        newItem['custom_metadata']['title'] = 'Benefits for ' + name\n        newItem['custom_metadata']['contract_plan_type'] = tmp_data['contractPlanType']\n          ? tmp_data['contractPlanType']\n          : tmp_data['requestedRate']\n          ? 'HMO'\n          : ''\n        newItem['custom_metadata']['requested_rate'] = tmp_data['requestedRate'] ? tmp_data['requestedRate'] : 0\n        newItem['custom_metadata']['admin_fee'] = tmp_data['adminFee'] ? tmp_data['adminFee'] : 0\n        newItem['custom_metadata']['naf'] = tmp_data['naf'] ? tmp_data['naf'] : 0\n        newItem['custom_metadata']['rsd'] = tmp_data['rsdFee'] ? tmp_data['rsdFee'] : 0\n\n        newItem['custom_metadata']['indicative_principals'] = tmp_data['indicativeNumOfPrincipals']\n          ? tmp_data['indicativeNumOfPrincipals']\n          : 0\n        newItem['custom_metadata']['indicative_dependents'] = tmp_data['indicativeNumOfDependents']\n          ? tmp_data['indicativeNumOfDependents']\n          : 0\n        newItem['custom_metadata_schema'] = {\n          properties: {\n            title: {\n              type: 'string'\n            },\n            contract_plan_type: {\n              type: 'string'\n            },\n            requested_rate: {\n              type: 'number'\n            },\n            admin_fee: {\n              type: 'number'\n            },\n            naf: {\n              type: 'number'\n            },\n            rsd: {\n              type: 'number'\n            },\n            indicative_principals: {\n              type: 'number'\n            },\n            indicative_dependents: {\n              type: 'number'\n            }\n          }\n        }\n\n        planTypeID = newID\n      }\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      nodeIDMap.push(IDSet)\n      newItem['id'] = newID\n      newItem['edited'] = false\n\n      delete newItem.original_children\n      delete newItem.original_id\n\n      return newItem\n    })\n\n    planNodes = planNodes.map(item => {\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n          return result\n        }, [])\n      }\n\n      if (item['limits']) {\n        item['limits'] = [...item['limits']]\n      }\n\n      if (item['custom_metadata'] && item['custom_metadata']['partner_network_list']) {\n        let metadata = Object.assign({}, item['custom_metadata'])\n\n        let newPartnerNetworkList = [...item['custom_metadata']['partner_network_list']]\n\n        newPartnerNetworkList = newPartnerNetworkList.reduce((result, partner) => {\n          let newPartner = Object.assign({}, partner)\n\n          newPartner['parent'] = item['id']\n\n          result.push(newPartner)\n          return result\n        }, [])\n\n        metadata['partner_network_list'] = newPartnerNetworkList\n\n        item['custom_metadata'] = metadata\n      }\n\n      if (item['original_node']) {\n        const found = nodeIDMap.find(set => {\n          return set.id === item['original_node']\n        })\n\n        if (found) {\n          item['original_node'] = found.newID\n        }\n      }\n      return item\n    })\n\n    return { planNodes, planTypeID }\n  }\n\n  static combineBaseBenefitNodes (baseNodes, benefitNodes, addFlag = false) {\n    // Get all the plan types\n    const planTypeNodes = benefitNodes.reduce((result, node) => {\n      if (node.level === 3 && node.code !== 'BASE') {\n        result.push(node)\n      }\n      return result\n    }, [])\n\n    let nodes = [...baseNodes]\n\n    // remove the base eligiblity nodes\n    nodes = nodes.filter(item => {\n      return !([7, 8].includes(item.level) && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL')\n    })\n\n    nodes = nodes.map(item => {\n      if (item.level === 6 && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL') {\n        let newItem = Object.assign({}, item)\n\n        newItem.children = newItem.children.filter(child => !!nodes.find(node => node.id === child))\n        return newItem\n      } else {\n        return item\n      }\n    })\n\n    // Duplicate the base nodes for every non-base plan type\n    nodes = planTypeNodes.reduce((result, planTypeNode) => {\n      const { planNodes, planTypeID } = this.generatePlanNodes(\n        result,\n        planTypeNode.name,\n        planTypeNode.code,\n        planTypeNode\n      )\n\n      const index = result.findIndex(item => item.level === 2 && item.code === 'CT')\n\n      result[index]['children'].push(planTypeID)\n\n      return [...result, ...planNodes]\n    }, nodes)\n\n    // Overlay the benefit nodes array to the base nodes array and return\n    nodes = nodes.map(node => {\n      let newNode = Object.assign({}, node)\n\n      const found = benefitNodes.find(benefit => {\n        if (newNode.level === 8) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6] &&\n            newNode.tree_path[7] === benefit.tree_path[7]\n          )\n        } else if (newNode.level === 7) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6]\n          )\n        } else if (newNode.level === 6) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5]\n          )\n        } else if (newNode.level === 5) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4]\n          )\n        } else if (newNode.level === 4) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3]\n          )\n        } else if (newNode.level === 3) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2]\n          )\n        } else if (newNode.code === 'CT') {\n          return benefit.code === 'CT'\n        } else if (newNode.code === 'MCT') {\n          return benefit.code === 'MCT'\n        } else {\n          return newNode.name === benefit.name && newNode.code === benefit.code && newNode.level === benefit.level\n        }\n      })\n\n      if (found) {\n        const foundNode = Object.assign({}, found)\n        delete foundNode.id\n        delete foundNode.children\n        delete foundNode.node_path\n        delete foundNode.tree_id\n        delete foundNode.tree_path\n\n        newNode = Object.assign({}, newNode, foundNode)\n\n        if (addFlag && newNode.level > 3 && newNode.tree_path[2] !== 'BASE') {\n          newNode['edited'] = true\n        }\n      } else {\n        if (\n          newNode.level > 6 ||\n          (newNode.level === 5 && ['RI', 'CV', 'RB', 'ID'].includes(newNode.tree_path[3])) ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'EX') ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'RI' && newNode.tree_path[4] === 'OM') ||\n          (newNode.level === 6 && ['EM', 'CC', 'EC', 'DNT', 'ADD', 'SH', 'SD', 'PV'].includes(newNode.tree_path[4]))\n        ) {\n          newNode['included'] = false\n        }\n      }\n\n      return newNode\n    })\n\n    nodes.map((node, i) => {\n      if (node.level > 3 && node.tree_path[2] !== 'BASE' && node.tree_path[3] !== 'RB') {\n        const baseIndex = this.getMatchByPlanCode(nodes, nodes[i], 'BASE')\n\n        if (addFlag && (node.tree_path[3] === 'EX' || (node.tree_path[3] === 'RI' && node.tree_path[4] === 'OM'))) {\n          if (\n            baseIndex > -1 &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] === true\n          ) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (addFlag) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        } else {\n          if (baseIndex > -1 && nodes[baseIndex]['included'] && nodes[baseIndex]['included'] === true) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (newNode['included'] === false) {\n              const foundNode = Object.assign({}, nodes[baseIndex])\n              delete foundNode.id\n              delete foundNode.children\n              delete foundNode.original_id\n              delete foundNode.original_children\n              delete foundNode.node_path\n              delete foundNode.tree_id\n              delete foundNode.tree_path\n\n              newNode = Object.assign({}, newNode, foundNode)\n\n              newNode['included'] = true\n            }\n\n            if (addFlag && !newNode['edited']) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        }\n      }\n    })\n\n    let count = 0\n\n    let eligiblityNodes = benefitNodes.filter(benefit => {\n      return [7, 8].includes(benefit.level) && benefit.tree_path[3] === 'TC' && benefit.tree_path[4] === 'EL'\n    })\n\n    eligiblityNodes = eligiblityNodes.sort((node1, node2) => {\n      if (node1.level < node2.level) return -1\n      if (node1.level > node2.level) return 1\n\n      return 0\n    })\n\n    eligiblityNodes.map(benefit => {\n      const newID = 'NODE-LOAD-' + count.toString().padStart(3, '0')\n      const parentLevel = benefit.level - 1\n      const parentCode = benefit.tree_path[benefit.level - 2]\n      const parentIndex = nodes.findIndex(node => {\n        if (benefit.level === 5) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3]\n          )\n        } else if (benefit.level === 6) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4]\n          )\n        } else if (benefit.level === 7) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5]\n          )\n        } else if (benefit.level === 8) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5] &&\n            benefit.tree_path[6] === node.tree_path[6]\n          )\n        }\n        return false\n      })\n\n      let newNode = Object.assign({}, benefit)\n      newNode['children'] = []\n      if (nodes[parentIndex] && nodes[parentIndex] !== undefined) {\n        let newChildren = [...nodes[parentIndex].children]\n        newChildren.push(newID)\n\n        nodes[parentIndex]['children'] = newChildren\n      }\n\n      newNode['included'] = true\n      newNode['id'] = newID\n\n      nodes.push(newNode)\n      count++\n    })\n\n    return nodes\n  }\n\n  static getMatchByPlanCode (nodes, baseNode, planCode) {\n    const planIndex = nodes.findIndex(item => {\n      if (baseNode.level === 8) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6] &&\n          baseNode.tree_path[7] === item.tree_path[7]\n        )\n      } else if (baseNode.level === 7) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6]\n        )\n      } else if (baseNode.level === 6) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5]\n        )\n      } else if (baseNode.level === 5) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4]\n        )\n      } else if (baseNode.level === 4) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3]\n        )\n      } else if (baseNode.level === 3) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2]\n        )\n      } else {\n        return baseNode.name === item.name && baseNode.code === item.code && baseNode.level === item.level\n      }\n    })\n    return planIndex\n  }\n}\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport SideBar from './Components/SideBar/SideBar'\nimport LimitTable from './Components/LimitTable/LimitTable'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n// import { BenefitNode } from 'Utilities/BenefitNode'\nimport { BenefitNode2 } from 'Utilities/BenefitNode2'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { contractType, member, baseContract, clientContract, memberContract } = props\n  // Service\n\n  // Local Variables\n  const [selectedPlanType, setSelectedPlanType] = React.useState('BASE')\n  const [selectedPlanPackage, setSelectedPlanPackage] = React.useState('RB')\n  const [selectedBenefitCategory, setSelectedBenefitCategory] = React.useState('RBC')\n\n  const [benefitRows, setBenefitRows] = React.useState([])\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [contractNodes, setContractNodes] = React.useState([])\n  const [planTypeNodes, setPlanTypeNodes] = React.useState([])\n  const [planPackageNodes, setPlanPackageNodes] = React.useState([])\n  const [benefitCategoryNodes, setBenefitCategoryNodes] = React.useState([])\n  const [benefitTypeNodes, setBenefitTypeNodes] = React.useState([])\n  const [mainBenefitNodes, setMainBenefitNodes] = React.useState([])\n  const [subBenefitNodes, setSubBenefitNodes] = React.useState([])\n\n  const [contractId, setContractId] = React.useState('')\n\n  React.useEffect(() => {\n    if (member) {\n      // console.log('Benefit Tab Member', member)\n      if (member.contracts) setContractId(member.contracts.slice().pop())\n    }\n  }, [member])\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      if (baseContract && clientContract) {\n        const baseNodes = BenefitNode2.convertNodeData(baseContract) // temporary handling if no result from endpoint\n        const contractNodes = BenefitNode2.convertNodeData(clientContract, true) // temporary handling if member have no benefit\n        const nodes = BenefitNode2.combineBaseBenefitNodes(baseNodes, contractNodes)\n\n        const eList = BenefitNode2.createExclusionList(nodes)\n\n        setExclusionList(eList)\n\n        setContractNodes(BenefitNode2.getFilteredNodes(nodes, 2))\n        setPlanTypeNodes(BenefitNode2.getFilteredNodes(nodes, 3))\n        setPlanPackageNodes(BenefitNode2.getFilteredNodes(nodes, 4))\n        setBenefitCategoryNodes(BenefitNode2.getFilteredNodes(nodes, 5))\n        setBenefitTypeNodes(BenefitNode2.getFilteredNodes(nodes, 6))\n        setMainBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 7))\n        setSubBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 8))\n\n        setSelectedPlanType('BASE')\n        setSelectedPlanPackage('RB')\n        setSelectedBenefitCategory('RBC')\n      }\n    } else {\n      if (member && memberContract) {\n        // LOGIC HERE\n      }\n    }\n  }, [contractType, baseContract, clientContract, memberContract])\n\n  React.useEffect(() => {\n    setBenefitRows(getRows(selectedPlanPackage, selectedBenefitCategory))\n  }, [selectedPlanType, selectedPlanPackage, selectedBenefitCategory])\n\n  const queryColumn = (collection, { search, field }) => {\n    // if (collection === 'benefits') {\n    //   clearTimeout(debounce)\n    //   setDebounce(\n    //     setTimeout(() => {\n    //       let searchObj = search\n    //       let category = field\n    //       if (field === 'id') {\n    //         setPartnerId(search)\n    //         if (partnerName || partnerLocation) {\n    //           searchObj = {\n    //             id: search,\n    //             name: partnerName,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'name') {\n    //         setPartnerName(search)\n    //         if (partnerId || partnerLocation) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: search,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'address') {\n    //         setPartnerLocation(search)\n    //         if (partnerId || partnerName) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: partnerName,\n    //             address: search\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       console.log(search, category)\n    //       if (search.length >= 3 || (!search && category === 'and')) {\n    //         benefitservice({\n    //           member_account_no: memberAccountNumber,\n    //           params: {\n    //             limit: benefits.limit,\n    //             page: benefits.page,\n    //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //             search: searchObj,\n    //             category: category\n    //           }\n    //         }).then(res => {\n    //           const { data } = res.data\n    //           setbenefits(state => ({\n    //             ...state,\n    //             data: data.results,\n    //             count: data.count,\n    //             page: 1,\n    //             orderBy: 'name',\n    //             order: true\n    //           }))\n    //         })\n    //       } else fetchAll()\n    //     }, 500)\n    //   )\n    // } else {\n    //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    // }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     ...benefits,\n    //     orderBy,\n    //     order: !benefits.order,\n    //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    //   setDoctors(state => ({ ...state, filtered: sorted }))\n    // }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     category: benefits.category,\n    //     limit: benefits.limit,\n    //     page: benefits.page,\n    //     search: benefits.search,\n    //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //     ...params\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    // }\n  }\n\n  const getContractNode = () => {\n    return BenefitNode2.getContractNode(contractNodes)\n  }\n\n  const getCategoryNode = () => {\n    return BenefitNode2.getCategoryNode(\n      planPackageNodes,\n      benefitCategoryNodes,\n      selectedPlanType,\n      selectedPlanPackage,\n      selectedBenefitCategory\n    )\n  }\n\n  const getPlanTypeList = () => {\n    return BenefitNode2.getPlanTypeList(planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes)\n  }\n\n  const getRows = (planPackage, benefitCategory) => {\n    return BenefitNode2.getRows(\n      exclusionList,\n      benefitCategoryNodes,\n      benefitTypeNodes,\n      mainBenefitNodes,\n      subBenefitNodes,\n      selectedPlanType,\n      planPackage,\n      benefitCategory\n    )\n  }\n\n  const getRoomAndBoardList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RB')\n  }\n\n  const getCoverageList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'CV')\n  }\n\n  const getRiderList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RI')\n  }\n\n  const handleItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setSelectedPlanPackage(planPackage)\n    setSelectedBenefitCategory(benefitCategory)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          {contractType === 'client' && (\n            <SideBar\n              contractId={contractId}\n              planTypeList={getPlanTypeList()}\n              contractNode={getContractNode()}\n              categoryNode={getCategoryNode()}\n              roomAndBoardList={getRoomAndBoardList()}\n              coverageList={getCoverageList()}\n              riderList={getRiderList()}\n              onItemClick={handleItemClick}\n            />\n          )}\n          {/* {contractType === 'member' && (\n            <SideBar\n              contractId={contractId}\n              planTypeList={getPlanTypeList()}\n              contractNode={getContractNode()}\n              categoryNode={getCategoryNode()}\n              roomAndBoardList={getRoomAndBoardList()}\n              coverageList={getCoverageList()}\n              riderList={getRiderList()}\n              onItemClick={handleItemClick}\n            />\n          )} */}\n        </div>\n\n        <div className={classes['right-side']}>\n          {contractType === 'client' && (\n            <LimitTable\n              benefitType={selectedBenefitCategory}\n              rows={benefitRows}\n              contractId={contractId}\n              planTypeList={getPlanTypeList()}\n              contractNode={getContractNode()}\n              categoryNode={getCategoryNode()}\n              roomAndBoardList={getRoomAndBoardList()}\n              coverageList={getCoverageList()}\n              riderList={getRiderList()}\n            />\n          )}\n          {/* {contractType === 'member' && (\n            <LimitTable\n              benefitType={selectedBenefitCategory}\n              rows={benefitRows}\n              contractId={contractId}\n              planTypeList={getPlanTypeList()}\n              contractNode={getContractNode()}\n              categoryNode={getCategoryNode()}\n              roomAndBoardList={getRoomAndBoardList()}\n              coverageList={getCoverageList()}\n              riderList={getRiderList()}\n            />\n          )} */}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'parent_name', search: true },\n  { name: 'Item', sortField: 'name', search: true }\n]\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { member, memberContract } = props\n  // Service\n\n  // Local Variables\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlantTypes] = React.useState([])\n\n  const [rows, setRows] = React.useState([])\n\n  const getExclusions = () => {\n    const benefitsExclusion = memberContract.benefits.filter(element => {\n      return element.level === 5 && element.tree_path[3] === 'EX'\n    })\n    // console.log('ALL Exclusion Benefit ', benefitsExclusion)\n\n    let childExclusions = []\n    benefitsExclusion.map(benefit => {\n      benefit.children.forEach(childId => {\n        const subBenefit = memberContract.benefits.filter(element => element.original_id === childId)[0]\n        // console.log('test0', memberContract.benefits[0])\n        // console.log('Any subBenefit? ', subBenefit)\n        if (subBenefit) {\n          childExclusions.push({\n            name: subBenefit.name,\n            parent_name: benefit.name,\n            code: subBenefit.code,\n            parent_code: benefit.code,\n            plan_type: benefit.tree_path[2]\n          })\n        }\n      })\n    })\n\n    const subPlan = memberContract.benefits.filter(element => element.level === 3)\n    const planTypes = subPlan.map(plan => plan.code)\n    setPlantTypes(planTypes)\n    // console.log('ALL SubPlanTypes ', planTypes)\n\n    setExclusionList(childExclusions)\n  }\n\n  React.useEffect(() => {\n    if (memberContract && memberContract.benefits) {\n      getExclusions()\n      setRows(generateRows(selectedPlan))\n    }\n  }, [memberContract])\n\n  const queryColumn = (collection, { search, field }) => {\n    // if (collection === 'benefits') {\n    //   clearTimeout(debounce)\n    //   setDebounce(\n    //     setTimeout(() => {\n    //       let searchObj = search\n    //       let category = field\n    //       if (field === 'id') {\n    //         setPartnerId(search)\n    //         if (partnerName || partnerLocation) {\n    //           searchObj = {\n    //             id: search,\n    //             name: partnerName,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'name') {\n    //         setPartnerName(search)\n    //         if (partnerId || partnerLocation) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: search,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'address') {\n    //         setPartnerLocation(search)\n    //         if (partnerId || partnerName) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: partnerName,\n    //             address: search\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       console.log(search, category)\n    //       if (search.length >= 3 || (!search && category === 'and')) {\n    //         benefitservice({\n    //           member_account_no: memberAccountNumber,\n    //           params: {\n    //             limit: benefits.limit,\n    //             page: benefits.page,\n    //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //             search: searchObj,\n    //             category: category\n    //           }\n    //         }).then(res => {\n    //           const { data } = res.data\n    //           setbenefits(state => ({\n    //             ...state,\n    //             data: data.results,\n    //             count: data.count,\n    //             page: 1,\n    //             orderBy: 'name',\n    //             order: true\n    //           }))\n    //         })\n    //       } else fetchAll()\n    //     }, 500)\n    //   )\n    // } else {\n    //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    // }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     ...benefits,\n    //     orderBy,\n    //     order: !benefits.order,\n    //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    //   setDoctors(state => ({ ...state, filtered: sorted }))\n    // }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     category: benefits.category,\n    //     limit: benefits.limit,\n    //     page: benefits.page,\n    //     search: benefits.search,\n    //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //     ...params\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    // }\n  }\n\n  const generateRows = selectedPlan => {\n    let rows = exclusionList.filter(benefit => benefit.plan_type === selectedPlan)\n    // FILTER ALL\n    // if (largeSearch.trim() !== '') {\n    //   filteredTickets = filteredTickets.filter(col => {\n    //     return (\n    //       col['name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim()) ||\n    //       col['parent_name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim())\n    //     )\n    //   })\n    // }\n    // FILTER COLUMNS\n    // columns.map(column => {\n    //   filteredTickets = filteredTickets.filter(ticket =>\n    //     filters[column.name]\n    //       ? filters[column.name] === '' ||\n    //         (ticket[column.name] &&\n    //           ticket[column.name]\n    //             .toString()\n    //             .toLowerCase()\n    //             .includes(filters[column.name].toLowerCase()))\n    //       : true\n    //   )\n    // })\n\n    return rows\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link\n                onClick={() => {\n                  setSelectedPlan(item)\n                  setRows(generateRows(item))\n                }}\n              >\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      // active={benefits.orderBy === headCell.sortField}\n                      // direction={benefits.order ? 'asc' : 'desc'}\n                      onClick={event => {}}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={rows.map((row, index) => (\n              <TableRow key={`ex-${index}`}>\n                <TableCell>{row.parent_name}</TableCell>\n                <TableCell>{row.name}</TableCell>\n              </TableRow>\n            ))}\n            pagination\n            count={0}\n            page={1}\n            limit={5}\n            rowsPerPageOptions={[5, 10, 15]}\n            onChange={args => {}}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search\n              }\n              category = 'and'\n            }\n          }\n          console.log(search, category)\n          if (search.length >= 3 || (!search && category === 'and')) {\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","function extractLoa (data) {\n  return data.map(item => {\n    const init = {\n      claim_number: item.claim_number ? item.claim_number : '',\n      __type:\n        item.ticket_type === 'Outpatient Procedure'\n          ? 'UtilizationOutPatientProcedure'\n          : item.ticket_type === 'Inpatient'\n            ? 'UtilizationInPatient'\n            : item.ticket_type === 'Consultation'\n              ? 'UtilizationOutPatientConsultation'\n              : item.ticket_type === 'Emergency Room'\n                ? 'UtilizationEmergency'\n                : 'UtilizationReimbursemt',\n      type: item.type ? item.type : 'IBNR',\n      grand_total: item.total_amount ? item.total_amount : 0,\n      diagnosis: item.diagnoses ? item.diagnoses : [],\n      doctors: item.professional_fees\n        ? item.professional_fees.map((doctor, index) => ({\n          name: doctor.doctor_name,\n          specialization: doctor.specialization,\n          id: `${index}`\n        }))\n        : [],\n      date_admitted: item.date_issued ? item.date_issued : '',\n      procedures: item.procedures ? item.procedures : [],\n      professional_fees: item.professional_fees ? item.professional_fees : []\n    }\n    return {\n      ...item,\n      __type: init.__type,\n      claim_no: init.claim_number,\n      diagnosis: init.diagnosis,\n      grand_total: init.grand_total,\n      session: 1,\n      date_admitted: init.date_admitted,\n      type: init.type,\n      doctors: init.doctors,\n      procedures: init.procedures,\n      professional_fees: init.professional_fees\n    }\n  })\n}\n\nfunction setDoctors (data) {\n  return data.map(item => {\n    let newDoctor = [{ id: item.partner_doctor_id, name: item.partner_doctor_name }]\n    let _doctors = [...item.doctors]\n    if (typeof newDoctor[0].id !== 'undefined') {\n      _doctors = [..._doctors, ...newDoctor]\n    }\n\n    return {\n      ...item,\n      doctors: _doctors\n    }\n  })\n}\n\nexport { extractLoa, setDoctors }\n","import React from 'react'\n// import EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { extractLoa, setDoctors } from './helper'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setLimitType, resetLimitType } from '../../Store/actions'\n\nconst headCells = [\n  { name: 'Claim ID', sortField: 'claim_number', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedure', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.title)\n\n  const { fetchService, diagnosis = [], member = {}, memberBenefitLimit = {}, utilizationLoa = {} } = props\n  const [list, setList] = React.useState({\n    rows: [],\n    alter: []\n  })\n\n  const [filters, setFilters] = React.useState({})\n  const [allFilters, setAllFilters] = React.useState({})\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: list.rows,\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (!memberBenefitLimit.length <= 0) {\n        type = memberBenefitLimit[0].type\n        limit = memberBenefitLimit[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          let _utilizationLoa = extractLoa(utilizationLoa)\n\n          let list = setDoctors(_utilizationLoa.concat(data))\n\n          setList(state => ({ ...state, rows: list, alter: list }))\n          setFilteredRows(state => ({...state, count: list.length, data: list.slice(0, state.limit)}))\n\n          let ibnr = 0\n          let utilized = 0\n\n          _utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = diagnosis.filter(icd => icd.primary === true)[0] || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { category_code } = data[0] || []\n          primary.category_code = category_code\n\n          fetchService({\n            member_account_no: member.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            // extractation of needed fields\n            _utilizationLoa = extractLoa(_utilizationLoa)\n            let list = setDoctors(_utilizationLoa.concat(data))\n\n            setList(state => ({ ...state, rows: list, alter: list }))\n            setFilteredRows(state => ({...state, count: list.length, data: list.slice(0, state.limit)}))\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, memberBenefitLimit, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    let rows = allFilter(list.rows, allFilters)\n    rows = columnFilter(rows, filters)\n    // rows = lodash.sortBy(rows, 'claim_no')\n    setList(state => ({...state, alter: rows}))\n    setFilteredRows(state => ({...state, page: 1, count: rows.length, data: Object.keys(filters).length !== 0 ? lodash.chunk(rows, state.limit)[0] : lodash.take(rows, state.limit)}))\n  }, [filters, allFilters])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (field !== 'all') setFilters(state => ({ ...state, [field]: search }))\n        if (field === 'all') setAllFilters({ [field]: search })\n      }, 500)\n    )\n  }\n\n  const compare = (list, find, comparer = includesAny, fields = []) => {\n    if (Array.isArray(list)) {\n      return list.some(item => {\n        for (const field of fields) {\n          if (comparer(item[field], find)) return true\n        }\n      })\n    } else {\n      if (comparer(list, find)) return true\n    }\n    return false\n  }\n\n  const includesAny = (s1 = '', s2 = '') => {\n    return s1.toLowerCase().includes(s2.toLowerCase())\n  }\n\n  const allFilter = (rows, filters) => {\n    let filteredRows = rows\n    return filteredRows.filter(row => {\n      if (includesAny(row.claim_no, filters.all)) return true\n\n      if (includesAny(row.partner_name, filters.all)) return true\n\n      if (DateFormatter(row.date_admitted) === filters.all) return true\n\n      if (includesAny(row.type, filters.all)) return true\n      // temporary\n      if (includesAny(row.status === 'Open' ? row.status : 'Approved', filters.all)) return true\n\n      if (row.grand_total === parseFloat(filters.all)) return true\n\n      if (row.session === parseFloat(filters.all)) return true\n\n      // console.log(compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis']))\n      if (row.__type === 'UtilizationInPatient') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      }\n    })\n  }\n\n  const columnFilter = (rows, filters) => {\n    // hard coded ugly static search\n    // TODO refactor for dynamic deep comparison\n    let filteredRows = rows\n    for (const filter in filters) if (filters[filter] === '') delete filters[filter]\n    return filteredRows.filter(row => {\n      if (!includesAny(row.claim_no, filters.claim_number)) return false\n\n      // if (!includesAny(row.partner_name, filters.provider)) return false\n\n      if (filters.date && DateFormatter(row.date_admitted) !== filters.date) return false\n\n      if (!includesAny(row.type, filters.type)) return false\n      // temporary\n      if (!includesAny(row.status === 'Open' ? row.status : 'Approved', filters.status)) return false\n\n      if (filters.amount && row.grand_total !== parseFloat(filters.amount)) return false\n\n      if (filters.session && row.session !== parseFloat(filters.session)) return false\n\n      if (row.__type === 'UtilizationInPatient') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (!compare(row.doctors, filters.provider, includesAny, ['id', 'name']) && !includesAny(row.partner_name, filters.provider)) return false\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (!compare(row.doctors, filters.provider, includesAny, ['id', 'name']) && !includesAny(row.partner_name, filters.provider)) return false\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (!compare(row.doctors, filters.provider, includesAny, ['id', 'name']) && !includesAny(row.partner_name, filters.provider)) return false\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (!compare(row.doctors, filters.provider, includesAny, ['id', 'name']) && !includesAny(row.partner_name, filters.provider)) return false\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (!compare(row.doctors, filters.provider, includesAny, ['id', 'name']) && !includesAny(row.partner_name, filters.provider)) return false\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      }\n      return true\n    })\n  }\n\n  // TODO\n  // THIS CAN BE BETTER\n  const handleOnPaginate = args => {\n    if (args && args.limit && args.page) {\n      setList(state => ({...state, limit: args.limit}))\n      setFilteredRows(state => ({...state, count: list.alter.length, page: args.page, limit: args.limit, data: lodash.take(list.alter, args.limit)}))\n    } else if (args && args.page) {\n      if (list.alter.length === list.rows.length) {\n        return setFilteredRows(state => ({...state, page: args.page, data: lodash.chunk(list.rows, state.limit)[args.page - 1]}))\n      }\n      setFilteredRows(state => ({...state, page: args.page, data: lodash.chunk(list.alter, state.limit)[args.page - 1]}))\n    }\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        <TableCell>\n          <div className={classes.cell}>\n            <span>{row.claim_no}</span>\n            <span className={classes.label}>SWIPE</span>\n            <span>YES</span>\n          </div>\n        </TableCell>\n        <TableCell>\n          {row.diagnosis.map((row, index) => (\n            <div key={`icd-${index}`} className={classes.cell}>\n              <span>{row.diagnosis}</span>\n              <span className={classes.label}>ICD 10 CODE</span>\n              <span>{row.icd10_code}</span>\n            </div>\n          ))}\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            {row.procedures.map((row, index) => (\n              <div key={`procedure-${index}`} className={classes.cell}>\n                <span>{row.procedure_name}</span>\n                <span className={classes.label}>CPT CODE</span>\n                <span>{row.cpt_code}</span>\n              </div>\n            ))}\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            <div className={classes.cell}>\n              <span>{row.partner_name}</span>\n              <span className={classes.label}>MEDICAL DOCTOR</span>\n              {row.doctors.map((row, index) => (\n                <span key={`doctor-${index}`}>{`${row.name},`}</span>\n              ))}\n            </div>\n          </div>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{CurrencyFormatter(row.grand_total)}</span>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{row.session}</span>\n        </TableCell>\n        <TableCell>\n          <span>{DateFormatter(row.date_admitted)}</span>\n        </TableCell>\n        <TableCell>\n          <span>{row.type}</span>\n        </TableCell>\n        <TableCell align='center'>\n          <span>{row.status === 'Open' ? 'Open' : 'Approved' }</span>\n        </TableCell>\n        <TableCell align='center'>\n          <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n        </TableCell>\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${(((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100) < 0 ? 0 : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100}%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all' })}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={renderRows({rows: filteredRows.data})}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n// import file from './INTELLICARE SPECIMEN CONTRACT_2017.pdf'\n// Styles\nimport classes from './PdfViewer.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nexport default function PdfViewer (props) {\n  const { file, fileName, initialPageNumber = 1, initialScale = 1, download = () => {}, print = () => {} } = props\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [numPages, setNumPages] = React.useState(0)\n\n  const _file = file\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography className={classes['file-name']} align='left'>\n          {fileName}\n        </Typography>\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={classes.control}>\n          <span>\n            <IconButton onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={classes.control}>\n          <span>\n            <IconButton onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.pdf}>\n        <Document\n          file={file}\n          onLoadSuccess={document => {\n            setNumPages(document.numPages)\n          }}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport PdfViewer from 'SharedComponents/PdfViewer/PdfViewer'\n// Styles\n// import classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { fetchService } = props\n  // Variables\n  const { fileName } = props\n  return <PdfViewer file='' fileName='INTELLICARE SPECIMEN CONTRACT_2017.pdf' />\n}\n","import React from 'react'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate } = props\n  // Variables\n  const {\n    claim,\n    permissions,\n    member,\n    contractType,\n    baseContract,\n    clientContract,\n    memberContract,\n    memberBenefitLimit,\n    utilizationLoa\n  } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors } = props\n\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benifits-tab' label='BENEFITS'>\n          <Benefits\n            contractType={contractType}\n            member={member}\n            baseContract={baseContract}\n            clientContract={clientContract}\n            memberContract={memberContract}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='-exclusions-tab' label='EXCLUSIONS'>\n          <Exclusions member={member} baseContract={baseContract} memberContract={memberContract} />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            member={member}\n            memberBenefitLimit={memberBenefitLimit}\n            memberAccountNumber={claim.member_account_number}\n            diagnosis={claim.diagnosis}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          <Contract />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string().trim()\n    .label('Approval Code')\n    .required(),\n  loa_number: Joi.string().trim()\n    .label('LOA No.')\n    .required(),\n  member_account_number: Joi.string().trim()\n    .label('Member Account No.')\n    .required(),\n  member_last_name: Joi.string().trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string().trim()\n    .label('Member First Name')\n    .required(),\n  member_middle_name: Joi.string().trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  facility_id: Joi.string().trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string().trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  pro_id: Joi.string().trim()\n    .label('PRO ID')\n    .required(),\n  pro_name: Joi.string().trim()\n    .label('PRO Name')\n    .required(),\n  with_corporate_guarantee: Joi.string().trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string().trim()\n    .label('LOA Notes')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required(),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  let errors = {}\n  let hasPrimary = false\n  data.map((item, index) => {\n    if (item.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ description: item.description, code: item.code }))\n    if (error) errors = { ...errors, [index]: { index, error } }\n  })\n\n  if (!data.length) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one item' } }\n  } else if (!hasPrimary) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one primary item' } }\n  }\n\n  return { ...errors }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport BaseValidator from './BaseValidator'\nimport DiagnosisListValidator from './DiagnosisListValidator'\nimport HospitalItemValidator from './HospitalItemValidator'\nimport ProfessionalFeeValidator from './ProfessionalFeeValidator'\nimport ProcedureValidator from './ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetErrorBase,\n  resetErrorDiagnosis,\n  resetErrorProcedure,\n  resetErrorHospitalItem,\n  resetErrorProfessionalFee,\n  setErrorDiagnosis,\n  setErrorBase,\n  setErrorProcedure,\n  setErrorHospitalItem,\n  setErrorProfessionalFee,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    validateReject,\n    onChangePro\n  } = props\n  // Variables\n  const { claim, permissions } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [isViewOnly, setIsViewOnly] = React.useState(false)\n\n  const [disableControls] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    setIsViewOnly(props.isViewOnly)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis || [],\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n\n      dispatch(setRejectStatus(validateReject({ total: sum })))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const doValidateBase = value => {\n    const { error } = BaseValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: value.date_from,\n      date_to: value.date_to,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n    dispatch(setErrorBase({ details: { ...error } }))\n    if (error) {\n      console.group('Base Error')\n      console.log('Errors', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateDiagnosis = data => {\n    const errors = DiagnosisListValidator(data)\n    let arr_errors = []\n    for (const err in errors) {\n      if (errors.hasOwnProperty(err)) {\n        const { index, error } = errors[err]\n        dispatch(setErrorDiagnosis({ index: index, details: { error } }))\n        arr_errors.push({ index: index, details: { error } })\n      }\n    }\n\n    if (arr_errors.length > 0) {\n      console.group('Diagnosis Error')\n      console.log('Error', arr_errors)\n      console.groupEnd()\n    }\n    return arr_errors\n  }\n\n  const doValidateProcedure = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProcedure({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProcedure({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n\n      console.group('Procedure Error')\n      console.log('Direct', error)\n      console.groupEnd()\n\n      return error\n    }\n  }\n\n  const doValidateHospitalItem = ({ index, details, mode, openItem = false }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorHospitalItem({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Hospital Items Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateProfessionalFee = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProfessionalFee({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Professional Fee Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateAll = () => {\n    const fields = {}\n\n    for (let f in allowedFields) fields[f] = claim[f]\n    dispatch(resetErrorBase())\n    dispatch(resetErrorDiagnosis())\n    dispatch(resetErrorProcedure())\n    dispatch(resetErrorHospitalItem())\n    dispatch(resetErrorProfessionalFee())\n\n    const ErrorBase = doValidateBase(fields)\n    const ErrorDiagnosis = doValidateDiagnosis(fields.diagnosis).some(item => !!item)\n\n    const ErrorProcedure = fields.procedures\n      .map((item, index) => doValidateProcedure({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorHospitalItems = fields.hospital_items\n      .map((item, index) => doValidateHospitalItem({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorProfessionalFee = fields.professional_fees\n      .map((item, index) => doValidateProfessionalFee({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    // console.log('ErrorBase', ErrorBase)\n    // console.log('ErrorDiagnosis', ErrorDiagnosis)\n    // console.log('ErrorProcedure', ErrorProcedure)\n    // console.log('ErrorHospitalItems', ErrorHospitalItems)\n    // console.log('ErrorProfessionalFee', ErrorProfessionalFee)\n    return !!(ErrorBase || ErrorDiagnosis || ErrorProcedure || ErrorHospitalItems || ErrorProfessionalFee)\n  }\n\n  React.useEffect(() => {\n    console.group('Validation Failed')\n    console.log('Dispatch', errors)\n    console.groupEnd()\n  }, [errors])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                disableControls={disableControls}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      disabled={disableControls}\n                      onChange={handleOnChangeRoomType}\n                      error={errors.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      disabled={disableControls}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={errors.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      // disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={errors.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      errors={errors.diagnosis}\n                      isViewOnly={isViewOnly}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={errors.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            isViewOnly={isViewOnly}\n            disabled={disableControls}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType='InPatient'\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Date of Service')\n    .required(),\n  department: Joi.string()\n    .trim()\n    .label('Department')\n    .required(),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Doctor Id')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  anesthesiologist_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID (Anesthesiologist)')\n    .allow('', null),\n  anesthesiologist_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Anesthesiologist) Name')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required(),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  let errors = {}\n  let hasPrimary = false\n  data.map((item, index) => {\n    if (item.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ description: item.description, code: item.code }))\n    if (error) errors = { ...errors, [index]: { index, error } }\n  })\n\n  if (!data.length) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one item' } }\n  } else if (!hasPrimary) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one primary item' } }\n  }\n\n  return { ...errors }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport BaseValidator from './BaseValidator'\nimport DiagnosisListValidator from './DiagnosisListValidator'\nimport ProfessionalFeeValidator from './ProfessionalFeeValidator'\nimport ProcedureValidator from './ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetErrorBase,\n  resetErrorDiagnosis,\n  resetErrorProcedure,\n  resetErrorProfessionalFee,\n  setErrorDiagnosis,\n  setErrorBase,\n  setErrorProcedure,\n  setErrorProfessionalFee,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    validateReject\n  } = props\n  // Variables\n  const { claim, permissions } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n  const escalations = useSelector(state => state.escalations)\n\n  const [isViewOnly, setIsViewOnly] = React.useState(false)\n\n  const [disableControls] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    setIsViewOnly(props.isViewOnly)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis || [],\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    return currentValue + total\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n\n      dispatch(setRejectStatus(validateReject({ total: sum })))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const doValidateBase = value => {\n    const { error } = BaseValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name,\n      date_to: value.date_to,\n      department: value.department,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      anesthesiologist_id: value.anesthesiologist_id,\n      anesthesiologist_name: value.anesthesiologist_name\n    })\n    dispatch(setErrorBase({ details: { ...error } }))\n    if (error) {\n      console.group('Base Error')\n      console.log('Errors', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateDiagnosis = data => {\n    const errors = DiagnosisListValidator(data)\n    let arr_errors = []\n    for (const err in errors) {\n      if (errors.hasOwnProperty(err)) {\n        const { index, error } = errors[err]\n        dispatch(setErrorDiagnosis({ index: index, details: { error } }))\n        arr_errors.push({ index: index, details: { error } })\n      }\n    }\n\n    if (arr_errors.length > 0) {\n      console.group('Diagnosis Error')\n      console.log('Error', arr_errors)\n      console.groupEnd()\n    }\n    return arr_errors\n  }\n\n  const doValidateProcedure = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProcedure({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProcedure({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n\n      console.group('Procedure Error')\n      console.log('Direct', error)\n      console.groupEnd()\n\n      return error\n    }\n  }\n  const doValidateProfessionalFee = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProfessionalFee({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Professional Fee Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateAll = () => {\n    const fields = {}\n\n    for (let f in allowedFields) fields[f] = claim[f]\n    dispatch(resetErrorBase())\n    dispatch(resetErrorDiagnosis())\n    dispatch(resetErrorProcedure())\n    dispatch(resetErrorProfessionalFee())\n\n    const ErrorBase = doValidateBase(fields)\n    const ErrorDiagnosis = doValidateDiagnosis(fields.diagnosis).some(item => !!item)\n\n    const ErrorProcedure = fields.procedures\n      .map((item, index) => doValidateProcedure({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorProfessionalFee = fields.professional_fees\n      .map((item, index) => doValidateProfessionalFee({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    // console.log('ErrorBase', ErrorBase)\n    // console.log('ErrorDiagnosis', ErrorDiagnosis)\n    // console.log('ErrorProcedure', ErrorProcedure)\n    // console.log('ErrorHospitalItems', ErrorHospitalItems)\n    // console.log('ErrorProfessionalFee', ErrorProfessionalFee)\n    return !!(ErrorBase || ErrorDiagnosis || ErrorProcedure || ErrorProfessionalFee)\n  }\n\n  React.useEffect(() => {\n    console.group('Validation Failed')\n    console.log('Dispatch', errors)\n    console.groupEnd()\n  }, [errors])\n\n  return (\n    <div className={classes.root}>\n      {claim ? (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                disableControls={disableControls}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={errors.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={errors.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      // disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={errors.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      errors={errors.diagnosis}\n                      isViewOnly={isViewOnly}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={errors.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            isViewOnly={isViewOnly}\n            disabled={disableControls}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType='OutPatientProcedure'\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Date of Service')\n    .required(),\n  recommendation: Joi.string()\n    .trim()\n    .label('Recommendation')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Doctor Id')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  anesthesiologist_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID (Anesthesiologist)')\n    .allow('', null),\n  anesthesiologist_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Anesthesiologist) Name')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required(),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  let errors = {}\n  let hasPrimary = false\n  data.map((item, index) => {\n    if (item.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ description: item.description, code: item.code }))\n    if (error) errors = { ...errors, [index]: { index, error } }\n  })\n\n  if (!data.length) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one item' } }\n  } else if (!hasPrimary) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one primary item' } }\n  }\n\n  return { ...errors }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport BaseValidator from './BaseValidator'\nimport DiagnosisListValidator from './DiagnosisListValidator'\nimport ProfessionalFeeValidator from './ProfessionalFeeValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetErrorBase,\n  resetErrorDiagnosis,\n  resetErrorProcedure,\n  resetErrorHospitalItem,\n  resetErrorProfessionalFee,\n  setErrorDiagnosis,\n  setErrorBase,\n  setErrorProfessionalFee,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    validateReject\n  } = props\n  // Variables\n  const { claim, permissions } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n  const escalations = useSelector(state => state.escalations)\n\n  const [isViewOnly, setIsViewOnly] = React.useState(false)\n\n  const [disableControls] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    setIsViewOnly(props.isViewOnly)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis || [],\n          loa_notes: data.loa_notes,\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    return currentValue + total\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n\n      dispatch(setRejectStatus(validateReject({ total: sum })))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const doValidateBase = value => {\n    const { error } = BaseValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      anesthesiologist_id: value.anesthesiologist_id,\n      anesthesiologist_name: value.anesthesiologist_name,\n      date_to: value.date_to,\n      recommendation: value.recommendation,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n    dispatch(setErrorBase({ details: { ...error } }))\n    if (error) {\n      console.group('Base Error')\n      console.log('Errors', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateDiagnosis = data => {\n    const errors = DiagnosisListValidator(data)\n    let arr_errors = []\n    for (const err in errors) {\n      if (errors.hasOwnProperty(err)) {\n        const { index, error } = errors[err]\n        dispatch(setErrorDiagnosis({ index: index, details: { error } }))\n        arr_errors.push({ index: index, details: { error } })\n      }\n    }\n\n    if (arr_errors.length > 0) {\n      console.group('Diagnosis Error')\n      console.log('Error', arr_errors)\n      console.groupEnd()\n    }\n    return arr_errors\n  }\n  const doValidateProfessionalFee = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProfessionalFee({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Professional Fee Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateAll = () => {\n    const fields = {}\n\n    for (let f in allowedFields) fields[f] = claim[f]\n    dispatch(resetErrorBase())\n    dispatch(resetErrorDiagnosis())\n    dispatch(resetErrorProcedure())\n    dispatch(resetErrorHospitalItem())\n    dispatch(resetErrorProfessionalFee())\n\n    const ErrorBase = doValidateBase(fields)\n    const ErrorDiagnosis = doValidateDiagnosis(fields.diagnosis).some(item => !!item)\n    const ErrorProfessionalFee = fields.professional_fees\n      .map((item, index) => doValidateProfessionalFee({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    // console.log('ErrorBase', ErrorBase)\n    // console.log('ErrorDiagnosis', ErrorDiagnosis)\n    // console.log('ErrorProcedure', ErrorProcedure)\n    // console.log('ErrorHospitalItems', ErrorHospitalItems)\n    // console.log('ErrorProfessionalFee', ErrorProfessionalFee)\n    return !!(ErrorBase || ErrorDiagnosis || ErrorProfessionalFee)\n  }\n\n  React.useEffect(() => {\n    console.group('Validation Failed')\n    console.log('Dispatch', errors)\n    console.groupEnd()\n  }, [errors])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                disableControls={disableControls}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Faclity ID'\n                      value={claim.facility_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={errors.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={errors.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      disabled={disableControls}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      // disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={errors.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={errors.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      errors={errors.diagnosis}\n                      isViewOnly={isViewOnly}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={errors.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} {...props} />{' '}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doReject={onReject}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            isViewOnly={isViewOnly}\n            disabled={disableControls}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType='OutPatientConsultation'\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","const defaults = [\n  'member_account_number',\n  'member_last_name',\n  'member_first_name',\n  'reimbursement_type',\n  'official_receipt_number'\n]\n\nconst generateValidationFields = data => {\n  const validators = [...defaults]\n  switch (data) {\n    case 'In-Patient':\n      validators.push('facility_id')\n      validators.push('facility_name')\n      validators.push('date_from')\n      validators.push('date_to')\n      validators.push('pro_name')\n      break\n    case 'Out-Patient':\n    case 'Professional Fee':\n    case 'Maternity Assistance':\n      validators.push('doctor_id')\n      validators.push('doctor_name')\n      validators.push('facility_id')\n      validators.push('facility_name')\n      validators.push('date_of_service')\n      break\n    default:\n      break\n  }\n  return validators\n}\n\nexport default generateValidationFields\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\n// In-Patient validator\nconst ipValidator = Joi.object({\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .messages({ 'string.empty': `\"Pro name\" is required` })\n    .required(),\n  official_receipt_number: Joi.string()\n    .trim()\n    .label('Official Receipt Number')\n    .messages({ 'string.empty': `\"Official Receipt Number\" is required` })\n    .required(),\n  reimbursement_type: Joi.string()\n    .trim()\n    .label('Reimbursement Type')\n    .messages({ 'string.empty': `\"Reimbursement Type\" is required` })\n    .required()\n}).options({ abortEarly: false })\n\n// Out-Patient Validator\nconst opValidator = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Doctor Id')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required` })\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  date_of_service: Joi.date()\n    .label('Date of Service')\n    .messages({ 'string.empty': `\"Date of Service\" is required` })\n    .required(),\n  official_receipt_number: Joi.string()\n    .trim()\n    .label('Official Receipt Number')\n    .messages({ 'string.empty': `\"Official Receipt Number\" is required` })\n    .required(),\n  reimbursement_type: Joi.string()\n    .trim()\n    .label('Reimbursement Type')\n    .messages({ 'string.empty': `\"Reimbursement Type\" is required` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validateIp = data => ExtractValidationResult(ipValidator.validate(data))\nconst validateOp = data => ExtractValidationResult(opValidator.validate(data))\nexport default { validateIp, validateOp }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required(),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  let errors = {}\n  let hasPrimary = false\n  data.map((item, index) => {\n    if (item.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ description: item.description, code: item.code }))\n    if (error) errors = { ...errors, [index]: { index, error } }\n  })\n\n  if (!data.length) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one item' } }\n  } else if (!hasPrimary) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one primary item' } }\n  }\n\n  return { ...errors }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport FormController from 'Controllers/ReimbursementFormController'\n\n// Validator\nimport ValidatorBuilder from './BaseValidatorBuilder'\nimport BaseValidator from './BaseValidator'\nimport DiagnosisListValidator from './DiagnosisListValidator'\nimport HospitalItemValidator from './HospitalItemValidator'\nimport ProfessionalFeeValidator from './ProfessionalFeeValidator'\nimport ProcedureValidator from './ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetErrorBase,\n  resetErrorDiagnosis,\n  resetErrorProcedure,\n  resetErrorHospitalItem,\n  resetErrorProfessionalFee,\n  setErrorDiagnosis,\n  setErrorBase,\n  setErrorProcedure,\n  setErrorHospitalItem,\n  setErrorProfessionalFee,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    validateReject\n  } = props\n  // Variables\n  const { claim, permissions } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [isViewOnly, setIsViewOnly] = React.useState(false)\n\n  const [disableControls] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [formFields, setFormFields] = React.useState(null)\n\n  React.useEffect(() => {\n    setFormFields(FormController.generateFormFields())\n    setIsViewOnly(props.isViewOnly)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      date_from: new Date().toISOString(),\n      date_of_service: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      diagnosis: [],\n      doctor_id: '',\n      doctor_name: '',\n      facility_id: '',\n      facility_name: '',\n      hospital_items: [],\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_last_name: '',\n      member_middle_name: '',\n      official_receipt_number: '',\n      pro_id: '',\n      pro_name: '',\n      procedures: [],\n      professional_fees: [],\n      reimbursement_category: '',\n      reimbursement_type: '',\n      room_rate: 0,\n      room_type: ''\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    getClaimDetails(data => {\n      setFormFields(FormController.generateFormFields(data.reimbursement_details.reimbursement_type))\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          date_from: data.date.from,\n          date_of_service: data.date.service,\n          date_to: data.date.to,\n          department: data.department || '',\n          diagnosis: data.diagnosis || [],\n          doctor_id: data.doctor ? data.doctor.id : '',\n          doctor_name: data.doctor ? data.doctor.name : '',\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.reimbursement_details.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_last_name: data.member.last_name,\n          member_middle_name: data.member.middle_name,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          reimbursement_category: data.reimbursement_details.reimbursement_category,\n          reimbursement_type: data.reimbursement_details.reimbursement_type,\n          room_rate: data.room.rate,\n          room_type: data.room.type\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n\n      dispatch(setRejectStatus(validateReject({ total: sum })))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const doValidateBase = value => {\n    const { error } =\n      value.reimbursement_type === 'In-Patient'\n        ? BaseValidator.validateIp(value)\n        : value.reimbursement_type === 'Out-Patient' ||\n          value.reimbursement_type === 'Professional Fee' ||\n          value.reimbursement_type === 'Maternity Assistance'\n          ? BaseValidator.validateOp(value)\n          : undefined\n    dispatch(setErrorBase({ details: { ...error } }))\n    if (error) {\n      console.group('Base Error')\n      console.log('Errors', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateDiagnosis = data => {\n    const errors = DiagnosisListValidator(data)\n    let arr_errors = []\n    for (const err in errors) {\n      if (errors.hasOwnProperty(err)) {\n        const { index, error } = errors[err]\n        dispatch(setErrorDiagnosis({ index: index, details: { error } }))\n        arr_errors.push({ index: index, details: { error } })\n      }\n    }\n\n    if (arr_errors.length > 0) {\n      console.group('Diagnosis Error')\n      console.log('Error', arr_errors)\n      console.groupEnd()\n    }\n    return arr_errors\n  }\n\n  const doValidateProcedure = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProcedure({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProcedure({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n\n      console.group('Procedure Error')\n      console.log('Direct', error)\n      console.groupEnd()\n\n      return error\n    }\n  }\n\n  const doValidateHospitalItem = ({ index, details, mode, openItem = false }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorHospitalItem({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Hospital Items Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateProfessionalFee = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProfessionalFee({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Professional Fee Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n  const doValidateAll = () => {\n    const fields = {}\n    const toValidate = ValidatorBuilder(claim.reimbursement_type)\n    for (let f in toValidate) fields[toValidate[f]] = claim[toValidate[f]]\n    dispatch(resetErrorBase())\n    dispatch(resetErrorDiagnosis())\n    dispatch(resetErrorProcedure())\n    dispatch(resetErrorHospitalItem())\n    dispatch(resetErrorProfessionalFee())\n\n    const ErrorBase = doValidateBase(fields)\n    const ErrorDiagnosis = doValidateDiagnosis(claim.diagnosis).some(item => !!item)\n\n    const ErrorProcedure = claim.procedures\n      .map((item, index) => doValidateProcedure({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorHospitalItems = claim.hospital_items\n      .map((item, index) => doValidateHospitalItem({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorProfessionalFee = claim.professional_fees\n      .map((item, index) => doValidateProfessionalFee({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    return !!(ErrorBase || ErrorDiagnosis || ErrorProcedure || ErrorHospitalItems || ErrorProfessionalFee)\n  }\n\n  React.useEffect(() => {\n    console.group('Validation Failed')\n    console.log('Dispatch', errors)\n    console.groupEnd()\n  }, [errors])\n\n  const onChangeReimbursementType = data => {\n    setFormFields(FormController.generateFormFields(data.value))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={({ value, field }) => {\n                dispatch(setClaimBaseDetails({ value, field }))\n                onChangeReimbursementType({ value })\n              }}\n              permissions={permissions.base}\n              showReimbursement\n              showApprovalCode={!!formFields.base_details.approval_code}\n              showLoaNumber={!!formFields.base_details.loa_number}\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              {formFields.facility_id && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {formFields.facility_name && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {formFields.doctor_id && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='dp-medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {formFields.doctor_name && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    required\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) => {}}\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {formFields.date_from && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {formFields.date_to && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {formFields.date_of_service && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_of_service}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_of_service'\n                        })\n                      )\n                    }\n                    error={errors.date_of_service}\n                  />\n                </div>\n              )}\n\n              {formFields.department && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {formFields.medicine_category_out && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='medicine-category'\n                    label='Medicine Category'\n                    value={claim.medicine_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'medicine_category'\n                        })\n                      )\n                    }\n                    error={errors.medicine_category}\n                  />\n                </div>\n              )}\n\n              {formFields.reimbursement_category_out && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='reimbursement-category'\n                    label='Reimbursement Category'\n                    value={claim.reimbursement_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'reimbursement_category'\n                        })\n                      )\n                    }\n                    error={errors.reimbursement_category}\n                  />\n                </div>\n              )}\n\n              {formFields.room_type && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      disabled={disableControls}\n                      onChange={handleOnChangeRoomType}\n                      error={errors.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {formFields.room_rate && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      disabled={disableControls}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={errors.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {formFields.pro_id && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='pro-id'\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'pro_id'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {formFields.pro_name && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='pro-name'\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'pro_name'\n                        })\n                      )\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {formFields.medicine_category && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='medicine-category'\n                    label='Medicine Category'\n                    value={claim.medicine_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'medicine_category'\n                        })\n                      )\n                    }\n                    error={errors.medicine_category}\n                  />\n                </div>\n              )}\n\n              {formFields.reimbursement_category && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='reimbursement-category'\n                    label='Reimbursement Category'\n                    value={claim.reimbursement_category}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'reimbursement_category'\n                        })\n                      )\n                    }\n                    error={errors.reimbursement_category}\n                  />\n                </div>\n              )}\n\n              {formFields.official_receipt_number && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    error={errors.official_receipt_number}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    errors={errors.diagnosis}\n                    isViewOnly={isViewOnly}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            isViewOnly={isViewOnly}\n            disabled={disableControls}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType='InPatient'\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Doctor Id')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .required(),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .required(),\n  loa_notes: Joi.string()\n    .trim()\n    .label('LOA Notes')\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required(),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  let errors = {}\n  let hasPrimary = false\n  data.map((item, index) => {\n    if (item.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ description: item.description, code: item.code }))\n    if (error) errors = { ...errors, [index]: { index, error } }\n  })\n\n  if (!data.length) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one item' } }\n  } else if (!hasPrimary) {\n    errors = { ...errors, list: { index: 'list', error: 'Diagnosis should have at least one primary item' } }\n  }\n\n  return { ...errors }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport BaseValidator from './BaseValidator'\nimport DiagnosisListValidator from './DiagnosisListValidator'\nimport HospitalItemValidator from './HospitalItemValidator'\nimport ProfessionalFeeValidator from './ProfessionalFeeValidator'\nimport ProcedureValidator from './ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetErrorBase,\n  resetErrorDiagnosis,\n  resetErrorProcedure,\n  resetErrorHospitalItem,\n  resetErrorProfessionalFee,\n  setErrorDiagnosis,\n  setErrorBase,\n  setErrorProcedure,\n  setErrorHospitalItem,\n  setErrorProfessionalFee,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    validateReject,\n    onChangePro,\n    onChangeDoctor\n  } = props\n  // Variables\n  const { claim, permissions } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.errors)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [isViewOnly, setIsViewOnly] = React.useState(false)\n\n  const [disableControls] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    setIsViewOnly(props.isViewOnly)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    getClaimDetails(data => {\n      console.log(data)\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          diagnosis: data.diagnosis || [],\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    return currentValue + total\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n\n      dispatch(setRejectStatus(validateReject({ total: sum })))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const doValidateBase = value => {\n    const { error } = BaseValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name,\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      doctor_id: value.doctor_id,\n      doctor_name: value.doctor_name,\n      date_from: value.date_from,\n      date_to: value.date_to,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      loa_notes: value.loa_notes\n    })\n    dispatch(setErrorBase({ details: { ...error } }))\n    if (error) {\n      console.group('Base Error')\n      console.log('Errors', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateDiagnosis = data => {\n    const errors = DiagnosisListValidator(data)\n    let arr_errors = []\n    for (const err in errors) {\n      if (errors.hasOwnProperty(err)) {\n        const { index, error } = errors[err]\n        dispatch(setErrorDiagnosis({ index: index, details: { error } }))\n        arr_errors.push({ index: index, details: { error } })\n      }\n    }\n\n    if (arr_errors.length > 0) {\n      console.group('Diagnosis Error')\n      console.log('Error', arr_errors)\n      console.groupEnd()\n    }\n    return arr_errors\n  }\n\n  const doValidateProcedure = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProcedure({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProcedure({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n\n      console.group('Procedure Error')\n      console.log('Direct', error)\n      console.groupEnd()\n\n      return error\n    }\n  }\n\n  const doValidateHospitalItem = ({ index, details, mode, openItem = false }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorHospitalItem({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Hospital Items Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateProfessionalFee = ({ index, details, mode, openItem = false }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n\n    dispatch(setErrorProfessionalFee({ index, details: { ...error } }))\n\n    if (error) {\n      if (openItem) {\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode,\n            index,\n            details\n          })\n        )\n      }\n      console.group('Professional Fee Error')\n      console.log('Direct', error)\n      console.groupEnd()\n      return error\n    }\n  }\n\n  const doValidateAll = () => {\n    const fields = {}\n\n    for (let f in allowedFields) fields[f] = claim[f]\n    dispatch(resetErrorBase())\n    dispatch(resetErrorDiagnosis())\n    dispatch(resetErrorProcedure())\n    dispatch(resetErrorHospitalItem())\n    dispatch(resetErrorProfessionalFee())\n\n    const ErrorBase = doValidateBase(fields)\n    const ErrorDiagnosis = doValidateDiagnosis(fields.diagnosis).some(item => !!item)\n\n    const ErrorProcedure = fields.procedures\n      .map((item, index) => doValidateProcedure({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorHospitalItems = fields.hospital_items\n      .map((item, index) => doValidateHospitalItem({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    const ErrorProfessionalFee = fields.professional_fees\n      .map((item, index) => doValidateProfessionalFee({ index, details: item, mode: 'edit', openItem: true }))\n      .some(item => !!item)\n\n    // console.log('ErrorBase', ErrorBase)\n    // console.log('ErrorDiagnosis', ErrorDiagnosis)\n    // console.log('ErrorProcedure', ErrorProcedure)\n    // console.log('ErrorHospitalItems', ErrorHospitalItems)\n    // console.log('ErrorProfessionalFee', ErrorProfessionalFee)\n    return !!(ErrorBase || ErrorDiagnosis || ErrorProcedure || ErrorHospitalItems || ErrorProfessionalFee)\n  }\n\n  React.useEffect(() => {\n    console.group('Validation Failed')\n    console.log('Dispatch', errors)\n    console.groupEnd()\n  }, [errors])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                disableControls={disableControls}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      disabled={disableControls}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      disabled={disableControls}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={errors.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      errors={errors.diagnosis}\n                      isViewOnly={isViewOnly}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={errors.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            isViewOnly={isViewOnly}\n            disabled={disableControls}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType='Emergency'\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","const validateReject = args => {\n  const { total } = args\n\n  if (total === 0) return false\n\n  return true\n}\n\nexport { validateReject }\n// Add another btn validation here\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    // TODO\n    /**\n     * Create API request direct to SEER's api\n     * For fetching claims verifier supervisor members\n     */\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { validateReject } from './claimBtnValidation'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n// Store./Components/ClaimFooter/EscalateValidator\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes\n  // initClaimRecords,\n  // setClaimRecords\n} from './Store/actions'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n\n  const [member, setMember] = React.useState({})\n  const [contractType, setContractType] = React.useState('client')\n  const [baseContract, setBaseContract] = React.useState(null)\n  const [clientContract, setClientContract] = React.useState(null)\n  const [memberContract, setMemberContract] = React.useState(null)\n  const [memberBenefitLimit, setMemberBenefitLimit] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { service, breadCrumbsList } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    service.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type.toUpperCase()\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(isDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getReconNotes({ claim_number })\n  }, [props.match.params.claim_number])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const handleGetClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    // dispatch(initClaimRecords())\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    service\n      .getClaim({\n        claim_number\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const diagnosis = data.diagnosis || []\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n        callback(data)\n\n        // FETCH Member from Customer Care\n        if (data.member.account_number) {\n          const member_account_no = data.member.account_number\n\n          CustomerCareServices.getMemberUtilizationLoa({ member_account_no }).then(res => {\n            const { data } = res.data\n            setUtilizationLoa(data)\n          })\n\n          CustomerCareServices.getMember({ member_account_no }).then(res => {\n            const { data } = res.data\n            setMember(data)\n            setMemberContract({})\n            setMemberBenefitLimit({})\n\n            if (data) {\n              const member_oid = data._id\n              const contract_oid = data.contracts.slice().pop()\n\n              // FETCH Member Contract from Customer Care\n              if (contractType === 'client') {\n                CustomerCareServices.getBaseBenefitPlan().then(res => {\n                  const { data } = res.data\n                  setBaseContract(data)\n                })\n                CustomerCareServices.getBenefitPlanTree({\n                  contract_oid\n                }).then(res => {\n                  const { data } = res.data\n                  setClientContract(data)\n                })\n              } else {\n                CustomerCareServices.getMemberContract({\n                  member_oid,\n                  contract_oid\n                }).then(res => {\n                  const { data } = res.data\n                  setMemberContract(data)\n                })\n              }\n\n              // FETCH Member Benefit Limit from Customer Care\n              CustomerCareServices.getMemberBenefitLimit({ member_oid, contract_oid }).then(res => {\n                const { data } = res.data\n                setMemberBenefitLimit(data)\n              })\n            }\n          })\n        }\n\n        LoadingService.loading(false)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleGetUtilizations = args => service.getUtilizations(args)\n\n  const handleGetPartners = args => service.getPartners(args)\n\n  const handleGetDoctors = args => service.getDoctors(args)\n\n  const handleGetUsers = args => service.getUsers(args)\n\n  const handleGetMember = args => CustomerCareServices.getMember(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const isDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    service.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      service.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    service.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: service.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: service.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: service.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    service.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      service\n        .escalate({\n          claim_number: claimNumber,\n          data: { receiver_id: id, message: escalations.message }\n        })\n        .then(res => {\n          LoadingService.loading(false)\n          if (goBack) props.history.push('/')\n        })\n    })\n  }\n\n  const handleOnReject = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    service.update({ claim_number: claimNumber, body: claim }).then(res => {\n      service.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    service\n      .reassign({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: reassign.message }\n      })\n      .then(res => {\n        if (goBack) props.history.push('/')\n        LoadingService.loading(false)\n      })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    service.update({ claim_number: claimNumber, body: claim }).then(res => {\n      service.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    service.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack) props.history.push('/')\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    service.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type === 'INPATIENT' && !fetching && (\n        <ClaimInPatient\n          {...props}\n          claim={claim}\n          member={member}\n          utilizationLoa={utilizationLoa}\n          contractType={contractType}\n          baseContract={baseContract}\n          clientContract={clientContract}\n          memberContract={memberContract}\n          memberBenefitLimit={memberBenefitLimit}\n          validateReject={validateReject}\n          getClaimDetails={handleGetClaimDetails}\n          getUtilizations={handleGetUtilizations}\n          getPartners={handleGetPartners}\n          getDoctors={handleGetDoctors}\n          userManagementService={UserManagementServices}\n          onChangeFacility={handleOnChangeFacility}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n        />\n      )}\n      {claim_type === 'OUTPATIENTPROCEDURE' && !fetching && (\n        <ClaimOutPatientProcedure\n          {...props}\n          claim={claim}\n          member={member}\n          utilizationLoa={utilizationLoa}\n          contractType={contractType}\n          baseContract={baseContract}\n          clientContract={clientContract}\n          memberContract={memberContract}\n          memberBenefitLimit={memberBenefitLimit}\n          validateReject={validateReject}\n          getClaimDetails={handleGetClaimDetails}\n          getUtilizations={handleGetUtilizations}\n          getPartners={handleGetPartners}\n          getDoctors={handleGetDoctors}\n          getUsers={handleGetUsers}\n          getMember={handleGetMember}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          userManagementService={UserManagementServices}\n        />\n      )}\n      {claim_type === 'OUTPATIENTCONSULTATION' && !fetching && (\n        <ClaimOutPatientConsultation\n          {...props}\n          claim={claim}\n          member={member}\n          utilizationLoa={utilizationLoa}\n          contractType={contractType}\n          baseContract={baseContract}\n          clientContract={clientContract}\n          memberContract={memberContract}\n          memberBenefitLimit={memberBenefitLimit}\n          validateReject={validateReject}\n          getClaimDetails={handleGetClaimDetails}\n          getUtilizations={handleGetUtilizations}\n          getPartners={handleGetPartners}\n          getDoctors={handleGetDoctors}\n          getUsers={handleGetUsers}\n          getMember={handleGetMember}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          userManagementService={UserManagementServices}\n        />\n      )}\n      {claim_type === 'REIMBURSEMENT' && !fetching && (\n        <ClaimReimbursement\n          {...props}\n          claim={claim}\n          member={member}\n          utilizationLoa={utilizationLoa}\n          contractType={contractType}\n          baseContract={baseContract}\n          clientContract={clientContract}\n          memberContract={memberContract}\n          memberBenefitLimit={memberBenefitLimit}\n          validateReject={validateReject}\n          getClaimDetails={handleGetClaimDetails}\n          getUtilizations={handleGetUtilizations}\n          getPartners={handleGetPartners}\n          getDoctors={handleGetDoctors}\n          getUsers={handleGetUsers}\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          userManagementService={UserManagementServices}\n          getMember={handleGetMember}\n        />\n      )}\n      {claim_type === 'EMERGENCY' && !fetching && (\n        <ClaimEmergency\n          {...props}\n          claim={claim}\n          member={member}\n          utilizationLoa={utilizationLoa}\n          contractType={contractType}\n          baseContract={baseContract}\n          clientContract={clientContract}\n          memberContract={memberContract}\n          memberBenefitLimit={memberBenefitLimit}\n          validateReject={validateReject}\n          userManagementService={UserManagementServices}\n          getClaimDetails={handleGetClaimDetails}\n          getUtilizations={handleGetUtilizations}\n          getPartners={handleGetPartners}\n          getDoctors={handleGetDoctors}\n          onChangeFacility={handleOnChangeFacility}\n          onReturnEscalate={handleOnReturnEscalate}\n          onChangeDoctor={handleOnChangeDoctor}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          getMember={handleGetMember}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","export const initDiscrepancy = payload => {\n  return {\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","export const resetRecon = payload => {\n  return {\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return initialValue\n\n    case 'RESET_ERROR_BASE':\n      return () => {\n        return {\n          diagnosis: { ...state.diagnosis },\n          procedure: { ...state.procedure },\n          hospital_item: { ...state.hospital_item },\n          professional_fee: { ...state.professional_fee }\n        }\n      }\n\n    case 'RESET_ERROR_DIAGNOSIS':\n      return (() => {\n        // const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: {}\n        }\n      })()\n\n    case 'RESET_ERROR_PROCEDURE':\n      return (() => {\n        // const { index } = action.payload\n        return {\n          ...state,\n          procedure: {}\n        }\n      })()\n\n    case 'RESET_ERROR_HOSPITAL_ITEM':\n      return (() => {\n        // const { index } = action.payload\n        return {\n          ...state,\n          hospital_item: {}\n        }\n      })()\n\n    case 'RESET_ERROR_PROFESSIONAL_FEE':\n      return (() => {\n        // const { index } = action.payload\n        return {\n          ...state,\n          professional_fee: {}\n        }\n      })()\n\n    case 'SET_ERROR_BASE':\n      return (() => {\n        const { details } = action.payload\n        return { ...state, ...details }\n      })()\n\n    case 'SET_ERROR_DIAGNOSIS':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          diagnosis: { ...state.diagnosis, [index]: { ...details } }\n        }\n      })()\n\n    case 'SET_ERROR_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedure: { ...state.procedure, [index]: { ...details } }\n        }\n      })()\n\n    case 'SET_ERROR_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_item: { ...state.hospital_item, [index]: { ...details } }\n        }\n      })()\n\n    case 'SET_ERROR_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fee: { ...state.professional_fee, [index]: { ...details } }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","const initialValue = {}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'INIT_CLAIM_RECORDS':\n      return initialValue\n\n    case 'SET_CLAIM_RECORDS':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","const initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","const initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","const initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_VIEWER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport claimRecordsReducer from './claimRecordsReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  errors: errorReducer,\n  escalations: escalationReducer,\n  claimRecords: claimRecordsReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={permissions}\n              service={ClaimsAdjudicationServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${row.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    {category === 'payment-request' && 'Request Payment'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard () {\n  const [claims, setClaims] = React.useState({\n    paymentRequests: { count: 0, data: [] },\n    override: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Payment Request\n    Promise.all([\n      PaymentRequestServices.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      PaymentRequestServices.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        paymentRequests: { data: paymentRequestClaims, count: paymentRequestClaimCount }\n      }))\n    })\n\n    // //* Override\n    // Promise.all([\n    //   PaymentRequestServices.getClaims({ category: 'override', range: 'this-week' }),\n    //   PaymentRequestServices.getClaimCount({ category: 'override' })\n    // ]).then(values => {\n    //   const [batchResponse, batchCountResponse] = values\n    //   const myBatches = batchResponse.data.data\n    //   const myBatchCount = batchCountResponse.data.data\n    //   setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    // })\n  }, [])\n\n  const handleOnShowViewList = category => () => {\n    const title = 'For Payment Request'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    PaymentRequestServices.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = category => value => {\n    let _category = category === 'payment-request' ? 'paymentRequests' : ''\n\n    PaymentRequestServices.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [_category]: { ...prevState[_category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.paymentRequests.count, id: 'for-pr-count' }}\n              title='For Payment Request'\n              id='for-payment-request'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('payment-request')}\n                  id='for-pr-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('payment-request')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='for-pr-claim-no'>Claim No.</TableCell>\n                    <TableCell id='for-pr-soa-no'>Bundle/SOA No.</TableCell>\n                    <TableCell id='for-pr-due-date'>Due Date</TableCell>\n                    <TableCell id='for-pr-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.paymentRequests.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                      <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                      <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${item.bundle_number}`}>\n                          <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                            Request Payment\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 5, value: claims.override.count, id: 'override-claim-count' }}\n              title='Override Claim'\n              id='override-claim'\n              viewAllLink={{ to: '/claims?type=override', caption: 'View List' }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Bundle/SOA No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.override.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.soa_no}</TableCell>\n                      <TableCell>{item.claim_no}</TableCell>\n                      <TableCell>{item.due_date}</TableCell>\n                      <TableCell>{item.facility_name}</TableCell>\n                      <TableCell>\n                        <Typography variant='caption' className={`text-link underline`}>\n                          Request Payment\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        message: 'Please select a batch for submission to Treasury Department.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport PaymentRequestPage from './Pages/PaymentRequestPage/PaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/review/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n              {...props}\n              permissions={permissions}\n              service={MedicalConsultantServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'SOA No.', sortField: 'latest.soa.number' },\n  { name: 'Bundle', sortField: 'latest.bundle_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  // const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for the claim number, SOA number, bundle, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{row.soa.number}</TableCell>\n              <TableCell>{row.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/recon/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      ClaimsReconServices.getClaims({\n        category: 'for-recon',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsReconServices.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    ClaimsReconServices.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/recon/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_recon') title = 'For Reconciliation'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    ClaimsReconServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsReconServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_recon.count }}\n              sizes={{ sm: 12 }}\n              title='For Reconciliation'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-recon')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_recon')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>SOA No.</TableCell>\n                    <TableCell>Bundle</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_recon.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{item.soa.number}</TableCell>\n                      <TableCell>{item.bundle_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          View Claim\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              service={ClaimsReconServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Typography\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                >\n                  View Claim\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims.recon['count'] }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('recon')}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Claim No.</TableCell>\n              <TableCell>Due Date</TableCell>\n              <TableCell>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: 0 }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Verifier Name</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell>Total Claims</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnItemClick = claim_number => {\n    props.history.push(`/claims/for-approval/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category: 'for-approval' })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    handleOnItemClick(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims['count'] }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-approval')}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('for-approval')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Claim No.</TableCell>\n              <TableCell>Due Date</TableCell>\n              <TableCell>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnItemClick(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    console.log(claims)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: 0 }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Claim No.</TableCell>\n              <TableCell>Account No.</TableCell>\n              <TableCell>Account Name</TableCell>\n              <TableCell>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: 0 }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claims'\n        isFilterShown={false}\n        viewList={\n          <Typography variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Claim No.</TableCell>\n              <TableCell>Account No.</TableCell>\n              <TableCell>Account Name</TableCell>\n              <TableCell>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ReconciledServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/reconciled`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/reconciled/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ForApprovalServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/for-approval`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/for-approval/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return new Promise(resolve => resolve())\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport ReconciledServices from './ReconciledServices'\nimport ForApprovalServices from './ForApprovalServices'\n\nconst axios = instance('/c/cvs')\n\nclass index {\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n\nindex.ReconciledServices = ReconciledServices\nindex.ForApprovalServices = ForApprovalServices\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nexport default index\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\nimport ReconciledClaimsTile from '../../Components/ReconciledClaimsTile/ReconciledClaimsTile'\nimport ClaimsVerifierTile from '../../Components/ClaimsVerifierTile/ClaimsVerifierTile'\nimport ClaimsForApprovalTile from '../../Components/ClaimsForApprovalTile/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from '../../Components/MedicalCollectiblesTile/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../Components/ReimbursementClaimTile/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <MyClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <SubmittedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n            <ClaimsVerifierTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ClaimsForApprovalTile\n              services={ClaimsVerifierSupervisorServices.ForApprovalServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            {/* <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} sizes={{ sm: 4 }} {...props} /> */}\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n\n            <DashboardTile\n              id='open-batches'\n              count={{ color: 3, value: 0, id: 'open-batches-count' }}\n              title='Rejected Claims'\n              viewList={\n                <Typography id='ob-view-list' variant='caption' className='bold text-link'>\n                  View List\n                </Typography>\n              }\n              sizes={{ sm: 4 }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='ob-batch-no'>Batch No.</TableCell>\n                    <TableCell id='ob-due-date'>Due Date</TableCell>\n                    <TableCell id='ob-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody />\n              </Table>\n            </DashboardTile>\n\n            <ReconciledClaimsTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ReimbursementClaimTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages\nimport Dashboard from './Pages/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={forAdjudicationPermissions}\n              service={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/reconciled/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n              {...props}\n              permissions={forReconciledPermissions}\n              service={ClaimsVerifierSupervisorServices.ReconciledServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/for-approval/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n              {...props}\n              permissions={forApprovalPermissions}\n              service={ClaimsVerifierSupervisorServices.ForApprovalServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './BatchEncoder/Routes'\nimport ClaimsDetailsEncoderRoutes from './ClaimsDetailsEncoder/Routes'\nimport ClaimsAnalystRoutes from './ClaimsAnalyst/Routes'\nimport PaymentRequestRoutes from './PaymentRequest/Routes'\nimport MedicalConsultantRoutes from './MedicalConsultant/Routes'\nimport ClaimsReconciliationRoutes from './ClaimsReconciliation/Routes'\nimport ClaimsVerifierSupervisorRoutes from './ClaimsVerifierSupervisor/Routes'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <React.Fragment>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconciliationRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n        </Switch>\n      )}\n    </React.Fragment>\n  )\n}\n","const initialState = []\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SIDEBAR_ITEMS':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default sidebarReducer\n","const pageTitleReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: {},\n  selected: []\n}\nconst breadcrumbsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BREADCRUMBS_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_SELECTED_BREADCRUMBS':\n      return {\n        ...state,\n        selected: [\n          { text: 'Home', to: '/' },\n          ...action.payload.map(_item => {\n            const [item, value] = _item.split(':')\n\n            if (value) {\n              const { text, to } = state.items[item]\n              return {\n                text: text(value),\n                to: to(value)\n              }\n            } else {\n              return state.items[item]\n            }\n          })\n        ]\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default breadcrumbsReducer\n","const pageLoading = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_PAGE_LOADING':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageLoading\n","const initialState = {\n  open: false,\n  severity: '',\n  message: ''\n}\nconst snackbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SNACKBAR':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default snackbarReducer\n","const initialState = {}\nconst pdfReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PDF':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default pdfReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'ROOT') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport sidebarReducer from './sidebarReducer'\nimport pageTitleReducer from './pageTitleReducer'\nimport breadcrumbsReducer from './breadcrumbsReducer'\nimport pageLoadingReducer from './pageLoadingReducer'\nimport snackbarReducer from './snackbarReducer'\nimport pdfReducer from './pdfReducer'\n\nconst reducers = combineReducers({\n  sidebar: sidebarReducer,\n  pageTitle: pageTitleReducer,\n  breadcrumbs: breadcrumbsReducer,\n  pageLoading: pageLoadingReducer,\n  snackbar: snackbarReducer,\n  pdf: pdfReducer\n})\n\nexport default reducers\n","let subscribers = {}\n\nexport default class ProtectedPageScrollEvent {\n  static publish () {\n    for (let key in subscribers) {\n      if (subscribers[key]) subscribers[key]()\n    }\n  }\n\n  static subscribe (name, cb) {\n    setTimeout(() => (subscribers[name] = cb), 10)\n  }\n\n  static unsubscribe (name) {\n    subscribers[name] = undefined\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport CommonServices from 'Services/Api/CommonServices'\nimport { to } from 'await-to-js'\nimport { Provider } from 'react-redux'\n\n// Compoents\nimport HeaderComponent from 'SharedComponents/HeaderComponent/HeaderComponent'\nimport { SideBarComponent } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { PageTitleComponent } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsComponent } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingComponent } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { SnackbarComponent } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { PdfViewer2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Modules\nimport Claims from './Claims'\n\n// Error Page\nimport { ErrorPageInit, ErrorPage } from 'SharedComponents/404/404'\n\n// classes\nimport classes from './Protected.module.scss'\n\n// Store\nimport Store from './Store'\n\n// Services\nimport ProtectedPageScrollEvent from 'Services/ProtectedPageScrollEvent'\n\n// Controllers\n// import { GeneralController } from 'Controllers/GeneralController'\n// import { ConfigController } from 'Controllers/ConfigController'\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nexport default function Protected ({ history }) {\n  const [selectedModule, setSelectedModule] = React.useState('')\n  const [isAauthorized, setIsAuthorized] = React.useState(false)\n  const [containerNode, setContainerNode] = React.useState(null)\n\n  // const getMe = async () => {\n  //   // const isViaHimsLogin = window.localStorage.getItem('hims_login') === 'true'\n\n  //   // Determine which \"token validator\" to use\n\n  //   const promise = new Promise(function (resolve, reject) {\n  //     ConfigController.loadUserManagementData(config => {\n  //       if (!config || !config.username) {\n  //         reject(config)\n  //         return\n  //       }\n\n  //       let role = config.main_role\n  //       if (!role || role.length === 0) {\n  //         let parts = config.username.split('_')\n\n  //         // fallback: if main role is not returned from SEER API,\n  //         // use first parts of username (ex: claims_analyst of claims_analyst_1)\n  //         role = (parts[0] + '_' + parts[1]).toUpperCase()\n  //       }\n\n  //       let data = {\n  //         data: {\n  //           raw: config,\n  //           username: config.username,\n  //           _id: config.user_id,\n  //           role: role\n  //         }\n  //       }\n  //       resolve({ data: data })\n  //     })\n  //   })\n\n  //   // Invoke API call to token validator\n  //   const [err, res] = await to(promise)\n\n  //   if (err) resetToLogin()\n  //   else {\n  //     const { data } = res.data\n  //     window.localStorage.setItem('me', JSON.stringify(data))\n\n  //     let module = 'CLAIMS'\n  //     try {\n  //       module = data.raw.main_module.toUpperCase()\n  //     } catch (ex) {}\n\n  //     _setSelectedModule(module)\n  //     setIsAuthorized(true)\n  //   }\n  // }\n\n  const getMe = async () => {\n    const user_data = await ConfigController2.getUserManagementData()\n\n    if (!user_data) return resetToLogin()\n\n    const { access_token, main_module, main_role, user_id } = user_data\n\n    const module = main_module.toUpperCase()\n\n    window.localStorage.setItem('token', access_token)\n    window.localStorage.setItem('module', module)\n    window.localStorage.setItem('role', main_role)\n    window.localStorage.setItem('user_id', user_id)\n\n    _setSelectedModule(module)\n    setIsAuthorized(true)\n  }\n\n  const _setSelectedModule = m => {\n    setSelectedModule(m)\n  }\n\n  React.useEffect(() => {\n    // const token = window.localStorage.getItem('token')\n    // console.log(token)\n    // if (!token) {\n    //   resetToLogin()\n    //   return\n    // }\n\n    // Invoke initialization of ICD and CPT entries\n    // This was previously done in LoginPage, but because there hims-app\n    // will have it own login page, the operation have to be relocated elsewhere.\n    //\n    // TODO: transfer the call to this method to somewhere more appropriate\n    // GeneralController.initializeIcdAndCptEntries()\n    console.log('not fetching ICD CPT....')\n\n    getMe()\n  }, [])\n\n  const routesForModule = () => {\n    switch (selectedModule) {\n      case 'CLAIMS':\n        return <Route path='/' component={Claims} />\n\n      default:\n        break\n    }\n  }\n\n  const resetToLogin = () => {\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('me')\n    window.localStorage.removeItem('from_login')\n    window.localStorage.removeItem('api_token')\n    window.localStorage.removeItem('pm_token')\n    window.localStorage.removeItem('user_id')\n    window.localStorage.removeItem('employee_id')\n    window.localStorage.removeItem('first_name')\n    window.localStorage.removeItem('last_name')\n\n    const { host, href } = window.location\n    const [protocol] = href.split(host)\n    window.location.assign(`${protocol}${host}/#/login`)\n  }\n\n  const logout = () => {\n    const accessToken = window.localStorage.getItem('token')\n\n    if (!accessToken) return resetToLogin()\n\n    CommonServices.logout({ access_token: accessToken })\n      .then(data => {\n        resetToLogin()\n      })\n      .catch(({ response }) => {\n        try {\n          const { error } = response.data\n          if (error.statusCode === 428) resetToLogin()\n        } catch (err) {\n          resetToLogin()\n        }\n      })\n  }\n\n  const scrollContainer = event => {\n    const { scrollTop } = containerNode\n    containerNode.scrollTo({ top: scrollTop + event.deltaY })\n  }\n\n  return (\n    <React.Fragment>\n      {isAauthorized && (\n        <div className={classes['main-container']}>\n          <Provider store={Store}>\n            <SideBarComponent />\n            <PdfViewer2Component />\n          </Provider>\n\n          <div className={classes['sub-container']}>\n            <HeaderComponent logout={logout} />\n\n            <Switch>\n              <Route path='/404' exact component={ErrorPage} />\n              <Route\n                path='/'\n                render={props => (\n                  <Grid\n                    item\n                    className={classes.content}\n                    onScroll={ProtectedPageScrollEvent.publish}\n                    ref={setContainerNode}\n                  >\n                    <Provider store={Store}>\n                      <SnackbarComponent />\n                      <PageTitleComponent />\n                      <BreadcrumbsComponent />\n                      <LoadingComponent onScrollContainer={scrollContainer} containerNode={containerNode} />\n                    </Provider>\n                    <Switch>\n                      <React.Fragment>{routesForModule()}</React.Fragment>\n                    </Switch>\n                  </Grid>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      )}\n      <ErrorPageInit />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport 'typeface-roboto'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport './App.scss'\n\nimport FontAwesomeLibrary from './FontAwesomeLibrary'\n\n// Pages\nimport LoginPage from 'Pages/LoginPage/LoginPage'\nimport Protected from 'Pages/Protected/Protected'\n\n// Utilities\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nFontAwesomeLibrary.init()\n\nConfigController2.initializeBaseUrls()\n\nfunction App () {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path='/login' exact component={LoginPage} />\n          <Route path='/' component={Protected} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__3Vmeb\",\"groups\":\"BatchDetails_groups__1_QIJ\",\"input\":\"BatchDetails_input__1dPNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__282Ca\",\"first-container\":\"ClaimDental_first-container__3A9Fg\",\"groups\":\"ClaimDental_groups__10CFm\",\"input\":\"ClaimDental_input__aw-6O\",\"chart\":\"ClaimDental_chart__2XPGT\",\"child-container\":\"ClaimDental_child-container__2XUY4\",\"tables-container\":\"ClaimDental_tables-container__Phg4z\",\"left-side\":\"ClaimDental_left-side__Njxq7\",\"wrapper\":\"ClaimDental_wrapper__2HG5j\",\"table\":\"ClaimDental_table__1pFMs\",\"table-header\":\"ClaimDental_table-header__mG3uP\",\"table-description\":\"ClaimDental_table-description__15-bq\",\"add-link\":\"ClaimDental_add-link__3goyc\",\"row\":\"ClaimDental_row___VONI\",\"align\":\"ClaimDental_align__xnj4s\",\"center\":\"ClaimDental_center__3hdRa\",\"right\":\"ClaimDental_right__1ETNp\",\"table-total\":\"ClaimDental_table-total__2X8Sh\",\"caption\":\"ClaimDental_caption__anFy9\",\"amount\":\"ClaimDental_amount__3eARb\",\"right-side\":\"ClaimDental_right-side__260cv\",\"sticky\":\"ClaimDental_sticky__27LBb\",\"grand-total\":\"ClaimDental_grand-total__3b_SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__12_y0\",\"first-container\":\"ClaimECU_first-container__2xAv8\",\"groups\":\"ClaimECU_groups__2p1Fe\",\"input\":\"ClaimECU_input__QraMd\",\"child-container\":\"ClaimECU_child-container__1Gdnl\",\"tables-container\":\"ClaimECU_tables-container__30mfe\",\"left-side\":\"ClaimECU_left-side__X_Ryh\",\"wrapper\":\"ClaimECU_wrapper__2-n9O\",\"table\":\"ClaimECU_table__38LSn\",\"table-header\":\"ClaimECU_table-header__2XWNc\",\"table-description\":\"ClaimECU_table-description__1Y5e8\",\"add-link\":\"ClaimECU_add-link__2N8RQ\",\"row\":\"ClaimECU_row__mGpqj\",\"align\":\"ClaimECU_align__18Dal\",\"center\":\"ClaimECU_center__1fK8V\",\"right\":\"ClaimECU_right__32blH\",\"table-total\":\"ClaimECU_table-total__90P4P\",\"caption\":\"ClaimECU_caption__1o9Zj\",\"amount\":\"ClaimECU_amount__2Hhdf\",\"right-side\":\"ClaimECU_right-side__3c5GS\",\"sticky\":\"ClaimECU_sticky__14EYz\",\"grand-total\":\"ClaimECU_grand-total__jxFHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewer_root__2K-e8\",\"controls\":\"PdfViewer_controls__20Y1N\",\"control\":\"PdfViewer_control__skaaD\",\"pdf\":\"PdfViewer_pdf__2EEvF\",\"page-number\":\"PdfViewer_page-number__19qlt\",\"file-name\":\"PdfViewer_file-name__32XTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__2uI8s\",\"inputs\":\"NewBundlePage_inputs__2C5KM\",\"input\":\"NewBundlePage_input__8z70X\",\"actions\":\"NewBundlePage_actions__1eP66\",\"save\":\"NewBundlePage_save__3IbSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__vCzHt\",\"first-container\":\"ClaimPPE_first-container__YOvn9\",\"groups\":\"ClaimPPE_groups__8UnV7\",\"input\":\"ClaimPPE_input__2OCOp\",\"packages\":\"ClaimPPE_packages__1mnja\",\"child-container\":\"ClaimPPE_child-container__1hHPa\",\"tables-container\":\"ClaimPPE_tables-container__2GdOv\",\"left-side\":\"ClaimPPE_left-side__3AU6f\",\"wrapper\":\"ClaimPPE_wrapper__bZKtb\",\"table\":\"ClaimPPE_table__2twAn\",\"table-header\":\"ClaimPPE_table-header__1lTtb\",\"table-description\":\"ClaimPPE_table-description__3c6yl\",\"add-link\":\"ClaimPPE_add-link__ULei2\",\"row\":\"ClaimPPE_row__2bU8T\",\"align\":\"ClaimPPE_align__3Hzne\",\"center\":\"ClaimPPE_center__id_a_\",\"right\":\"ClaimPPE_right__1EdE_\",\"table-total\":\"ClaimPPE_table-total__3LI2J\",\"caption\":\"ClaimPPE_caption__2owlw\",\"amount\":\"ClaimPPE_amount__3wkC6\",\"right-side\":\"ClaimPPE_right-side__2zQxe\",\"sticky\":\"ClaimPPE_sticky__KlhLw\",\"grand-total\":\"ClaimPPE_grand-total__2c6a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__dmj-f\",\"groups\":\"ProfessionalFeeForm_groups__2HYi5\",\"first-item\":\"ProfessionalFeeForm_first-item__2xz1G\",\"input\":\"ProfessionalFeeForm_input__3T9ZD\",\"buttons\":\"ProfessionalFeeForm_buttons__2lHCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__2X3T0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderAPESchedule_root__1PXLy\",\"header-container\":\"ProviderAPESchedule_header-container__uuxoF\",\"header1\":\"ProviderAPESchedule_header1__2cEnE\",\"title\":\"ProviderAPESchedule_title__14pM0\",\"body\":\"ProviderAPESchedule_body__2LXCn\",\"content\":\"ProviderAPESchedule_content__2Vu6P\",\"table\":\"ProviderAPESchedule_table__1zEjT\",\"groups\":\"ProviderAPESchedule_groups__eroFp\",\"partition\":\"ProviderAPESchedule_partition__3J6o2\",\"action\":\"ProviderAPESchedule_action__2yXQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderPPESchedule_root__3BxAU\",\"header-container\":\"ProviderPPESchedule_header-container__1xA_1\",\"header1\":\"ProviderPPESchedule_header1__2mVte\",\"title\":\"ProviderPPESchedule_title__cbueC\",\"body\":\"ProviderPPESchedule_body__2zomr\",\"content\":\"ProviderPPESchedule_content__PI6LG\",\"table\":\"ProviderPPESchedule_table__31xDj\",\"groups\":\"ProviderPPESchedule_groups__3oLec\",\"partition\":\"ProviderPPESchedule_partition__2S2Ub\",\"action\":\"ProviderPPESchedule_action__3tyqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__3-pXP\",\"first-container\":\"ClaimClinicManagement_first-container__2A7Vg\",\"groups\":\"ClaimClinicManagement_groups__3IK3C\",\"input\":\"ClaimClinicManagement_input__LASyG\",\"child-container\":\"ClaimClinicManagement_child-container__3vVN_\",\"tables-container\":\"ClaimClinicManagement_tables-container__C0Tks\",\"left-side\":\"ClaimClinicManagement_left-side__3tU8J\",\"wrapper\":\"ClaimClinicManagement_wrapper__1wYq3\",\"table\":\"ClaimClinicManagement_table__3RTGB\",\"table-header\":\"ClaimClinicManagement_table-header__3srgG\",\"table-description\":\"ClaimClinicManagement_table-description__2teCY\",\"add-link\":\"ClaimClinicManagement_add-link__2o3Ds\",\"row\":\"ClaimClinicManagement_row__pYD5k\",\"align\":\"ClaimClinicManagement_align__32npC\",\"center\":\"ClaimClinicManagement_center__66Zig\",\"right\":\"ClaimClinicManagement_right__epIYQ\",\"table-total\":\"ClaimClinicManagement_table-total__2hmFl\",\"caption\":\"ClaimClinicManagement_caption__2hvlp\",\"amount\":\"ClaimClinicManagement_amount__1AjZw\",\"right-side\":\"ClaimClinicManagement_right-side__2zlmc\",\"sticky\":\"ClaimClinicManagement_sticky__3ZbxS\",\"grand-total\":\"ClaimClinicManagement_grand-total__2Yeg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBarComponent_root__3Etcc\",\"menu\":\"SideBarComponent_menu__3zk9I\",\"item\":\"SideBarComponent_item__NPnMw\",\"circle\":\"SideBarComponent_circle__3uyWE\",\"icon\":\"SideBarComponent_icon__2aPgO\",\"text\":\"SideBarComponent_text__2tI7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__X-NCv\",\"table\":\"ProcedureList_table__LtkxW\",\"table-header\":\"ProcedureList_table-header__3Ac8E\",\"table-description\":\"ProcedureList_table-description__3_4Wa\",\"add-link\":\"ProcedureList_add-link__1UWwS\",\"row\":\"ProcedureList_row__3RlUn\",\"align\":\"ProcedureList_align__2L_cc\",\"center\":\"ProcedureList_center__32rls\",\"right\":\"ProcedureList_right__1pxhH\",\"table-total\":\"ProcedureList_table-total__11hza\",\"caption\":\"ProcedureList_caption__1cvHz\",\"amount\":\"ProcedureList_amount__l-4L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__1gaxi\",\"table\":\"HospitalItemList_table__1T4Ou\",\"table-header\":\"HospitalItemList_table-header__pil4o\",\"table-description\":\"HospitalItemList_table-description__3hcWS\",\"add-link\":\"HospitalItemList_add-link__1fF5-\",\"row\":\"HospitalItemList_row__2sr0L\",\"align\":\"HospitalItemList_align__2w1Hz\",\"center\":\"HospitalItemList_center__9YkBq\",\"right\":\"HospitalItemList_right__1g1-y\",\"table-total\":\"HospitalItemList_table-total__1eIuf\",\"caption\":\"HospitalItemList_caption__2UHjy\",\"amount\":\"HospitalItemList_amount__2_b-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__36scC\",\"first-container\":\"ClaimMedicineAllowance_first-container__3LG3r\",\"groups\":\"ClaimMedicineAllowance_groups__2iXhU\",\"input\":\"ClaimMedicineAllowance_input__2G2Zd\",\"child-container\":\"ClaimMedicineAllowance_child-container__2srkt\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__2l5oQ\",\"left-side\":\"ClaimMedicineAllowance_left-side__qFPtB\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__3Iz7T\",\"table\":\"ClaimMedicineAllowance_table__1qrlu\",\"table-header\":\"ClaimMedicineAllowance_table-header__12Kkz\",\"table-description\":\"ClaimMedicineAllowance_table-description__1hTo6\",\"add-link\":\"ClaimMedicineAllowance_add-link__3qxKy\",\"row\":\"ClaimMedicineAllowance_row__3Umzu\",\"align\":\"ClaimMedicineAllowance_align__1BVJf\",\"center\":\"ClaimMedicineAllowance_center__1tZAi\",\"right\":\"ClaimMedicineAllowance_right__2u6Im\",\"table-total\":\"ClaimMedicineAllowance_table-total__nAcH3\",\"caption\":\"ClaimMedicineAllowance_caption__2Xvx_\",\"amount\":\"ClaimMedicineAllowance_amount__3kOYn\",\"right-side\":\"ClaimMedicineAllowance_right-side__3z21t\",\"sticky\":\"ClaimMedicineAllowance_sticky__2612D\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__3KhN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__Mmcg0\",\"first-container\":\"ClaimPharmacy_first-container__2dLu3\",\"groups\":\"ClaimPharmacy_groups__3VQ0N\",\"input\":\"ClaimPharmacy_input__VDs0R\",\"child-container\":\"ClaimPharmacy_child-container__6sWfh\",\"tables-container\":\"ClaimPharmacy_tables-container__2NiO8\",\"left-side\":\"ClaimPharmacy_left-side__2WMcE\",\"wrapper\":\"ClaimPharmacy_wrapper__sT41S\",\"table\":\"ClaimPharmacy_table__19xAd\",\"table-header\":\"ClaimPharmacy_table-header__2ujsV\",\"table-description\":\"ClaimPharmacy_table-description__34Rj9\",\"add-link\":\"ClaimPharmacy_add-link__2Zv4z\",\"row\":\"ClaimPharmacy_row__1HEfZ\",\"align\":\"ClaimPharmacy_align__4xQmL\",\"center\":\"ClaimPharmacy_center__prewS\",\"right\":\"ClaimPharmacy_right__31r9B\",\"table-total\":\"ClaimPharmacy_table-total__1-XM-\",\"caption\":\"ClaimPharmacy_caption__3OHnP\",\"amount\":\"ClaimPharmacy_amount__2eKIA\",\"right-side\":\"ClaimPharmacy_right-side__6LVvr\",\"sticky\":\"ClaimPharmacy_sticky__1fLJm\",\"grand-total\":\"ClaimPharmacy_grand-total__m7uSu\"};"],"sourceRoot":""}