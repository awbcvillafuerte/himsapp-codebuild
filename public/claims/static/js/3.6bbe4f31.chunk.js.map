{"version":3,"sources":["Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete2/AutoComplete2.module.scss","SharedComponents/DatePicker2/DatePicker2.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","SharedComponents/FileViewer/FileViewer.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.module.scss","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.module.scss","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.module.scss","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.module.scss","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.module.scss","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.module.scss","Pages/Protected/Claims/Components/Test/Test.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/Table/Table.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","SharedComponents/TableSortLabel/TableSortLabel.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Utilities/TextFormatter.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/Claims/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete2/AutoComplete2.js","SharedComponents/DatePicker2/DatePicker2.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Services/Api/FacilitiesServices.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Services/Api/Claims/ClaimsEncodingServices.js","Utilities/PromiseUtil.js","Services/ArrayToCSV.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/Claims/ClaimsServices.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","SharedComponents/AutoComplete/AutoComplete.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/Claims/CustomerCareServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/Claims/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/types.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/Chart/Chart.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/dropdown.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/Claims/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/Claims/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/NoticeValidator.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.js","SharedComponents/FileViewer/FileViewer.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/Claims/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/Claims/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Services/Api/Claims/MedicalConsultantServices.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/Claims/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.js","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.js","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.js","Pages/Protected/Claims/Components/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.js","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.js","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.js","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.js","Pages/Protected/Claims/Components/Test/Test.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js"],"names":["module","exports","DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","id","React","useState","filter","setFilter","Paper","className","classes","root","wrapper","Typography","variant","color","value","FormControl","Select","onChange","event","target","MenuItem","input","selected","action","list","Children","map","child","displayName","useStyles1","makeStyles","theme","flexShrink","marginLeft","spacing","TablePaginationActions","props","useTheme","page","rowsPerPage","onChangePage","IconButton","onClick","disabled","aria-label","direction","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","body","footer","pagination","limit","rowsPerPageOptions","footerComponent","Fragment","TableContainer","component","table","TableHead","TableFooter","TableCell","float","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","LoadingIndicator","type","loading","style","CircularProgress","animation","size","overlay","_TableSortLabel","field","label","others","TableSortLabel","hideSortIcon","icon","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","fetching","handleOnClose","p","show","search","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","height","display","DialogTitle","disableTypography","button","DialogContent","dividers","content","SearchTextComponent","e","clearTimeout","setTimeout","placeholder","overflow","position","stickyHeader","headCell","key","sortField","name","order","orderBy","sort","args","match","handleColumnFiltering","align","colSpan","length","data","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","CreatedBundlesTile","services","sizes","sm","items","setItems","initialValue","setFetching","fetchingViewList","setFetchingViewList","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","finally","state","Button","LoadingService","createBundle","res","history","push","prevState","item","index","bundle_number","date_due","facility_name","to","params","_params","_data","row","SubmittedBundlesTile","TaskTrayComponent","showTitle","toArray","cloneElement","_sizes","xs","lg","Grid","container","itemSize","s","TicketListComponent","viewAllLink","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","AutoComplete2","required","readOnly","other","error","suggestions","focus","setFocus","_error","setError","trim","handleOnChange","onBlur","currentTarget","contains","relatedTarget","Autocomplete","options","noOptionsText","renderInput","TextField","ref","InputProps","disableUnderline","endAdornment","getOptionLabel","option","onInputChange","onFocus","inputValue","freeSolo","autoSelect","openOnFocus","autoHighlight","disableClearable","DatePicker","noMargin","tabindex","disableComponents","minDate","maxDate","InputRef","useRef","selectedDate","setSelectedDate","handleOnFocus","current","handleDateChange","date","utils","MomentUtils","allowKeyboardControl","helperText","clearable","TextFieldCurrency","currency","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","autoComplete","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","facility_id","doctor_id","doctor_name","getMedicalPartnerSuggestions","by","lookups","query","getDoctorPartnerSuggestions","i","full_name","handleOnChangeAutosuggest","handleOnChangeMedicalPartner","handleOnChangeDoctorPartner","term","earliest_term","isNaN","newDate","date_received","add","md","total_rcs","toISOString","due_date","soa_number","total_soa_amt","reassign_notes","multiline","rows","useStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","width","marginTop","paper","marginBottom","minWidth","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","margin","padding","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","Checkbox","center","numeric","disablePadding","sortDirection","active","Alert","defaultFunction","message","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","batch","setBatch","includes","claim","toLowerCase","parseFloat","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","Boolean","_index","handleClick","buttonWrapper","deleteMessage","getMessage","MenuProps","maxHeight","ITEM_HEIGHT","DropDown","addNew","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestion","resetSuggestion","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","setSelectedBatch","claim_types","ClaimTypes","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","claimSource","setClaimSource","setErrors","status","_results","description","catch","err","console","log","CustomTextField","doctor","BatchFormValidator","FacilitiesServices","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","defClaimSource","setDefClaimSource","getBundleDetails","getBundle","_status","received","due","soa","amount","facility","getBatches","getDefaultClaimSource","cancelBundle","handleOnSubmit","submitBundle","getDoctorSuggestions","suggestion","handleOnDeleteBatch","getFacilityById","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","onOpen","source","ClaimsEncodingServices","claim_number","responseType","Accept","sub_document_id","claimNo","info_id","PromiseUtil","executeInSequence","promises","callback","a","alert","chain","ArrayToCSV","fileName","extension","statics","mimeType","newLine","c_header","c_footer","_rows","joined","currentValue","fromBlob","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","RCSNum","Diagnosis","Procedure","downloadTemplate","columnTemplates","Object","keys","transform","dataRows","dataMapping","defaults","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","batchIndex","batchParam","claims","batchPromise","resolveBatch","rejectBatch","addClaim","claimsErr","addClaims","addBatches","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","memberName","nameParts","parseFullName","member_account_number","member_first_name","first","member_middle_name","middle","member_last_name","last","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","IP","OPP","OPC","__index__","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","doctor_full_name","NewBundleValidator","form","inputs","save","file","onComplete","onError","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","onerror","ex","readAsBinaryString","Progress","withStyles","borderRadius","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","trimmedItems","setTrimmedItems","_items","find","handleOnChangeItems","startAt","endAt","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","pair","DataPairContainer","onClickAddNew","claim_sources","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","d","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","SafeAccess","def","delimeter","obj","completeColumns","AutoComplete","square","hint","handleItemClick","ClaimsUtilLedgerReport","username","total","ar_amount","signatories","CustomerCareServices","account_number","mct_id","token","window","localStorage","getItem","baseURL","CLAIMS_URL","process","replace","where","skip","offset","client_account_no","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","dataColumns","fromUtilReport","claimUtilizations","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","filtered","entry","indexOf","benefit_limits","member_account_no","info","member_id","icd_code","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","handleOnPaginate","exc","lodash","take","chunk","setPaginate","background","hover","role","tabIndex","cell","renderRows","getClaimResponse","analyzeRespone","analysis_results","filters","ClaimsReconServices","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","getDefault","month","legend","hoverBorderWidth","hoverBorderColor","Array","from","inititalDate","Date","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","setClaims","setDetails","dateRangeError","setDateRangeError","column","isSuggestionClick","ClaimsServices","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","c","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","disableFuture","submit","DateRangeValidator","_claims","paymentRequestReport","handleOnFilter","fontSize","typo","TextFieldStyle","member_name","handling","date_max","initialClaims","processed","total_received","total_processed","contract_plan","claim_status","user","geography","label2","suffix","other_name","subType","reportPages","transmittal","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","col","formatData","contracts","output","property","PdfViewer2Service","service","getTransmittalReportPdf","colIndex","remarks","utilizationLedger","hideReport","hideHeader","dateRange","refresh","btnDisabled","setBtnDisabled","fetchLedger","utilizationLegder","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","date_encoded","claimIndex","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","client_id","reportType","setReportType","chartData","setChartData","totalAmount","setTotalAmount","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","memberUtilizations","setMemberUtilizations","searchBy","setSearchBy","getField","fetchTable","getMember","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","covered_months","_field","getMonth","covered","uniq","getCoveredMonths","utilizationClientTable","getSuggestions","client_name","like","and","v","or","first_name","middle_name","last_name","getMembers2","getMemberUtilizationLoa","response","getMemberUtilizations","dropdown","pop","RadioGroup","Radio","handleOnChangeDropdown","auto","textAlign","mergeResultsbyMonth","r","parsedData","_merge","dynamic","uniqBy","j","filteredData","u","labels","datasets","formatChart","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","setColumns","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","substring","hidden","claimsSummaryReport","geopgraphy","_category","lookupsQuery","year","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","grand","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","rawData","setRawData","facility_region","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","fetchCSV","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_count","reimbursement_percent","reimbursement_category","reimbursmentAgingReport","const_types","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","comment","assign","ReassignValidator","columnss","CreatedBundlesPage","setBundles","bundle_numbers","setSelected","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","_batchEncoderId","checkedCount","resultsCount","unchecked","_bundles","bundleNumbers","Set","handleOnSearch","handleSelectAll","handleItemSelect","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","xurpas","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","corp_guarantee","partner_id","rooms","localeCompare","sensitivity","desc","rate","department","anesthesiologist_id","anesthesiologist_name","recommendation","reimbursement_type","customer_account_number","company_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","getMemberContractPlanType","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","getIcd10Suggestions","synonym","getICDSynonyms","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","prop","handleOnChangeCpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","search_field","search_value","sort_field","sort_direction","cpt","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","ProcedureList","handleClickLineDiscrepancy","expand","right","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","reimbursement_info_analyst","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","discrepancyModal","setDiscrepancyModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","hasNotCovered","setHasNotCovered","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersWithRole","sortBy","notCovered","hasAmountNotCovered","handleOnShowApprovalMatrix","AuthorityMatrix","approve","other_types","selected_amount","goBack","doValidateMiddleware","left","return_advice","infos","date_released","date_return","rmLogicReturn","analysis_sheet","enabled","visible","letter_of_advice","escalate","handleOnApproval","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","Unit","rollover","eligible_availees","days_deployed","eligibility","empty","RB","EM","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","setFileName","setService","getMemberContractUrl","initial","abr","lastName","firstName","middleName","format1","format2","NameFormatter","getClientContractUrl","brand_name","pdf","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","memberFetchMessage","getPartners","getDoctors","getMemberContract","getClientContract","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","getSubTypes","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","base","startOf","sub_types","sub_sub_types","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","complied","date_complied","date_created","prepared_by","array","other_details","released_to","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","claimNumber","showAdd","setShowAdd","noticeModal","setNoticeModal","reasonDropdown","setReasonDropdown","freeze","insertNotice","addReimburesmentInfo","ff","updateNotice","updateReimburesmentInfo","handleOnItemSave","handleOnClickPrintNotice","document_id","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnClickSave","validateItems","scrollTo","scrollHeight","behavior","ItemForm","notice","setNotice","today","handleOnChangeReason","NoticeValidator","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","setType","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","initial_values","_claim","reimbursement_details","reimbursement_info_analysts","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","breadCrumbsList","isManager","icd10","setMemberFetchMessage","setClientFetchStatus","setGrandTotal","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","group","groupEnd","getProSuggestions","proUsersLookup","getAnaesthesiologistSuggestions","anaesthesiologist","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","getReturnAdvice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","subValues","subSubValues","subTypes","subSubTypes","inquire","receiver_id","onInquire","pr_officer","employee_id","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","processor_id","setOrder","setOrderBy","claim_numbers","claimNumbers","rowsLength","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","batchNumber","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","isAdd","hasClaimChanges","next","saveAlert","setSaveAlert","doSaveMiddleware","initDefault","lineItemFields","setlineItemFields","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","UploadedList","uploads","setUploads","getUploads","file_name","fileType","file_type","BaseUrlFetcher","getClaimsBaseUrl","aria-controls","aria-haspopup","FileViewer","fromUrl","filePath","errorComponent","prevClaim","_claimNumber","viewFile","setViewFile","isEqual","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_dentalProcedure","_procedure","_hospitalItem","_professionalFee","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","override","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","getUsersByRole","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","received_date","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","discount_rate","pr_amount","submittedHeadCells","PaymentRequestPage","setBundleNumber","prRemarks","setPrRemarks","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","selectedBatches","_batch","getSelectedPending","cIndex","submitPromise","should_include","submitBatches","supervisor","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","PaymentRequestSupervisorServices","getPaymentRequestBundles","handleOnViewListChange","handleOnSearchColumn","MedicalConsultantServices","for_review","handleOnReview","review","reassignData","setReassignData","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","setClaim","ClaimsVerifierSupervisorServices","getAnalystClaims","RejectedClaimsTile","rejected","getItems","getItemCount","addtl_cond","$ne","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","analystAssigned","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","forOverride","setForOverride","getClaimsAnalyst","getClaimsVerifierSupervisors","analystRes","supervisorRes","getApprovedClaims","overrideClaims","handling_time_formatted","initialItem","deactivate","handling_time","kpi_columns","MaintenancePage","setLookup","setItem","showAddItem","setShowAddItem","setSection","setindex","lookupsAll","ClaimsMaintainerServices","isActive","handleOnSaveItem","initialLookup","storeLookups","updateLookups","handleOnEditItem","handleOnCancelItem","activate","showSeconds","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","AutoCompletes","storage","handleOnChangeAutosuggest2","facilities","DatePickers","DateValidator","pdfjs","GlobalWorkerOptions","workerSrc","version","getMozillaPdfViewerUrl","MozillaPdfBlob","forwardRef","Slide","setUrl","blob","Blob","fileURL","URL","createObjectURL","uri","encodeURIComponent","blobToBase64","document","getElementById","contentWindow","PDFViewerApplication","base64","readAsDataURL","iframe","src","MozillaPdfURL","_url","PdfViewer","mct","setMct","getAnalysisSheetURL","FaultyButton","Error","ErrorProducers","notDefined","boom","setBoom","Test","setStorage","toggle","setToggle","toolbar","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes"],"mappings":"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","file":"static/js/3.6bbe4f31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"LoadingIndicator_loading__3Nv8i\",\"overlay\":\"LoadingIndicator_overlay__Ci9Ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__11iKj\",\"label\":\"AutoComplete2_label__3pWjU\",\"wrapper\":\"AutoComplete2_wrapper__126-b\",\"read-only-value\":\"AutoComplete2_read-only-value__CcS5n\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3jz9Q\",\"form-control\":\"AutoComplete2_form-control__1SPaQ\",\"input\":\"AutoComplete2_input__1qyu3\",\"suggestions\":\"AutoComplete2_suggestions__33g20\",\"hint\":\"AutoComplete2_hint__1Dtzi\",\"focus\":\"AutoComplete2_focus__2pS9H\",\"has-error\":\"AutoComplete2_has-error__lIYZv\",\"error\":\"AutoComplete2_error__xx6tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1xO2P\",\"label\":\"DatePicker2_label__2TSn5\",\"wrapper\":\"DatePicker2_wrapper__1Zm8_\",\"read-only-value\":\"DatePicker2_read-only-value__2H1Jw\",\"text-field\":\"DatePicker2_text-field__a4Jqy\",\"no-margin\":\"DatePicker2_no-margin__2hfWg\",\"input\":\"DatePicker2_input__1BmqV\",\"date-button\":\"DatePicker2_date-button__3AEOq\",\"focus\":\"DatePicker2_focus__3d53X\",\"has-error\":\"DatePicker2_has-error__2wab-\",\"disabled\":\"DatePicker2_disabled__hHKql\",\"error\":\"DatePicker2_error__3f2g3\",\"date\":\"DatePicker2_date__3D12q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"table\":\"DataPairs_table__1nH2P\",\"header\":\"DataPairs_header__Bkti-\",\"pair\":\"DataPairs_pair__2QYar\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"typo\":\"ClaimsUtilLedgerReport_typo__2Javr\",\"disabled\":\"ClaimsUtilLedgerReport_disabled__z8zbA\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"hint\":\"AutoComplete_hint__1J8Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"auto\":\"UtilizationReport_auto__BN3cW\",\"dropdown\":\"UtilizationReport_dropdown__1nPLg\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"chart\":\"UtilizationReport_chart__11CVV\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"line-graph\":\"UtilizationReport_line-graph__3TWay\",\"container\":\"UtilizationReport_container__1tdjp\",\"line-container\":\"UtilizationReport_line-container__3vPZy\",\"item\":\"UtilizationReport_item__MLRbC\",\"line-details\":\"UtilizationReport_line-details__24PJo\",\"label\":\"UtilizationReport_label__1Bnmb\",\"color\":\"UtilizationReport_color__fO6V5\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"footer\":\"UtilizationReport_footer__Rz3yK\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"typo\":\"ReimbursementReport_typo__36kbp\",\"disabled\":\"ReimbursementReport_disabled__1QoJ6\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"handling\":\"ClaimsSummaryReport_handling__25OHB\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"received\":\"ProductivityPerformaceReport_received__3SdAJ\",\"processed\":\"ProductivityPerformaceReport_processed__2ECP_\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"count\":\"PerformanceReport_count__2u4Ue\",\"average\":\"PerformanceReport_average__sBrEV\",\"work\":\"PerformanceReport_work__1YnhR\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"disabled\":\"AgingPartialApprovedReport_disabled__24a81\",\"typo\":\"AgingPartialApprovedReport_typo__3ewzs\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"handling\":\"AgingPartialApprovedReport_handling__3jl7y\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"total15Days\":\"AgingPartialApprovedReport_total15Days__8bxW0\",\"total1Week\":\"AgingPartialApprovedReport_total1Week__SaR2_\",\"total1Month\":\"AgingPartialApprovedReport_total1Month__2zxDm\",\"totalAll\":\"AgingPartialApprovedReport_totalAll__1KEoW\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"disabled\":\"AgingReturnClaimReport_disabled__1aF_t\",\"typo\":\"AgingReturnClaimReport_typo__HVrxs\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"handling\":\"AgingReturnClaimReport_handling__KERnH\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"total15Days\":\"AgingReturnClaimReport_total15Days__3Dg8C\",\"total1Week\":\"AgingReturnClaimReport_total1Week__WroA2\",\"total1Month\":\"AgingReturnClaimReport_total1Month__2Z9vs\",\"totalAll\":\"AgingReturnClaimReport_totalAll__2LXXw\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"error\":\"ReimbursementInfo_error__1CY-r\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1LMgs\",\"header\":\"UploadedList_header__2KeVk\",\"header-text\":\"UploadedList_header-text__2VqnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"packages\":\"ClaimAPE_packages__38JZk\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"packages\":\"ClaimECU_packages__1pncE\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1kTdz\",\"header\":\"UploadedList_header__-de1J\",\"header-text\":\"UploadedList_header-text__39rqd\",\"handling\":\"UploadedList_handling__1_Ulf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FileViewer_root__3eOTH\",\"header-container\":\"FileViewer_header-container__3MWL_\",\"header\":\"FileViewer_header__26RQA\",\"title\":\"FileViewer_title__2Ar9A\",\"content\":\"FileViewer_content__1Ozo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"group\":\"PaymentRequestPage_group__JBVfR\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\",\"button-wrapper-kpi\":\"MaintenancePage_button-wrapper-kpi__1hwlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoCompletes_root__GqW9d\",\"row\":\"AutoCompletes_row__hY4Cp\",\"input\":\"AutoCompletes_input__1JWqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__3Z4u_\",\"label\":\"AutoComplete2_label__1UMnf\",\"wrapper\":\"AutoComplete2_wrapper__mUNcc\",\"read-only-value\":\"AutoComplete2_read-only-value__1a9p_\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__37KBN\",\"form-control\":\"AutoComplete2_form-control__2AFVD\",\"input\":\"AutoComplete2_input__15dWt\",\"suggestions\":\"AutoComplete2_suggestions__1OFwm\",\"hint\":\"AutoComplete2_hint__3TRnC\",\"focus\":\"AutoComplete2_focus__3Xz7d\",\"has-error\":\"AutoComplete2_has-error__j-hAu\",\"error\":\"AutoComplete2_error__wPImV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__3pohK\",\"label\":\"DatePicker2_label__kClQ4\",\"wrapper\":\"DatePicker2_wrapper__3ICMR\",\"read-only-value\":\"DatePicker2_read-only-value__2DDSM\",\"text-field\":\"DatePicker2_text-field__Zdavd\",\"no-margin\":\"DatePicker2_no-margin__2ksyg\",\"input\":\"DatePicker2_input__vwvQ-\",\"date-button\":\"DatePicker2_date-button__2avzL\",\"focus\":\"DatePicker2_focus__7xrY-\",\"has-error\":\"DatePicker2_has-error__1Ccy6\",\"disabled\":\"DatePicker2_disabled__3cyux\",\"error\":\"DatePicker2_error__3iYWh\",\"date\":\"DatePicker2_date__3C5ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePickers_root__3JJHS\",\"row\":\"DatePickers_row__2lQ4O\",\"input\":\"DatePickers_input__3mJCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3Nbxo\",\"root\":\"PdfViewer2_root__OnpQ7\",\"controls\":\"PdfViewer2_controls__39uMf\",\"file-name\":\"PdfViewer2_file-name__1gGwZ\",\"search\":\"PdfViewer2_search__3kgG8\",\"control\":\"PdfViewer2_control__34TU3\",\"disabled\":\"PdfViewer2_disabled__Es9Vn\",\"text-field\":\"PdfViewer2_text-field__3xc6o\",\"viewport\":\"PdfViewer2_viewport__1dkcA\",\"pdf\":\"PdfViewer2_pdf__3uFCA\",\"page\":\"PdfViewer2_page__5EQuW\",\"page-number\":\"PdfViewer2_page-number__wuwZN\",\"iframe\":\"PdfViewer2_iframe__2wl51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewers_root__2i2A-\",\"header\":\"PdfViewers_header__1unki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ErrorProducers_root__3mazu\",\"row\":\"ErrorProducers_row__2lI2A\",\"input\":\"ErrorProducers_input__-8Wlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__3x8F1\",\"toolbar\":\"Test_toolbar__jlpXK\",\"content\":\"Test_content__2tpHK\",\"wrapper\":\"Test_wrapper__1mg0_\"};","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { type = 'replace', loading = false, children, style } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {type === 'replace' ? (\n        loading ? (\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        ) : (\n          children\n        )\n      ) : (\n        type === 'overlay' && (\n          <React.Fragment>\n            {loading && (\n              <div className={classes.overlay} id='loading-overlay'>\n                <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n              </div>\n            )}\n            {children}\n          </React.Fragment>\n        )\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Style\n// import classes from './TableSortLabel.module.module.scss'\n\nexport default function _TableSortLabel (props) {\n  // Variables\n  const { field = '', label = '', selected = '', direction = 'asc', ...others } = props\n  // Services\n  // Events\n  const { onClick = () => {} } = props\n  // Callbacks\n  // Local Variables\n\n  return (\n    // <TableSortLabel active={showArrow} direction={direction} onClick={onClick} {...others}>\n\n    <React.Fragment>\n      <TableSortLabel hideSortIcon onClick={onClick} {...others}>\n        {label}\n      </TableSortLabel>\n      {selected === field ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={direction === 'asc' ? 'sort-up' : 'sort-down'} />\n      ) : (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={'sort'} />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\nimport TableSortLabel from 'SharedComponents/TableSortLabel/TableSortLabel'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body,\n  fetching = false\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({\n      ...p,\n      show: false,\n      count: 0,\n      search: '',\n      limit: 10,\n      page: 1,\n      filter: {}\n    }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  {/* <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel> */}\n                  <TableSortLabel\n                    field={headCell.sortField}\n                    label={headCell.name}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    selected={viewList.orderBy}\n                    onClick={handleOnSort(headCell.sortField)}\n                  />\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={\n            fetching ? (\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <LoadingIndicator loading={fetching} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              body(viewList.data)\n            )\n          }\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'created', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`created-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`submitted-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n                disableClearable\n                // forcePopupIcon={false}\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    minDate,\n    maxDate,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      setSelectedDate(date)\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={selectedDate}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  minDate={minDate}\n                  maxDate={maxDate}\n                  helperText={''}\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({\n                ...state,\n                doctorPartner: data.map(i => ({ ...i, name: i.full_name }))\n              }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      onChange({ field, value })\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name', field })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name', field })\n          break\n        default:\n          break\n      }\n    } else {\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(details.date_received)\n      .add(term, 'days')\n      .format('MM/DD/YYYY')\n    onChange({ field: 'facility_id', value: value.id })\n    onChange({ field: 'facility_name', value: value.name })\n    onChange({ field: 'due_date', value: newDate })\n  }\n\n  const handleOnChangeDoctorPartner = ({ value, field }) => {\n    onChange({ field: 'doctor_name', value: value.full_name })\n    onChange({ field: 'doctor_id', value: value.id })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ field: 'total_rcs', value: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ field: 'date_received', value: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ field: 'due_date', value: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ field: 'soa_number', value: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ field: 'total_soa_amt', value: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'id'}\n            loading={fetching['facility_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'name'}\n            loading={fetching['facility_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'id'}\n            loading={fetching['doctor_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'name'}\n            loading={fetching['doctor_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                  MenuProps={MenuProps}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { resetReturn, setReturnNote } from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents,\n  fetching\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n  const [claimSource, setClaimSource] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    BatchEncodingServices.lookups({ on: 'maintenance', params: { field: 'claims-source', filter: { status: { value: 'Active', match: 'start' } } } }).then(({data: res}) => {\n      const { results } = res.data\n      const _results = results.map(i => (\n        {\n          value: i.description,\n          text: i.description\n        }))\n      if (results) setClaimSource(_results)\n    }).catch(err => {\n      console.log('Claim Source Error', err)\n      setClaimSource([])\n    })\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claimSource}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/p/f')\n\nexport default class FacilitiesServices {\n  static getFacilities () {\n    return axios({\n      url: '/partners/facilities',\n      method: 'GET'\n    })\n  }\n\n  static getFacilityByName ({ name }) {\n    return axios({\n      url: `/partners/facilities/${name}`,\n      method: 'GET'\n    })\n  }\n\n  static getFacilityById ({ id }) {\n    return axios({\n      url: `/partners/facilities/id/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport FacilitiesServices from 'Services/Api/FacilitiesServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n  const [defClaimSource, setDefClaimSource] = React.useState('')\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n      getDefaultClaimSource({ id: data.facility.id })\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setSelectedBatch({ [field]: value }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(setSelectedBatch({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    dispatch(resetSuggestionObject({ field: 'doctor' }))\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          setFetching(state => ({ ...state, [by]: true }))\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ field, value }) => {\n    setBundle(state => ({ ...state, [field]: value }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      getDefaultClaimSource({ id: data.facility_id })\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: defClaimSource,\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const getDefaultClaimSource = ({ id }) => {\n    FacilitiesServices.getFacilityById({ id }).then(res => {\n      const { type = '' } = res.data.data || {}\n      let claim_source = ''\n\n      switch (type.toLowerCase()) {\n        case 'hospital':\n          claim_source = 'Hospital'\n          break\n        case 'clinic':\n        case 'dental_clinic':\n          claim_source = 'Clinic'\n          break\n      }\n\n      setDefClaimSource(claim_source)\n    })\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n            fetching={fetching}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      disabled={batches.length >= 1}\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","function PromiseUtil () { }\n\n/**\n * Execute in sequence the list of promises\n *\n * @param {array} tasks list of tasks or promises\n */\nPromiseUtil.executeInSequence = async function (promises, callback) {\n  // return promises.reduce((p, task) => p.then(task), Promise.resolve())\n  // for (const fn of promises) {\n  //     await fn()\n  // }\n  \n  var chain\n  for (let i in promises){\n      alert(i)\n    if (chain) chain = chain.then(promises[i]);\n    if (!chain) chain = promises[i]();\n\n    // TODO: remove\n    break\n  }\n\n  callback()\n}\n\nexport default PromiseUtil\n","import { fromBlob } from 'Services/Download'\n\nexport default function ArrayToCSV (props) {\n  const {\n    fileName = 'CSV',\n    header = [],\n    rows = [],\n    extension = 'csv',\n    statics = [],\n    data = [],\n    mimeType = 'data:text/csv;charset=utf-8'\n  } = props\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  fromBlob({ fileName, extension, content: _rows, mimeType })\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport { parseFullName } from 'parse-full-name'\nimport { to } from 'await-to-js'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\nimport PromiseUtil from 'Utilities/PromiseUtil'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n/**\n * SOA ETL Controller.\n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController () {}\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT: {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    RCSNum: SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    Diagnosis: SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    Procedure: SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs download of template for SOA File Import\n *\n * @param columnTemplates template mapping\n */\nSoaEtlController.downloadTemplate = function (columnTemplates = SoaEtlController.COLUMN_TEMPLATES.DEFAULT) {\n  console.log('soa_etl', 'downloadTemplate')\n\n  ArrayToCSV({\n    fileName: 'SOA_import',\n    extension: 'xls',\n    header: Object.keys(columnTemplates),\n    rows: [],\n    mimeType: 'application/vnd.ms-excel'\n  })\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (\n    !dataRows ||\n    !dataMapping ||\n    !dataMapping.columns ||\n    !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n  )\n    throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/**\n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n *\n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam })\n        .then(res => {\n          // Create promise for each add batch operation (which contains add-claims operation)\n          const addBatchPromises = []\n\n          async function addBatches () {\n            for (let batchIndex in bundle.batches) {\n              const batch = bundle.batches[batchIndex]\n              const batchParam = { ...batch }\n              delete batchParam.claims\n\n              let batchPromise = new Promise(function (resolveBatch, rejectBatch) {\n                // Call create batch API\n                BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n                  .then(res => {\n                    const { data } = res.data\n                    batch.batch_number = data.batch_number\n\n                    async function addClaims () {\n                      for (let i = 0; i < batch.claims.length; i++) {\n                        const claim = batch.claims[i]\n                        // Invoke create claim\n                        const [claimsErr, claimsRes] = await to(ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim }))\n\n                        // Halt operation based on VNI requirement\n                        // Reference: https://gitlab.com/VeridataTSA/hims-app/-/issues/7817#note_414738627\n                        if (claimsErr) {\n                          console.log(claimsErr)\n                          reject('Failed adding of claim under batch: ' + batch.batch_number)\n                          break;\n                        } \n                        // if (claimsRes) {\n                        //   console.log(claimsRes)\n                        // }\n                      }\n                      resolveBatch()\n                    }\n\n                    // Create claims for batch\n                    addClaims()\n                  })\n                  .catch(() => {\n                    rejectBatch('Batch creation failed')\n                  })\n              })\n\n              await batchPromise\n            }\n            resolve(bundle.bundle_number)\n          }\n\n          addBatches()\n\n          // Note: VNI requirement, is to not perform automatic bundle submission\n          //       and consequentially, no automatic claims creation for claims under the\n          //       automatically created batches. That is the function requirement.\n          //       The technical operation however, needs claims to be created but just\n          //       NOT visible as of yet to claims encoders (and up).\n          // // Todo: refactor to wait for all batches to be created before submitting bundle\n          // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n          //   if (successCallback) { successCallback();}\n          //   resolve()\n          //   // batch.claims.forEach(element => {\n          //   //   let claim = element\n          //   // })\n          // }).catch(() => {\n          //   reject('Bundle submission failed')\n          // })\n\n          // console.log(addBatchPromises)\n          // resolve(bundle.bundle_number)\n          //PromiseUtil.executeInSequence(addBatchPromises, () => { resolve(bundle.bundle_number) })\n          // Promise.all(addBatchPromises)\n          //   .then(() => {\n          //     console.log('success SOA loading unto API')\n          //     //alert('success SOA loading unto API')\n          //     resolve(bundle.bundle_number)\n          //   })\n        })\n        .catch(() => {\n          console.log('failed SOA loading unto API')\n          //alert('failed SOA loading unto API')\n          reject('Bundle creation failed')\n        })\n    })\n  })\n\n  return promise\n}\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/**\n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n *\n * @param prepDataRows output from _transformPreviewDataToPrepData()\n *\n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived)\n          .add(30, 'days')\n          .format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: 'SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n',\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (\n      !currentClaim ||\n      (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])\n    ) {\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = parseFullName(memberName)\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts.first,\n        member_middle_name: nameParts.middle,\n        member_last_name: nameParts.last,\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: ''\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries\n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee\n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n\n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n\n      currentClaim.professional_fees.push({\n        doctor_name: lineItem,\n        doctor_id: 'unknown',\n        gross_amount: lineAmount,\n        specialization: 'unknown',\n        vat_amount: 0,\n        amount_paid_by_member: 0,\n        philhealth_amount_paid: 0,\n        philhealth_remarks: '',\n        amount_not_covered: 0,\n        reason: '',\n        amount_due_from_member: 0,\n        reason_for_charging_member: ''\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem,\n          item_code: 'unknown',\n          gross_amount: lineAmount,\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: '',\n          amount_not_covered: 0,\n          reason: '',\n          amount_due_from_member: 0,\n          reason_for_charging_member: ''\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n      // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem,\n          gross_amount: lineAmount,\n          code: 'unknown',\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: ''\n        })\n      }\n    }\n  })\n\n  return bundle\n}\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 0\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 1\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 2\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 3\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        __index__: 4\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 5\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 6\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 7\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 8\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 10\n      }\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {\n          IP: 'In Patient',\n          OPP: 'Out Patient Procedure',\n          OPC: 'Out Patient Consultation'\n        }\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital'\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_full_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`doctor_${by}`]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, doctorPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`doctor_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      setNewBundle(state => ({ ...state, [field]: value }))\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name' })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name' })\n          break\n        default:\n          break\n      }\n    } else {\n      const _value = value || {}\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value: _value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value: _value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value = {}, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(newBundle.date_received).add(term, 'days')\n\n    setNewBundle(state => ({\n      ...state,\n      facility_id: value.id,\n      facility_name: value.name,\n      due_date: newDate,\n      due_date_adjustment: term\n    }))\n    // }\n  }\n\n  const handleOnChangeDoctorPartner = ({ value = {}, field }) => {\n    setNewBundle(state => ({ ...state, doctor_id: value.id, doctor_name: value.full_name }))\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const handleOnDownloadTemplate = () => {\n    LoadingService.loading(true)\n    SoaEtlController.downloadTemplate()\n    LoadingService.loading(false)\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography\n            id='upload-soa-button'\n            variant='subtitle2'\n            className={`bold text-link ${classes.label}`}\n            display='inline'\n          >\n            + Upload SOA\n          </Typography>\n        </Link>\n        <Typography\n          onClick={handleOnDownloadTemplate}\n          id='download-soa-template-button'\n          variant='subtitle2'\n          className={`bold text-link ${classes.label}`}\n          display='inline'\n          style={{ marginLeft: 10 }}\n        >\n          + Download SOA Template\n        </Typography>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              //* e.target is in an asynchronous context (setNewBundle)\n              //* moved e.target.value outside asynchronous context\n              onChange={e => {\n                const { value } = e.target\n                // setNewBundle(state => ({ ...state, soa_number: e.target.value }))\n                setNewBundle(state => ({ ...state, soa_number: value }))\n              }}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'id'}\n              loading={fetching['facility_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'name'}\n              loading={fetching['facility_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'id'}\n              loading={fetching['doctor_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'full_name'}\n              loading={fetching['doctor_full_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete, onError }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n    onComplete({ headers, results })\n  }\n\n  reader.onerror = ex => onError(ex)\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    console.log(file)\n    const validTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel']\n    if (!validTypes.includes(file.type)) return\n\n    setFileLoaded(true)\n\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      },\n      onError: ex => {\n        console.log(ex)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    rows: [],\n    count: 0,\n    limit: 10,\n    page: 1\n  })\n\n  const [trimmedItems, setTrimmedItems] = React.useState([])\n\n  React.useEffect(() => {\n    // Trim the actual passed items\n    const _items = []\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => {\n        return item[key] && item[key].trim().length > 0\n      })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    // Store trimmed items\n    setTrimmedItems(_items)\n\n    // Trigger the callback sending all trimmed items\n    onDetectDataRows(_items)\n  }, [])\n\n  React.useEffect(() => {\n    // Trigger set rows\n    handleOnChangeItems({})\n  }, [trimmedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n    setTableState(state => ({ ...state, rows: trimmedItems.slice(startAt, endAt), count: items.length }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={tableState.rows.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={tableState.count}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.pair}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.header}>\n          {headers.map((head, index) => (\n            <Typography key={`heade-${index}`} variant='h6'>\n              {head}\n            </Typography>\n          ))}\n        </div>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: []\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({ ...state, facility: [] }))\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, facility: data }))\n            })\n            .finally(() => {\n              setFetching((state = { ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      setFacilityTemplate(state => ({ ...state, [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    } else {\n      const _value = value || {}\n      setFacilityTemplate(state => ({ ...state, facility_id: _value.id, facility_name: _value.name }))\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  search\n                })\n              }\n              field={'id'}\n              loading={fetching['facility_id']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  search\n                })\n              }\n              field={'name'}\n              loading={fetching['facility_name']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      console.log('Transform Error', ex)\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex.message || ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch((message) => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed.\\n' + message\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static genericURL (params) {\n    const { url, method = 'GET', ...others } = params\n    return axios({\n      url: url,\n      method: method,\n      params: others\n    })\n  }\n\n  static getUploads (params) {\n    return axios({\n      url: '/file',\n      method: 'GET',\n      params\n    })\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'PR No.', data: 'pr_number', search: true, match: 'start' },\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any' },\n  { label: 'Encoded by', data: 'encoded_by', search: true, match: 'any' },\n  { label: 'Date Encoded', type: 'date', data: 'date_encoded', search: true, match: 'date' },\n  { label: 'Approved by', data: 'approved_by', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [columns, setColumns] = React.useState(completeColumns)\n\n  const [btnDisabled, setBtnDisabled] = React.useState(true)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  // React.useEffect(() => {\n  //   setClaims(state => ({\n  //     ...state,\n  //     range: {\n  //       ...state.range,\n  //       to: dateRange ? dateRange.to : new Date().toISOString(),\n  //       from: dateRange ? dateRange.from : new Date().toISOString()\n  //     }\n  //   }))\n  // }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to),\n        date_encoded: DateFormatter(claim.date_encoded)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setBtnDisabled(!_claims.length)\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    setBtnDisabled(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to),\n        date_encoded: DateFormatter(claim.date_encoded)\n      }))\n\n      const rows = _claims.map(claim => {\n        return completeColumns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = completeColumns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n      setBtnDisabled(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={btnDisabled}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${btnDisabled ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {completeColumns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            // onChange={event =>\n                            //   handleOnFilter({\n                            //     field: headCell.data,\n                            //     value: event.target.value,\n                            //     match: headCell.match\n                            //   })\n                            // }\n                            onChange={event => {\n                              const search = event.target.value\n                              clearTimeout(debounce)\n                              setDebounce(\n                                setTimeout(() => {\n                                  handleOnFilter({\n                                    field: headCell.data,\n                                    value: search,\n                                    match: headCell.match\n                                  })\n                                }, 500)\n                              )\n                            }}\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {completeColumns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.length < 1 ? (\n                    <MenuItem className={classes.hint} disabled>\n                      Enter atleast 3 characters to search.\n                    </MenuItem>\n                  ) : (\n                    suggestions.map((suggestion, index) => (\n                      <MenuItem\n                        id={`${props.id}-suggestion-${index}`}\n                        key={`${props.id}-suggestion-${index}`}\n                        onClick={() => {\n                          setFocus(true)\n                          handleItemClick(index)\n                        }}\n                      >\n                        {suggestion}\n                      </MenuItem>\n                    ))\n                  )}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getMemberContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/member/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/client/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET'\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n\n  static getMembers2 (query) {\n    return axios({\n      url: `/members-lookup`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { args: query }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersWithRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"or\":[{\"roles.name\":{\"like\":\"${role_name}.*\",\"options\":\"i\"}}, {\"main_role.name\":\"${role_name}\"}]}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', data: 'no', sort: false, align: 'left', class: 'h_no', type: 'number' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', data: 'loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', data: 'date', sort: true, align: 'left', class: 'h_date', type: 'date' },\n  { label: 'MEMBER', sortField: 'member_name', data: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  {\n    label: 'AMOUNT',\n    sortField: 'total_amount',\n    data: 'total_amount',\n    sort: false,\n    align: 'right',\n    class: 'h_amount',\n    type: 'currency'\n  },\n  {\n    label: 'AR',\n    sortField: 'total_due_from_member',\n    data: 'total_due_from_member',\n    sort: false,\n    align: 'right',\n    class: 'h_ar',\n    type: 'currency'\n  }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    // const rows = []\n\n    // claims.raw.forEach(item => {\n    //   item.date = DateFormatter(item.date)\n    //   rows.push(Object.values(item))\n    // })\n\n    const rows = claims.raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                        align={col.align}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns,\n    //* For Utilization Report (Member Centric)\n    fromUtilReport = false,\n    claimUtilizations = []\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          const types = ['ABL', 'MBL']\n          for (let i = 0; i < member.benefit_limits.length; i++) {\n            if (types.includes(member.benefit_limits[i].type)) {\n              type = member.benefit_limits[i].type\n              limit = member.benefit_limits[i].limit\n              break\n            }\n          }\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          let data = []\n\n          if (!fromUtilReport) {\n            const { data: _data } = res.data\n            data = _data\n          } else data = claimUtilizations\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          // TODO\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            let data = []\n\n            if (!fromUtilReport) {\n              const { data: _data } = res.data\n              data = _data\n            } else data = claimUtilizations\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst prefix = '/c/ca'\nconst axios = instance(prefix)\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  // DO NOT USE , this was a prototype\n  static getAnalysisSheetURL ({ claimNo }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `${prefix}/claims/${claimNo}/reports/analysis-sheet?token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n\n  static getMemberUtilizations ({ member_account_no, range }) {\n    return axios({\n      url: `/claims/${member_account_no}/member-utilizations`,\n      method: 'GET',\n      params: { range }\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: 'rgba(237, 237, 237, 0.9)',\n  OutPatientProcedure: 'rgba(222, 222, 222, 0.9)',\n  OutPatientConsultation: 'rgba(158, 163, 172, 0.9)',\n  Reimbursement: 'rgba(13, 94, 64, 0.9)',\n  Emergency: 'rgba(250, 180, 53, 0.9)',\n  Dental: 'rgba(128, 52, 173, 0.9)',\n  MedicineAllowance: 'rgba(26, 177, 196, 0.9)',\n  APE: 'rgba(58, 183, 125, 0.9)',\n  ECU: 'rgba(253, 84, 81, 0.9)',\n  Pharmacy: 'rgba(98, 255, 183, 0.9)',\n  PPE: 'rgba(30, 32, 113, 0.9)',\n  MedicalSupplies: 'rgba(230, 168, 228, 0.9)',\n  ClinicManagement: 'rgba(102, 175, 190, 0.9)'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import legend from '../data/legend'\nimport theme from '../style/theme'\n\nconst getDefault = ({ month = [] }) => {\n  const count = month.length\n  const _legend = legend.map(i => ({\n    label: i.description,\n    hoverBorderWidth: 1,\n    hoverBorderColor: '#000',\n    // hidden: type === 'all' ? false : type !== i.description.replace(/ /g, ''),\n    backgroundColor: theme[i.description.replace(/ /g, '')] }))\n\n  return _legend.map(i => ({ ...i, data: Array.from(Array(count), () => 0) }))\n}\n\nexport default getDefault\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nexport default function BundlePage (props) {\n  const { data, options } = props\n  return (\n    <React.Fragment>\n      <Bar data={data} options={options} />\n    </React.Fragment>\n  )\n}\n","const items = [\n  { value: 'Search by ID', text: 'Search by ID', type: 'client', field: 'client_id' },\n  { value: 'Search by Name', text: 'Search by Name', type: 'client', field: 'client_name' },\n  { value: 'Search by ID', text: 'Search by ID', type: 'member', field: 'member_id' },\n  { value: 'Search by Name', text: 'Search by Name', type: 'member', field: 'member_name' }\n]\n\nexport default items\n","import React from 'react'\n\nimport moment from 'moment'\nimport lodash from 'lodash'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport getDefault from './config/types'\nimport Chart from './Chart/Chart'\nimport dropdown from './config/dropdown'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\nconst inititalDate = { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' }\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any', align: 'left' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number', align: 'center' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number', align: 'center' }\n]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: { client: { index: '', key: '' }, member: { index: '', key: '' } },\n    range: { client_id: inititalDate, member_id: inititalDate },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n  const [chartData, setChartData] = React.useState({})\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [fetching, setFetching] = React.useState({\n    main: false\n  })\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [suggestion, setSuggestion] = React.useState({\n    client: [],\n    member: []\n  })\n  const [memberUtilizations, setMemberUtilizations] = React.useState([])\n  const [searchBy, setSearchBy] = React.useState({ value: '', field: '' })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n    setSearchBy({ value: 'Search by ID', field: getField({ value: 'Search by ID', type: reportType }) })\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const validate = () => {\n    const field = reportType === 'client' ? 'client_id' : 'member_id'\n    const { error } = DateRangeValidator({\n      date_from: reports.range[field].from,\n      date_to: reports.range[field].to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const getCoveredMonths = ({ data = [] }) => {\n    const _field = reportType === 'client' ? 'client_id' : 'member_id'\n    const from = new Date(reports.range[_field].from).getMonth()\n    const to = new Date(reports.range[_field].to).getMonth()\n    const covered = []\n    const result = data.map(i => i.month - 1)\n\n    for (let i = from; i <= to; i++) {\n      covered.push(i)\n    }\n\n    return lodash.uniq([...covered, ...result]).map(i => months[i])\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'client' && reports.search.client.key === '') return\n    if (reportType === 'member' && reports.search.member.key === '') return\n\n    LoadingService.loading(true)\n    if (reportType === 'member') {\n      getMember(reports.search.member.key)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n    } else {\n      Promise.all([\n        ClaimsServices.utilizationClient({\n          search: reports.search.client.key,\n          range: reports.range.client_id,\n          filter: reports.filter,\n          sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n          page: reports.page,\n          limit: reports.limit,\n          type: graphFilter\n        }),\n        ClaimsReconServices.getClientUtilization({ client_account_no: reports.search.client.key }),\n        CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search.client.key })\n      ])\n        .then(res => {\n          const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n          const { data: graph } = graphClientRes.data\n          const { data: utilAmount } = clientUtilRes.data\n          const { data: loaAmount } = clientUtilLoaRes.data\n          // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n          setGraph(state => ({\n            ...state,\n            total: graph.client.limit.limit,\n            utilized: utilAmount.total_utilization_amount || 0,\n            ibnr: loaAmount.total_ibnr_amount || 0\n          }))\n          // setGraphData(p => ({ ...p, initial: graph.results }))\n          setTotalAmount(graph.grand_total || 0)\n          setClient(state => ({\n            ...state,\n            name: graph.client.name,\n            account_no: graph.client.account_number,\n            limit: graph.client.limit\n          }))\n\n          const covered_months = getCoveredMonths({ data: graph.results })\n          setChartData({ ...graph, covered_months })\n          fetchTable()\n        })\n        .catch(err => console.error(`Error Fetching Data: ${err}`))\n    }\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search.client_id,\n      range: reports.range.client_id,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = ({ value, field, search }) => {\n    if (search) {\n      setSuggestion(state => ({ ...state, [field]: [] }))\n      getSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      setReports(state => ({ ...state, search: { ...state.search, [field]: { index: searchBy.value.includes('ID') ? _value.id : _value.name, key: _value.id } } }))\n      setSuggestion(state => ({ ...state, [field]: [] }))\n    }\n  }\n\n  const getSuggestions = ({ value = '', field }) => {\n    setReports(state => ({ ...state, search: { ...state.search, [field]: { ...state.search[field], index: value } } }))\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, main: true }))\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value && reportType === 'client') {\n          const fields = {\n            client_id: 'corporate_account_no',\n            client_name: 'registered_name'\n          }\n          CustomerCareServices.getClientInfo({ value, field: fields[searchBy.field] }).then(res => {\n            const { data = [] } = res.data\n            const item = []\n\n            for (const d of data) {\n              item.push({ id: d[fields.client_id], name: d[fields.client_name] })\n            }\n            setSuggestion(state => ({ ...state, client: item }))\n          }).finally(() => {\n            setFetching(state => ({ ...state, main: false }))\n          })\n        } else if (value && reportType === 'member') {\n          let query = {}\n\n          if (searchBy.field === 'member_id') {\n            query = { member_id: { like: value } }\n          } else {\n            const _value = value.split(' ')\n            const p = _value.filter(i => i !== '').map(v => {\n              if (v) {\n                return { or: [\n                  { first_name: { like: v, options: 'i' } },\n                  { middle_name: { like: v, options: 'i' } },\n                  { last_name: { like: v, options: 'i' } }\n                ]\n                }\n              }\n            })\n            query = { and: p }\n          }\n          // http://18.138.94.224:4101/api/members?filter={\"where\":{\"or\":[{\"first_name\":{\"like\":\"Ariana|Grande\"}},{\"last_name\":{\"like\":\"Ariana|Grande\"}}]}}\n          CustomerCareServices.getMembers2({\n            where: { ...query },\n            limit: 10,\n            order: 'member_id desc'\n          }).then(res => {\n            const { data = [] } = res.data\n            const item = []\n            for (const d of data) {\n              item.push({ id: d['member_id'], name: d['member_name'] })\n            }\n            setSuggestion(state => ({ ...state, member: item }))\n          }).finally(() => {\n            setFetching(state => ({ ...state, main: false }))\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleReportType = args => {\n    const type = args.target.value\n\n    setReportType(type)\n    setSearchBy(state => ({ ...state, field: getField({ value: state.value, type }) }))\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n      .finally(() => LoadingService.loading(false))\n\n    ClaimsReconServices.getMemberUtilizations({ member_account_no: account_number, range: reports.range.member_id }).then(res => {\n      const { data = [] } = res.data\n      setMemberUtilizations(data)\n    }).catch(err => {\n      if (err) { setMemberUtilizations([]) }\n    })\n  }\n\n  const formatChart = data => {\n    const { results = [], covered_months = [] } = data\n    // const _data = getDefault({ month: covered_months, type: graphFilter })\n    const _data = getDefault({ month: covered_months })\n    let mergeResultsbyMonth = []\n\n    for (const r of results) {\n      mergeResultsbyMonth = [...mergeResultsbyMonth, ...r.claims]\n    }\n\n    const parsedData = mergeResultsbyMonth.map(_merge => {\n      for (const i of _data) {\n        if (_merge.claim_type === i.label) {\n          const month = months[_merge.month - 1]\n          i.data[covered_months.indexOf(month)] = _merge.total_amount\n          return { ...i, data: i.data }\n        }\n      }\n    })\n\n    const dynamic = lodash.uniqBy(parsedData, j => j.label)\n    const filteredData = lodash\n      .orderBy(_data\n        .map(i => dynamic\n          .find(u => u.label === i.label) || i), ['label'], ['asc'])\n\n    return {\n      labels: covered_months,\n      datasets: filteredData.filter(i => {\n        if (i.label.replace(/ /g, '') === graphFilter) {\n          return i\n        } else if (graphFilter === 'all') {\n          return filteredData\n        }\n      })\n    }\n  }\n\n  const getField = ({ value, type }) => {\n    const { field = '' } = (dropdown.filter(i => i.type === type && i.value === value)).pop()\n    return field\n  }\n\n  const handleOnChangeDropdown = ({ value }) => {\n    setSearchBy({ value, field: getField({ value, type: reportType }) })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.dropdown}>\n              <DropDown\n                id='search-by'\n                items={dropdown.filter(i => i.type === reportType)}\n                value={searchBy.value}\n                onChange={event =>\n                  handleOnChangeDropdown({\n                    value: event.target.value\n                  })\n                }\n                // error={_errors.diagnosis_code}\n                // readOnly={!permissions.update}\n              />\n            </div>\n            <div className={classes.auto}>\n              <AutoComplete\n                id='account_number'\n                placeholder={reportType === 'client' ? `Search for Client ID` : `Search for Member ID`}\n                value={reportType === 'client' ? reports.search.client.index : reports.search.member.index}\n                suggestions={reportType === 'client' ? suggestion.client : suggestion.member}\n                field={searchBy.value.includes('ID') ? 'id' : 'name'}\n                loading={fetching['main']}\n                onChange={(value, search) =>\n                  handleSearchChange({\n                    field: reportType === 'client' ? 'client' : 'member',\n                    value,\n                    search\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].from}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], from: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].to}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], to: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['line-graph']}>\n              <div className={classes.container}>\n                <div className={classes['line-container']}>\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`,\n                      background: '#f8b439'\n                    }}\n                  />\n                </div>\n                <div className={classes['line-details']}>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#4fb083' }} />\n                      <Typography variant='button'>UTILIZED</Typography>\n                    </div>\n                    <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                      {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                      <Typography variant='button'>IBNR</Typography>\n                    </div>\n                    <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                      {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#f8b439' }} />\n                      <Typography variant='button'>AVAILABLE</Typography>\n                    </div>\n                    <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                      {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map((data, index) => (\n                    <MenuItem value={data.type} key={index}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map((data, index) => (\n                <div className={classes['legend-group']} key={index}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['chart']}>\n            <Chart\n              data={formatChart(chartData)}\n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n                legend: {\n                  display: false\n                },\n                // tooltips: {\n                //   enabled: true,\n                //   mode: 'single',\n                //   callbacks: {\n                //     label: (tooltipItems, data) => {\n                //       tooltipItems.value = CurrencyFormatter(tooltipItems.value)\n                //       return `${tooltipItems.yLabel}: ${CurrencyFormatter(tooltipItems.value)}`\n                //     }\n                //   }\n                // },\n                // animation: {\n                //   show: {\n                //     x: {\n                //       from: 0\n                //     },\n                //     y: {\n                //       from: 0\n                //     }\n                //   },\n                //   hide: {\n                //     x: {\n                //       to: 0\n                //     },\n                //     y: {\n                //       to: 0\n                //     }\n                //   }\n                // },\n                maintainAspectRatio: false\n              }} />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '570px', overflow: 'auto', position: 'relative', minHeight: '190px' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`} align={headCell.align}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(claim.total_amount)}</TableCell>\n                    <TableCell align='center'>{claim.cases}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_principals}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography style={{ 'fontWeight': 'bold' }}>{`Total Amount: ${CurrencyFormatter(totalAmount)}`}</Typography>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 1, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 0, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n            claimUtilizations={memberUtilizations}\n            fromUtilReport\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{item.member_account_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{`${item.member_name || 'N/A'}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'currency', data: 'total_amount' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', received: 0, processed: 0, total_amount: 0 },\n      { month: 'Febuary', received: 0, processed: 0, total_amount: 0 },\n      { month: 'March', received: 0, processed: 0, total_amount: 0 },\n      { month: 'April', received: 0, processed: 0, total_amount: 0 },\n      { month: 'May', received: 0, processed: 0, total_amount: 0 },\n      { month: 'June', received: 0, processed: 0, total_amount: 0 },\n      { month: 'July', received: 0, processed: 0, total_amount: 0 },\n      { month: 'August', received: 0, processed: 0, total_amount: 0 },\n      { month: 'September', received: 0, processed: 0, total_amount: 0 },\n      { month: 'October', received: 0, processed: 0, total_amount: 0 },\n      { month: 'November', received: 0, processed: 0, total_amount: 0 },\n      { month: 'December', received: 0, processed: 0, total_amount: 0 }\n    ],\n    total_received: 0,\n    total_processed: 0,\n    total_amount: 0\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n    handleOnFilter()\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = 0, total_amount } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed}`, `${total_amount}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align='center'\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_amount}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.receivedTotal}</span>\n            </Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.processedTotal}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: 'ALL', claim_source: 'ALL', contract_plan_type: 'ALL', section: 'ALL', user: 'ALL' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: ['ALL'],\n    claim_source: ['ALL'],\n    contract_plan_type: ['ALL'],\n    section: ['ALL'],\n    user: ['ALL']\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n    fetchRecords()\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'section',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.count}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.count}</span>\n            </Typography>\n          </div>\n          <div className={classes.average}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.average}</span>\n            </Typography>\n          </div>\n          <div className={classes.work}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.work}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of partially approved',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Partially Approved Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState({})\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, index = '', field, isSuggestionClick }) => {\n    let _category = ''\n\n    if (index) _category = `${category}_${index}`\n    else _category = category.split('-').join('_')\n\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[_category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of returned claims',\n    label2: 'within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: 'beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of returned claims',\n    label2: 'beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Returned Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState([])\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Returned Claims Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Returned Claims Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item', align: 'left' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count', align: 'center' },\n  {\n    label: 'Number of Percentage of Reimbursement Claims',\n    type: 'number',\n    data: 'reimbursement_percent',\n    align: 'center',\n    suffix: '%'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { item: 'Reimbursement within TAT', reimbursement_count: 0, reimbursement_percent: 0 },\n      { item: 'Reimbusement above TAT', reimbursement_count: 0, reimbursement_percent: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: 'ALL' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [category]: setTimeout(() => {\n          // use constant (this also used in Reimbursement Claim page)\n          const const_types = ClaimTypes.Reimbursement.subType\n\n          if (value) {\n            const _value = value.toLowerCase()\n            const filtered = const_types\n              .map(i => i.text)\n              .filter(j => {\n                const lower_case = j.toLowerCase()\n\n                return lower_case.includes(_value)\n              })\n\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...filtered] }))\n          } else {\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...const_types.map(i => i.text)] }))\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement_category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`} align={headCell.align}>\n                    {headCell.label}\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.align}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  // { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ])\n      .then(values => {\n        const [batchEncoders, count] = values\n        setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork({ limit: 10, sort: 'name|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={item.id}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.user_id}>\n                  <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                  <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                  <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                  <TableCell id={`view-work-${index}`}>\n                    <Link to={`/batch-encoder-work/${item.user_id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    setFetching(true)\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: viewList.limit, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count, id: 'claim-for-Reconciliation-count' }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map((item, index) => (\n                  <TableCell\n                    key={index}\n                    // id={item.id}\n                  >\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.for_recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number}</TableCell>\n                  <TableCell>{item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell id={`view-review-${index}`}>\n                    <Link to={`/claims/recon/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from '../instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, ...others }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params: others\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit, _id } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          })).filter(i => i.value !== _id)\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundles, setBundles] = React.useState({\n    // data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n  const [selected, setSelected] = React.useState({ bundle_numbers: [] })\n  const [bundle, setBundle] = React.useState({})\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n    LoadingService.loading(true)\n\n    PageTitleService('Created Bundles')\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n    getBundles(bundles)\n  }, [props.match.params.user_id])\n\n  const getBundles = params => {\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: props.match.params.user_id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    }).then(({ data: response }) => {\n      const { results } = response.data\n      setBundles(state => ({ ...state, ...response.data }))\n      const _data = []\n\n      //* Trial\n      for (const result of results) {\n        const selectedBundleNumbers = selected.bundle_numbers\n        if (selectedBundleNumbers.includes(result.bundle_number)) _data.push({ ...result, checked: true })\n        else _data.push({ ...result, checked: false })\n      }\n\n      const checkedCount = _data.filter(i => i.checked).length\n      const resultsCount = results.length\n\n      setBundle({\n        data: _data,\n        loading: false,\n        indeterminate: checkedCount > 0 && checkedCount < resultsCount ? true : undefined,\n        checked: checkedCount === resultsCount ? true : undefined\n      })\n      LoadingService.loading(false)\n    }).catch(err => {\n      console.error(err)\n    })\n  }\n\n  const handleSelectAll = event => {\n    let _bundles = bundle\n\n    if (_bundles.data) {\n      _bundles.data.map(i => {\n        i.checked = _bundles.indeterminate ? true : !_bundles.checked\n        return i\n      })\n    }\n\n    setBundle(_bundles)\n    changeSelectAllState({ data: _bundles })\n  }\n\n  const handleItemSelect = ({ bundle, index }) => {\n    const _bundles = {\n      ...bundle,\n      data: bundle.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBundle(_bundles)\n    changeSelectAllState({ data: _bundles })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    const unchecked = []\n    let _bundles = data || bundle\n    let selected_count = 0\n    let bundleNumbers = []\n    if (_bundles.data) {\n      for (let b of _bundles.data) {\n        if (b.checked) {\n          selected_count++\n          bundleNumbers.push(b.bundle_number)\n        } else unchecked.push(b.bundle_number)\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _bundles.data.length : false\n    let checked = selected_count ? selected_count === _bundles.data.length : false\n    _bundles = { ..._bundles, indeterminate, checked }\n    setBundle(_bundles)\n\n    //* Trial\n    const uniqueSelectedBundleNumber = [...new Set([ ...selected.bundle_numbers, ...bundleNumbers ])]\n    const _data = uniqueSelectedBundleNumber.filter(i => !unchecked.includes(i))\n\n    setSelected(state => ({ bundle_numbers: _data }))\n  }\n\n  const handleOnCancel = () => {\n    let _data = bundle.data.map(i => ({ ...i, checked: false }))\n\n    setBundle(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setActiveAssigning(false)\n    setSelected({ bundle_numbers: [] })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers: selected.bundle_numbers\n      }\n    }).then(res => {\n      setSelected({ bundle_numbers: [] })\n      getBundles(bundles)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBundles({ ...bundles, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: bundles.limit,\n      page: bundles.page,\n      search: bundles.search,\n      sort: `${bundles.orderBy}|${bundles.order ? 'desc' : 'asc'}`,\n      filter: bundles.filter,\n      ...args\n    }\n    getBundles(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...bundles,\n      ...args\n    }\n    setBundles(state => ({ ...state, ...args }))\n    getBundles(params)\n  }\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        handleOnSearchAllChange({ search, page: 1 })\n        setBundles(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={!!bundle.checked}\n                      indeterminate={!!bundle.indeterminate}\n                      onClick={event => handleSelectAll()}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundles.orderBy === column.sortField}\n                      direction={bundles.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: column.sortField, order: !bundles.order })}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n                    {column.match === 'date' ? (\n                      <DatePicker\n                        noMargin\n                        id={`column-filter-${column.id}`}\n                        onChange={date => {\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              setBundles(p => ({\n                                ...p,\n                                filter: { ...p.filter, [column.sortField]: { value: date.toISOString(), match: column.match } }\n                              }))\n                              handleOnSearch({\n                                filter: { ...bundles.filter, [column.sortField]: { value: date.toISOString(), match: column.match } },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                        value={null}\n                      />\n                    ) : (\n                      <TextField\n                        id={`text-field-${column.id}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              setBundles(p => ({\n                                ...p,\n                                filter: { ...p.filter, [column.sortField]: { value: search, match: column.match } }\n                              }))\n                              handleOnSearch({\n                                filter: { ...bundles.filter, [column.sortField]: { value: search, match: column.match } },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    ) }\n\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data ? bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleItemSelect({ bundle, index })}\n                      checked={item.checked || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date_received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility_name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            )) : null}\n            count={bundles.count}\n            page={bundles.page}\n            limit={bundles.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {selected.bundle_numbers.length ? selected.bundle_numbers.length : 0}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => handleOnCancel()}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={(selected.bundle_numbers.length ? selected.bundle_numbers.length : 0) < 1}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n        _id={batchEncoderId}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nconst removeDuplicates = (array) => {\n  var a = array.concat();\n  for(var i=0; i<a.length; ++i) {\n      for(var j=i+1; j<a.length; ++j) {\n          if(a[i] === a[j])\n              a.splice(j--, 1);\n      }\n  }\n\n  return a\n}\n\nexport { compare, includesAny, removeDuplicates }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1, xurpas: true }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      },\n      headers: { xurpas: true }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1, xurpas: true }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              LoadingService.loading(false)\n            }\n          }\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return <div className={classes.root}>{children}</div>\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              field={'description'}\n              loading={fetching['description']}\n              onChange={onChangeDescription}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            field={'code'}\n            loading={fetching['code']}\n            onChange={onChangeCode}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                console.log('fetched', data)\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={(value, search) =>\n                        handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                      }\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                      suggestions={suggestions}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={(value, search) =>\n                        handleOnChangeIcd10({ field: 'description', index, value, search })\n                      }\n                      onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt}\n                    field={'description'}\n                    onChange={(value, search) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        search\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt}\n                    field={'code'}\n                    onChange={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem}\n                    field={'name'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem}\n                    field={'item_code'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: SafeAccess(_value, 'id', ''),\n            doctor_name: SafeAccess(_value, 'full_name', ''),\n            specialization: _value.specialization ? SafeAccess(_value, 'specialization.main', '') + ', ' + SafeAccess(_value, 'specialization.major', '') : ''\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization}\n                  field={'description'}\n                  loading={fetching['description']}\n                  onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy, uniqBy } from 'lodash'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport { removeDuplicates } from 'Utilities/ArrayCompare'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [], reimbursement_info_analyst = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [discrepancyModal, setDiscrepancyModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [hasNotCovered, setHasNotCovered] = React.useState(false)\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersWithRole(roles[0]).then(({ data }) => {\n      const users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  const hasAmountNotCovered = ({\n    dental_procedures = [],\n    procedures = [],\n    hospital_items = [],\n    professional_fees = []\n  }) => {\n    dental_procedures = dental_procedures || []\n    procedures = procedures || []\n    hospital_items = hospital_items || []\n    professional_fees = professional_fees || []\n\n    for (const item of [...dental_procedures, ...procedures, ...hospital_items, ...professional_fees]) {\n      if (item.reason || item.amount_not_covered) return true\n    }\n    return false\n  }\n\n  // Reactive\n  React.useEffect(() => {\n    const notCovered = hasAmountNotCovered(claim)\n    console.log(notCovered)\n    setHasNotCovered(notCovered)\n  }, [claim])\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowApprovalMatrix = ({ skip = false }) => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        setApproveModal({\n          show: true,\n          message:\n            'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n        })\n      } else {\n        if (!skip) {\n          setApproveModal({ show: true, message: 'Are you sure you want to approve the claim?' })\n        } else {\n          onApprove({ goBack: false })\n        }\n      }\n    } else {\n      onApprove({ goBack: false })\n    }\n\n    return true\n  }\n\n  const handleOnApproval = () => {\n    const { diagnosis, procedure, hospital_item, professional_fee, ...others } = discrepancy\n\n    if (\n      Object.keys(diagnosis).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      Object.entries(others).find(([key, value]) => value.length > 0)\n    ) {\n      setDiscrepancyModal(true)\n      return false\n    }\n\n    handleOnShowApprovalMatrix({ skip: false })\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rmLogicReturn = infos => {\n    // no reimbursement_info\n    if (infos.length < 0) return false\n    // multiple reimbursement_info\n    if (infos.length > 1) return true\n\n    // check if reimbursement_info [0] is filler\n    if (infos.length === 1) {\n      const info = infos[0]\n      return !!(info.date_released && info.date_return)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && rmLogicReturn(reimbursement_info) && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({})}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={(disabled && permissions.letter_of_advice.enabled) || !hasNotCovered}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnApproval()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={discrepancyModal}\n            message={'There is a highlighted claim item for checking. Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setDiscrepancyModal(false)}\n            onOk={() => {\n              setDiscrepancyModal(false)\n              handleOnShowApprovalMatrix({ skip: true })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields.'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave({ goBack: 'dashboard' })\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareServices'\n\n// Component\nimport { MozillaPdfURL } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  // const { getMemberContract, getClientContract } = props\n  // const { getMemberContractUrl, getClientContractUrl } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  // const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  // React.useEffect(() => {\n  //   if (isMember) {\n  //     if (!member) return\n  //     const mct_id = member.benefit_tree.MCT.details._id\n  //     setService(getMemberContract({ mct_id }))\n  //     setFileName(`${NameFormatter(member.info).format2} Contract`)\n  //     setTitle('Member Contract')\n  //   } else {\n  //     if (!client) return\n  //     const mct_id = client.benefit_tree.MCT.details._id\n  //     setService(getClientContract({ mct_id }))\n  //     setFileName(`${client.info.brand_name} Contract`)\n  //     setTitle('Client Contract')\n  //   }\n  // }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(CustomerCareService.getMemberContractUrl({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(CustomerCareService.getClientContractUrl({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <MozillaPdfURL name={fileName} service={service} enabled />\n        </div>\n        {/* <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const {\n    claim,\n    permissions,\n    isMember,\n    member,\n    memberFetchStatus,\n    client,\n    clientFetchStatus,\n    utilizationLoa,\n    memberFetchMessage\n  } = props\n  // Services\n  const {\n    getUtilizations,\n    getPartners,\n    getDoctors,\n    getMemberContract,\n    getClientContract,\n    getMemberContractUrl,\n    getClientContractUrl\n  } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n              getMemberContractUrl={getMemberContractUrl}\n              getClientContractUrl={getClientContractUrl}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox title='Reassignee Notes' messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .greater(0)\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_id',\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_name',\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.from).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  _id: Joi.string().allow('', null),\n  complied: Joi.boolean().allow(true, false),\n  date_complied: Joi.date().allow('', null),\n  date_created: Joi.date(),\n  date_encoded: Joi.date(),\n  date_return: Joi.date().allow('', null),\n  date_released: Joi.date()\n    .label('Date Released')\n    .required()\n    .messages({ 'string.empty': `\"Date Released\" is required.` }),\n  prepared_by: Joi.string()\n    .trim()\n    .allow('', null),\n  reasons: Joi.array()\n    .items(\n      Joi.object({\n        _id: Joi.string().allow('', null),\n        error: Joi.string().allow('', null),\n        value: Joi.string()\n          .label('Reason')\n          .trim()\n          .required()\n          .messages({ 'string.empty': `\"Reason\" is required.` }),\n        other_details: Joi.string()\n          .trim()\n          .allow('', null)\n      })\n    )\n    .allow(null),\n  released_to: Joi.string()\n    .trim()\n    .label('Released To')\n    .required()\n    .messages({\n      'string.empty': `\"Released To\" is required.`\n    }),\n  remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import moment from 'moment'\n\nimport React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport NoticeValidator from './NoticeValidator'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  // Variables\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n\n  const { batch_number, claimNumber, member_last_name, member_first_name, member_middle_name } = props.claim\n\n  const { data = [] } = props\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n  const [noticeModal, setNoticeModal] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data.map(d => ({ ...d, freeze: d.complied && d.date_return })))\n  }, [data])\n\n  React.useEffect(() => {\n    if (show && reasonDropdown.length <= 0) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [show])\n\n  // API Calls\n  const insertNotice = async ({ item }) => {\n    setLoading(true)\n    const ff = await service.addReimburesmentInfo({ claim_number: claimNumber, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  const updateNotice = async ({ item, index }) => {\n    setLoading(true)\n    const ff = await service.updateReimburesmentInfo({ claim_number: claimNumber, info_id: item._id, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  // Callbacks\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        _id: i._id,\n        complied: i.complied,\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = index => {\n    const item = items[index] || {}\n    doViewClaimNotice({ document_id: item._id })\n  }\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const validateItems = ({ items = [] }) => {\n    if (!items.length) {\n      setValidateModal(true)\n    } else setRejectModal(true)\n  }\n\n  // UI Events\n  // Animations\n  const handleOnClickAdd = () => {\n    const openNotice = items.find(i => !i.complied)\n    if (openNotice) return setNoticeModal(true)\n\n    setShowAdd(true)\n    setItems(items => items.map(i => ({ ...i, show: false, showCell: false })))\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  // Data Events\n  const handleOnClickSave = ({ item }) => {\n    insertNotice({ item }).then(res => {\n      const { data } = res.data\n      setItems(items => {\n        const _items = [...items, { ...item, _id: data._id }]\n        handleOnItemSave(_items)\n        return _items\n      })\n      setShowAdd()\n    })\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    updateNotice({ item, index }).then(res => {\n      const { data } = res.data\n      items[index] = { ...data[index], freeze: data.complied && data.date_return, show: false, showCell: false }\n      setItems(items)\n      handleOnItemSave(items)\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setShowAdd()\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <TableRow key={`collapsible-${index}`}>\n                      <TableCell\n                        colSpan={headCells.length}\n                        id={`collabsible-cell-${index}`}\n                        className={classes['collapsible-cell']}\n                      >\n                        <LoadingIndicator type={'overlay'} loading={loading}>\n                          <ItemForm\n                            reasonDropdown={reasonDropdown}\n                            index={index}\n                            item={item}\n                            handleOnClickCancel={handleOnClickCancel}\n                            handleOnClickUpdate={handleOnClickUpdate}\n                            canPrintNotice={canPrintNotice}\n                            service={service}\n                            lookup={lookup}\n                            freeze={Boolean(item.freeze)}\n                            setReasonDropdown={setReasonDropdown}\n                            handleOnClickPrintNotice={handleOnClickPrintNotice}\n                          />\n                        </LoadingIndicator>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <TableRow key={`collapsible-add`}>\n                  <TableCell\n                    colSpan={headCells.length}\n                    id={`collabsible-cell-add`}\n                    className={classes['collapsible-cell']}\n                  >\n                    <LoadingIndicator type={'overlay'} loading={loading}>\n                      <ItemForm\n                        index='add'\n                        reasonDropdown={reasonDropdown}\n                        item={{}}\n                        handleOnClickCancel={handleOnClickCancel}\n                        handleOnClickSave={handleOnClickSave}\n                        canPrintNotice={canPrintNotice}\n                        service={service}\n                        lookup={lookup}\n                        setReasonDropdown={setReasonDropdown}\n                      />\n                    </LoadingIndicator>\n                  </TableCell>\n                </TableRow>\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => validateItems({ items: items })}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={noticeModal}\n        message='Max of one notice that has not been marked as complied only.'\n        okLabel='Close'\n        onOk={() => {\n          setNoticeModal(false)\n        }}\n      />\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={validateModal}\n        message='Please add at least one entry/info first before rejecting this claim.'\n        okLabel='Okay'\n        onOk={() => {\n          setValidateModal(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n\n  const { index, canPrintNotice = true, item: _item, readOnly, reasonDropdown, freeze = false } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction,\n    handleOnClickPrintNotice = defaultFunction\n  } = props\n\n  const [notice, setNotice] = React.useState({})\n\n  const [error, setError] = React.useState({ released_to: '', date_released: '' })\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setNotice({\n      complied: false,\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: null,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    setNotice(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    setNotice(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const validate = item => {\n    const { showCell, show, freeze, ...others } = item\n    const { error } = NoticeValidator(others)\n    if (error) {\n      setError(error)\n      return false\n    } else {\n      return true\n    }\n  }\n\n  return (\n    <div className={`${classes.container} ${!notice.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n      <div className={classes.cell}>\n        <Typography variant='h6' className={classes.label}>\n          {index === 'add' ? 'Add Item' : 'Update Item'}\n        </Typography>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-created-${index}`}\n              label='Date Created'\n              value={notice.date_created}\n              onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_created}\n              maxDate={new Date()}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`prepared-by-${index}`}\n              label='Prepared By'\n              value={notice.prepared_by || ''}\n              onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.prepared_by}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-encoded-${index}`}\n              label='Date Encoded'\n              value={notice.date_encoded}\n              onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n              readOnly\n              error={error.date_encoded}\n              maxDate={new Date()}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`released-to-${index}`}\n              label='Released To'\n              required\n              value={notice.released_to || ''}\n              onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.released_to}\n            />\n          </div>\n        </div>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-released-${index}`}\n              label='Date Released'\n              required\n              value={notice.date_released}\n              onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_released}\n              disableFuture\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`return-date-${index}`}\n              label='Return Date'\n              value={notice.date_return || null}\n              onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n              disabled={!notice.complied || freeze}\n              readOnly={freeze}\n              error={error.date_return}\n              minDate={moment(notice.date_released)}\n              disableFuture\n            />\n          </div>\n\n          <div className={classes['input']} style={{ width: '50%' }}>\n            <TextField\n              constainerStyle={{ width: 'unset', flex: 1 }}\n              multiline\n              rows={3}\n              id='remarks'\n              label='Remarks'\n              value={notice.remarks || ''}\n              onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.remarks}\n            />\n          </div>\n        </div>\n\n        <div className={classes['reasons-container']}>\n          <div className={classes.header}>\n            <Typography variant='subtitle2' className={classes.label}>\n              Reasons\n            </Typography>\n            <Typography variant='subtitle2' className={classes.label}>\n              Other Details\n            </Typography>\n\n            <div className={classes.delete} />\n          </div>\n\n          {/* Reasons */}\n          {(notice.reasons || []).map((reason, _index) => (\n            <div className={classes.reasons} key={`reason-${_index}`}>\n              <div className={classes['input']}>\n                <DropDown\n                  // noMargin\n                  items={reasonDropdown}\n                  id={`reason-text-${_index}`}\n                  value={reason.value || ''}\n                  onChange={event => handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })}\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  noMargin\n                  id={`reason-other-details-${_index}`}\n                  value={reason.other_details || ''}\n                  onChange={event =>\n                    handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                  }\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes.delete}>\n                {!notice.complied && (\n                  <IconButton id='delete-reason' onClick={() => handleOnClickRemoveReason(_index)}>\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {error.reasons && <span className={classes.error}>{error.reasons}</span>}\n\n          {!notice.complied && (\n            <Typography\n              variant='body2'\n              className={`${classes['add-link']} ${(notice.reasons || []).length ? '' : classes['empty-reasons']}`}\n              onClick={() => handleOnClickAddReason()}\n            >\n              + Add a reason\n            </Typography>\n          )}\n\n          {/* Reasons */}\n        </div>\n\n        <div className={classes.footer}>\n          {!readOnly && (\n            <React.Fragment>\n              <Button\n                variant='contained'\n                color='primary'\n                id='cancel'\n                className='button-negative'\n                onClick={() => handleOnClickCancel(index)}\n              >\n                Cancel\n              </Button>\n              {index === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() => validate(notice) && handleOnClickSave({ index, item: notice })}\n                    disabled={notice.complied}\n                  >\n                    Save\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() => validate(notice) && handleOnClickUpdate({ index, item: notice })}\n                    disabled={freeze}\n                  >\n                    Update\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      validate(notice) && handleOnClickUpdate({ index, item: { ...notice, complied: true } })\n                    }\n                    disabled={notice.complied}\n                  >\n                    Complied\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && canPrintNotice && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnClickPrintNotice(index)}\n                  >\n                    {notice.complied ? 'View Notice' : 'Print Notice'}\n                  </Button>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../../../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim_number } = props.match.params\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const [type, setType] = React.useState('InPatient')\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(type),\n        ..._lineItemFields\n      }\n\n      dispatch(setClaimFields({ ...initial_values }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (_claim.reimbursement_type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(_claim.reimbursement_type)\n      })\n      setType(_claim.reimbursement_type)\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString()\n          // doctor_id: '',\n          // doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_id']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility}\n                    field={'name'}\n                    loading={fetching['facility_name']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') &&\n                AdditionalFields.exist(allowedFields, 'date_to') &&\n                type === 'InPatient' && (\n                  <React.Fragment>\n                    <div className={classes['input']}>\n                      <DiscrepancyBase\n                        id='dp-admission-date-from'\n                        discrepancy={{\n                          message: 'Failed',\n                          result: discrepancy.date_from\n                        }}\n                      >\n                        <DatePicker\n                          id='admission-date-from'\n                          required\n                          label='Admission Date (From)'\n                          value={claim.date_from}\n                          onChange={date =>\n                            dispatch(\n                              setClaimBaseDetails({\n                                value: date.startOf('day').toISOString(),\n                                field: 'date_from'\n                              })\n                            )\n                          }\n                          error={error.date_from}\n                          readOnly={!permissions.base.update}\n                        />\n                      </DiscrepancyBase>\n                    </div>\n\n                    <div className={classes['input']}>\n                      <DiscrepancyBase\n                        id='admission-date-to'\n                        discrepancy={{\n                          message: 'Failed',\n                          result: discrepancy.date_to\n                        }}\n                      >\n                        <DatePicker\n                          id='admission-date-to'\n                          required\n                          label='Admission Date (To)'\n                          value={claim.date_to}\n                          onChange={date =>\n                            dispatch(\n                              setClaimBaseDetails({\n                                value: date.toISOString(),\n                                field: 'date_to'\n                              })\n                            )\n                          }\n                          error={error.date_to}\n                          readOnly={!permissions.base.update}\n                        />\n                      </DiscrepancyBase>\n                    </div>\n                  </React.Fragment>\n                )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_from}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }}\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.pro_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    label='PRO Name'\n                    required\n                    value={claim.pro_name}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.pro_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                <DiagnosisList\n                  id='diagnosis-list'\n                  permissions={permissions.diagnosis}\n                  items={claim.diagnosis}\n                  error={error.diagnosis}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n              {/* <UploadedList /> */}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={() => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: claim_number }}\n            data={claim.reimbursement_info_analysts}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            permission={permissions.reimbursement_info}\n            service={ClaimsAdjudicationServices}\n            // canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: false })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  // addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [isMember, setIsMember] = React.useState(true)\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [memberFetchMessage, setMemberFetchMessage] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n  const [grandTotal, setGrandTotal] = React.useState(0)\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n  const REPORT_RETURN_ADVICE = 5\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  // #region Fetching\n\n  // #region Claims\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      // const diagnosis = data.diagnosis || []\n      // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  // #endregion\n\n  // #region Facility Doctors PRO Anaesthesiologist\n\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    console.log({ value, field, search })\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // #endregion\n\n  // #region Integrations\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchMessage(typeof data.message === 'string' ? data.message : data.message.error.message || '')\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getMemberContractUrl = args => CustomerCareServices.getMemberContractUrl(args)\n\n  const getClientContractUrl = args => CustomerCareServices.getClientContractUrl(args)\n\n  // #endregion\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  // #region Messages\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  // #endregion\n\n  // #region Reports\n\n  const getReport = (mode, params) => {\n    LoadingService.loading(true)\n    // ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n    // const hasAmount = value.data.data.has_amount_concerns\n    let pdf = {}\n    switch (mode) {\n      case REPORT_ANALYSIS_SHEET:\n        pdf = {\n          name: 'Analysis Sheet',\n          fileName: 'analysis_sheet',\n          service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n        }\n        break\n\n      case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Reports',\n          fileName: 'reports',\n          service: ApiService.getReports({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Letter of Advice',\n          fileName: 'letter_of_advice',\n          service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n        }\n        break\n\n      case NOTICE:\n        pdf = {\n          name: 'Claims Notice',\n          fileName: 'claim_notice',\n          service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_RETURN_ADVICE:\n        pdf = {\n          name: 'Return Advice',\n          fileName: 'return_advice',\n          service: ApiService.getReturnAdvice({ claim_number: claimNumber, sub_document_id: params.document_id })\n        }\n    }\n\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n    // })\n  }\n\n  // #endregion\n\n  // #region Lookups\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason_charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getSubTypes = () => {\n    dispatch(initDropDowns(['sub_types']))\n    dispatch(initDropDowns(['sub_sub_types']))\n    Promise.all([\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  // #endregion\n\n  // #endregion\n\n  // #region Events\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          if (claim_type === 'Reimbursement') getReport(NOTICE)\n          else getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    getReport(REPORT_RETURN_ADVICE, { document_id })\n  }\n\n  const handleOnSave = async ({ goBack = 'dashboard' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    LoadingService.loading(true)\n    const res = await ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n    return res\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number = '', batch_number = '', pr_officer = '' } = props.match.params\n      props.history.push(`/payment-request/${pr_officer}/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // #endregion\n\n  // #region  Validation\n  const doValidateAll = ({ validator, field = undefined, type = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, type })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, type }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let validate\n    if (type) validate = validator(Object.keys(field || claim))({ ...data }, true)\n    else validate = validator(Object.keys(field || claim))({ ...data })\n\n    const { error = {} } = validate\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n  // #endregion\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          memberFetchMessage={memberFetchMessage}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getMemberContractUrl={getMemberContractUrl}\n          getClientContractUrl={getClientContractUrl}\n          getReason={getReason}\n          getRooms={getRooms}\n          getSubTypes={getSubTypes}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewReturnAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setBatches({ data: openBatches, count: openBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Typography\n                      id={`encode-batch-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnEncode(item.batch_number)}\n                    >\n                      Encode\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const myBatches = batchResponse.data.data.results\n        const myBatchCount = batchCountResponse.data.data\n        setBatches({ data: myBatches, count: myBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const completedBatches = batchResponse.data.data.results\n        const completedBatchCount = batchCountResponse.data.data\n        setBatches({ data: completedBatches, count: completedBatchCount })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true,\n  processor_id = ''\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n                id={`${row.claim_number}-${index}`}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${SafeAccess(row, 'member.first_name', '')} ${SafeAccess(row, 'member.last_name', '')}`}\n                </TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${processor_id}/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      }).finally(() => LoadingService.loading(false))\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    }).catch(() => LoadingService.loading(false))\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button disabled={claims.length <= 0} variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    disabled={claims.length <= 0}\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // const doctor_id = loa.partner_doctor_id || ''\n  // const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  //* https://gitlab.com/VeridataTSA/hims-app/-/issues/8177\n  // dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  // dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestion, setSuggestion } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              console.log(error)\n              LoadingService.loading(false)\n            }\n          }\n\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestion({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestion({\n          field: 'contract',\n          suggestion: [{ from, to }]\n          // suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={onChangeDescription}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              field={'code'}\n              loading={fetching['code']}\n              onChange={onChangeCode}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestion,\n  setSuggestion,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={(value, search) =>\n                  handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                }\n                onChangeDescription={(value, search) =>\n                  handleOnChangeIcd10({ field: 'description', index, value, search })\n                }\n                onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n                fetching={fetching[index]}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions}\n              field={'description'}\n              onChange={(value, search) => onChangeDescription(value, search)}\n              loading={fetching['description']}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions}\n            field={'code'}\n            onChange={(value, search) => onChangeCode(value, search)}\n            loading={fetching['code']}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions}\n              field={'name'}\n              onChange={onChangeName}\n              loading={fetching.name}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            field={'item_code'}\n            onChange={onChangeCode}\n            loading={fetching.item_code}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n              onChangeCode={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n              fetching={fetching}\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    doctor_id: false,\n    doctor_name: false,\n    description: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: SafeAccess(_value, 'id', ''),\n            doctor_name: SafeAccess(_value, 'full_name', ''),\n            specialization: _value.specialization ? SafeAccess(_value, 'specialization.main', '') + ', ' + SafeAccess(_value, 'specialization.major', '') : ''\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestion, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestion({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestion } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestion } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  // Variables\n  const { isAdd = false, setShowReimbursementModal } = props\n  // Events\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, hasClaimChanges } = props\n\n  const [saveAlert, setSaveAlert] = React.useState({ mode: 'list', show: false, next: () => {} })\n\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const doSaveMiddleware = ({ mode, next = () => {} }) => {\n    if (!hasClaimChanges()) {\n      setSaveAlert(state => ({ ...state, mode, next, show: true }))\n    } else {\n      next()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='return'\n          className='button-positive'\n          onClick={() =>\n            !doValidateMiddleware() && doSaveMiddleware({ mode: 'stay', next: () => setShowReimbursementModal(true) })\n          }\n          disabled={isAdd}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('list')}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-and-close'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('dashboard')}\n      >\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={saveAlert.show}\n        message='Encoded claim details are not yet saved. Do you want to save the claim details first?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveAlert(state => ({ ...state, show: false }))}\n        onOk={async () => {\n          setSaveAlert(state => ({ ...state, show: false }))\n          const res = await handleOnSave(saveAlert.mode)\n          if (res) saveAlert.next()\n        }}\n      />\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n\n      <Alert\n        open={validateModal}\n        message='Please input all mandatory fields.'\n        okLabel='Ok'\n        onOk={() => {\n          setValidateModal(false)\n        }}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .greater(0)\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const { doValidateAll, onSave, doValidateProcedure, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n// import DentalProcedureFormValidator from './DentalProcedureFormValidator'\n// import DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setDentalProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setDentalProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>APE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>ECU Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault({ doctor: false })\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              // reqApprovalCode\n              // reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\nconst getUrl = () => BaseUrlFetcher.getClaimsBaseUrl()\n// const UPLOADS = 'uploads/test'\n// const mock_data = [\n//   { fileName: 'Sample Contract', fileType: 'PDF', data: `${URL}/${UPLOADS}/Sample Contract.pdf` },\n//   { fileName: 'PDF', fileType: 'PDF', data: `${URL}/${UPLOADS}/pdf.pdf` },\n//   { fileName: 'PNG', fileType: 'PNG', data: `${URL}/${UPLOADS}/png.png` },\n//   { fileName: 'JPG', fileType: 'JPG', data: `${URL}/${UPLOADS}/jpg.jpg` },\n//   { fileName: 'DOC', fileType: 'DOC', data: `${URL}/${UPLOADS}/doc.doc` },\n//   { fileName: 'DOCX', fileType: 'DOCX', data: `${URL}/${UPLOADS}/docx.docx` },\n//   { fileName: 'XLSX', fileType: 'XLSX', data: `${URL}/${UPLOADS}/xlsx.xlsx` },\n//   { fileName: 'MP4', fileType: 'MP4', data: `${URL}/${UPLOADS}/mp4.mp4` }\n// ]\n\nexport default function UploadedList (props) {\n  const { onItemClick = () => {}, field = {}, isAdd = false } = props\n  const [uploads, setUploads] = React.useState([])\n\n  React.useEffect(() => {\n    const { index, value } = field\n    if (!isAdd) {\n      ClaimsServices.getUploads({ where: { [index]: value } }).then(res => {\n        const { data } = res.data\n        const _data = data.map(i => ({\n          fileName: i.file_name,\n          fileType: i.file_type,\n          data: getUrl() + `/uploads/${i.path}`\n          // data: `${URL}/uploads/${i.path}?token=${localStorage.getItem('token') || ''}`\n        }))\n        setUploads(_data)\n      })\n    }\n  }, [])\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']}>\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {uploads.length ? uploads.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() =>\n                      onItemClick({\n                        title: item.fileName,\n                        fileName: item.fileName,\n                        fileType: item.fileType.toLowerCase(),\n                        data: item.data\n                      })\n                    }\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            )) : (\n              <TableRow>\n                <TableCell className={classes.handling} colSpan={3}>\n                No files found\n                </TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// https://github.com/plangrid/react-file-viewer\nimport ReactFileViewer from 'react-file-viewer'\n\nimport { fromUrl } from 'Services/Download'\n\n// Styles\nimport classes from './FileViewer.module.scss'\n\nexport default function FileViewer (props) {\n  // Variables\n  const { show = false, title = '', fileName = '', fileType = '', url = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose = () => {} } = props\n  // Local Variables\n\n  const handleDownload = () => {\n    fromUrl({ fileName: fileName, content: url, extension: fileType })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      fullWidth\n      maxWidth='lg'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle className={classes['header-container']} disableTypography>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleDownload}>\n            <CloudDownloadIcon />\n          </IconButton>\n\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <ReactFileViewer\n          fileName={fileName}\n          fileType={fileType}\n          filePath={url}\n          errorComponent={props => <Typography> Unsupported File Type</Typography>}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from '../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\nimport FileViewer from 'SharedComponents/FileViewer/FileViewer'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport lodash from 'lodash'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nlet prevClaim = null\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  //  Variables\n  const { _claimNumber } = props.match.params\n  const { claim, initDefault, fetching, isAdd } = props\n  // Events\n  const {\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    doViewClaimNotice = () => {}\n  } = props\n  // Services\n  const { apiService } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  const [viewFile, setViewFile] = React.useState({\n    show: false,\n    title: 'File Preview',\n    fileName: '',\n    fileType: '',\n    data: ''\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0] ? data[0].rooms : []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        prevClaim = _claim\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    } else initDefault({ doctor: false })\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  React.useEffect(() => {\n    if (!type) return\n    switch (type) {\n      case 'InPatient':\n        initDefault({ doctor: false })\n        break\n      default:\n        initDefault()\n    }\n\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  const hasClaimChanges = () => {\n    return lodash.isEqual(prevClaim, claim)\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString()\n          // doctor_id: '',\n          // doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'id'}\n                    loading={fetching['doctor_id']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'full_name'}\n                    loading={fetching['doctor_name']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    disabled={disableControls}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_name']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n              <UploadedList\n                field={{\n                  index: 'tags.properties.claim_number',\n                  value: props.match.params ? props.match.params._claimNumber : ''\n                }}\n                isAdd={props.isAdd}\n                onItemClick={data => setViewFile(state => ({ ...state, ...data, show: true }))}\n              />\n              <FileViewer\n                url={viewFile.data}\n                show={viewFile.show}\n                title={viewFile.title}\n                fileName={viewFile.fileName}\n                fileType={viewFile.fileType}\n                onClose={() => setViewFile(state => ({ ...state, show: false }))}\n              />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            isAdd={isAdd}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n            hasClaimChanges={hasClaimChanges}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: _claimNumber, batch_number: batchNumber }}\n            data={claim.reimbursement_info}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            doViewClaimNotice={doViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  // addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro,\n  setDropDown\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService, isAdd = false } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  // Line Item Form Store\n  const _dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const _procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const _hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const _professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        // const { diagnosis = [] } = data\n        // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n        callback(data)\n      })\n  }\n\n  //* need to refector if to add addt'l default\n  //* this only support facility\n  const initDefault = args => {\n    const { facility = true, doctor = true } = args || {}\n    apiService.getBatch({ batch_number: props.match.params._batchNumber }).then(res => {\n      const { data } = res.data\n      if (facility) {\n        dispatch(setClaimFacility({ facility_id: data.facility.id, facility_name: data.facility.name }))\n      }\n      if (doctor) {\n        dispatch(setClaimDoctor({ doctor_id: data.doctor.id, doctor_name: data.doctor.name }))\n      }\n\n      apiService\n        .lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        })\n        .then(response => {\n          const [f] = response.data.data\n          const rooms = (f.rooms || []).map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate || 0\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n    })\n    Promise.all([\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Return Advice\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Return Advice',\n      fileName: 'return_advice',\n      service: apiService.getReturnAdvice({ claim_number: _claimNumber, sub_document_id: document_id })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (_procedure.show || _dentalProcedure.show) {\n      const error = flag\n        ? doValidateDentalProcedure({ data: _dentalProcedure.details, index: _dentalProcedure.index, flag })\n        : doValidateProcedure({ data: _procedure.details, index: _procedure.index })\n      if (Object.keys(error).length > 0) {\n        procedure = { ...error }\n        if (flag) {\n          dispatch(\n            setDentalProcedure({\n              show: true,\n              mode: 'add',\n              index: _dentalProcedure.index,\n              details: _dentalProcedure.details\n            })\n          )\n        } else {\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'add',\n              index: _procedure.index,\n              details: _procedure.details\n            })\n          )\n        }\n      }\n    } else if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = flag\n          ? doValidateDentalProcedure({ data: value, index, flag })\n          : doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          const params = { show: true, mode: 'edit', index, details: value }\n          flag ? dispatch(setDentalProcedure(params)) : dispatch(setProcedure(params))\n          break\n        }\n      }\n    }\n\n    if (_hospitalItem.show) {\n      const error = doValidateHospitalItem({ data: _hospitalItem.details, index: _hospitalItem.index, flag })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { ...error }\n        const params = { show: true, mode: 'add', index: _hospitalItem.index, details: _hospitalItem.details }\n        dispatch(setHospitalItem(params))\n      }\n    } else if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    if (_professionalFee.show) {\n      const error = doValidateProfessionalFee({ data: _professionalFee.details, index: _professionalFee.index, flag })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { ...error }\n        const params = { show: true, mode: 'add', index: _professionalFee.index, details: _professionalFee.details }\n        dispatch(setProfessionalFee(params))\n      }\n    } else if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code ? `${data.code}` : '',\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, show: true, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, override = {}, goBack = 'list' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return false\n    }\n\n    let data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n    data = { ...data, ...override }\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    let callback = null\n\n    if (isAdd) {\n      callback = apiService.addClaim({ batch_number: _batchNumber, data })\n    } else {\n      callback = apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data })\n    }\n\n    LoadingService.loading(true)\n\n    const res = await callback.then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'list':\n          props.history.push(`/batches/${_batchNumber}`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n\n    return res\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          isAdd={isAdd}\n          claim={claim}\n          fetching={fetching}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewReturnAdvice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          initDefault={initDefault}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    setFetching(true)\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category}`), category })\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/assigned/${item.id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'received_date', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'due_date', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'due_date',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        // console.log({ batch, results })\n        setBatches(state => ({ ...state, count, limit, page }))\n        const _data = []\n\n        //* Trial\n        for (const result of results) {\n          const selectedBatchnumbers = selected.batch_numbers\n          if (selectedBatchnumbers.includes(result.batch_number)) _data.push({ ...result, checked: true })\n          else _data.push({ ...result, checked: false })\n        }\n        // const data = results.map(batch => ({ ...batch, checked: false }))\n\n        const checkedCount = _data.filter(i => i.checked).length\n        const resultsCount = results.length\n\n        setBatch({\n          data: _data,\n          loading: false,\n          indeterminate: checkedCount > 0 && checkedCount < resultsCount ? true : undefined,\n          checked: checkedCount === resultsCount ? true : undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    const unchecked = []\n    let _batches = data || batch\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        } else unchecked.push(b.batch_number)\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    //* Trial\n    const uniqueSelectedBatchNumber = [...new Set([ ...selected.batch_numbers, ...batchNumbers ])]\n    const _data = uniqueSelectedBatchNumber.filter(i => !unchecked.includes(i))\n\n    // setSelected(state => ({ batch_numbers: batchNumbers }))\n    setSelected(state => ({ batch_numbers: _data }))\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='primary'\n                disabled={!batch.data.length}\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date => {\n                    clearTimeout(debounce)\n                    setDebounce(\n                      setTimeout(() => {\n                        setBatches(p => ({\n                          ...p,\n                          filter: { ...p.filter, [headCell.sortField]: { value: date.toISOString(), match: headCell.match } }\n                        }))\n                        handleOnSearch({\n                          filter: { ...batches.filter, [headCell.sortField]: { value: date.toISOString(), match: headCell.match } },\n                          page: 1\n                        })\n                      }, 500)\n                    )\n                  }}\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  id={`column-filter-${headCell.id}`}\n                  // className={`${classes.search}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event => {\n                    const search = event.target.value\n                    clearTimeout(debounce)\n                    setDebounce(\n                      setTimeout(() => {\n                        setBatches(p => ({\n                          ...p,\n                          filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } }\n                        }))\n                        handleOnSearch({\n                          filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } },\n                          page: 1\n                        })\n                      }, 500)\n                    )\n                  }}\n                />\n              ) }\n\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='primary'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.received_date)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.due_date)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='fa-claim-no'>Claim No.</TableCell>\n                <TableCell id='fa-due-date'>Due Date</TableCell>\n                <TableCell id='fa-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.open.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Typography\n                      id={`analyze-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnAnalyze(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='mc-claim-no'>Claim No.</TableCell>\n                <TableCell id='mc-due-date'>Due Date</TableCell>\n                <TableCell id='mc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.my.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   handleClickSubmitted(event, claim)\n  // }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='sc-claim-no'>Claim No.</TableCell>\n                <TableCell id='sc-due-date'>Due Date</TableCell>\n                <TableCell id='sc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.submitted.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      id={`print${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={e => handleClickSubmitted(e, item)}\n                    >\n                      <Print />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <IconButton\n                  id={`print${index}`}\n                  aria-label='more'\n                  aria-controls='long-menu'\n                  aria-haspopup='true'\n                  onClick={e => handleClickSubmitted(e, item)}\n                >\n                  <Print />\n                </IconButton>\n              </TableCell>\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   props.history.push(`/claims/${claim_number}/analyze`)\n  // }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='re-claim-no'>Claim No.</TableCell>\n                <TableCell id='re-due-date'>Due Date</TableCell>\n                <TableCell id='re-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.escalated.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`re-update-claim-${index}`}>\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                  </Typography>\n                </Link>\n                {/* } */}\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetching}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from '../instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  {\n    id: 'pending-batch-no',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Batch No.',\n    align: 'left',\n    data: data => data.batch_number\n  },\n  {\n    id: 'pending-claim-type',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Claim Type',\n    align: 'center',\n    data: data => data.type\n  },\n  {\n    id: 'pending-total-rcs',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Total No. of RCS',\n    align: 'center',\n    data: data => `${data.claims.length} / ${data.total_rcs}`\n  },\n  {\n    id: 'pending-billed-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Billed Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.total_amount)\n  },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.discount_amount)\n  },\n  {\n    id: 'pending-discount-rate',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Discount Rate',\n    align: 'right',\n    data: data => `${data.discount_rate}%`\n  },\n  {\n    id: 'pending-pr-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'PR Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.pr_amount)\n  }\n]\nconst submittedHeadCells = pendingHeadCells.map(c => ({ ...c, id: c.id.replace('pending-') }))\n// TODO remove if new is same as this\n// const submittedHeadCells = [\n//   { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n//   { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n//   { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n//   { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n//   {\n//     id: 'submitted-discount-amount',\n//     numeric: true,\n//     center: false,\n//     disablePadding: false,\n//     label: 'Hospital Discount Amount'\n//   }\n// ]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [prRemarks, setPrRemarks] = React.useState('')\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0),\n      discount_rate: SafeAccess(i.claims[0], 'discount_rate', 0),\n      pr_amount: i.claims.reduce((acc, claim) => acc + claim.pr_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n    const discount_amount = data.reduce((acc, batch) => acc + batch.discount_amount, 0)\n    const pr_amount = data.reduce((acc, batch) => acc + batch.pr_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          discount_amount,\n          pr_amount\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n\n      async function submitBatches () {\n        for (let select of selected) {\n          const claims = select.claims.map(claim => {\n            return claim.claim_number\n          })\n\n          let submitPromise = new Promise(function (resolve, reject) {\n            PaymentRequestServices.submit({ bundle_number, data: { claims, remarks: prRemarks } })\n              .then(({ data: res }) => {\n                const data = batches.pending.data.filter((i, index) => {\n                  let should_include = true\n                  for (let s of selected) {\n                    if (s.index === index) {\n                      should_include = false\n                      break\n                    }\n                  }\n                  if (should_include) return i\n                })\n                resetBatches({ type: 'pending', data, bundle })\n                resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n                setPrRemarks('')\n                PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n                  const { data } = res\n                  setBundle(data)\n                  getBatches({ bundle_number, bundle: data })\n                })\n                LoadingService.loading(false)\n                resolve()\n              })\n              .catch(err => {\n                reject(err)\n              })\n          })\n          await submitPromise\n        }\n      }\n      submitBatches()\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.discount_amount\n                )}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => (\n                  <TableRow\n                    onClick={event => handleClick({ index, batches: 'pending' })}\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                    </TableCell>\n                    {pendingHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                  // return (\n                  //   <TableRow\n                  //     onClick={event => handleClick({ index, batches: 'pending' })}\n                  //     role='checkbox'\n                  //     tabIndex={-1}\n                  //     key={`${batch.batch_number}-${index}`}\n                  //   >\n                  //     <TableCell padding='checkbox'>\n                  //       <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                  //     </TableCell>\n                  //     <TableCell align='left' id={`pending-batch-number-${index}`}>\n                  //       {batch.batch_number}\n                  //     </TableCell>\n                  //     <TableCell align='center' id={`pending-claim-type-${index}`}>\n                  //       {batch.type}\n                  //     </TableCell>\n                  //     <TableCell\n                  //       align='center'\n                  //       id={`pending-total-rcs-${index}`}\n                  //     >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                  //     <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.total_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.discount_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-rate-${index}`}>\n                  //       {`${batch.discount_rate}%`}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-pr-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.pr_amount)}\n                  //     </TableCell>\n                  //   </TableRow>\n                  // ) */}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField\n                  multiline\n                  rows={8}\n                  id='pr-remarks'\n                  value={prRemarks}\n                  readOnly={false}\n                  onChange={event => setPrRemarks(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className={classes.buttonWrapper}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={handleOnCancel}\n                id='cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={handleOnSubmit}\n                id='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => (\n                  <TableRow\n                    // hover\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    {submittedHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })} */}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField multiline rows={8} id='saved-pr-remarks' value={bundle.remarks} disabled />\n              </div>\n            </div>\n            <div />\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    let params = { category: 'submitted' }\n\n    if (supervisor || isManager) params = { ...params, pr_officer: SafeAccess(props.match, 'params.pr_officer', '') }\n    // * Submitted Payment request\n\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n\n  const processor_id = supervisor || isManager\n    ? SafeAccess(props.match, 'params.pr_officer', '') : SafeAccess(bundle, 'approved_by_uid', '')\n\n  return (\n    <div className={classes.root}>\n      {bundle && processor_id ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${processor_id}/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${processor_id}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()])\n      .then(values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'PR Processor'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest({ limit: 10, sort: '' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='pr-processor'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='PR Processor'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>PR Processor</TableCell>\n                <TableCell>Total Bundle/SOA</TableCell>\n                <TableCell>Total Batches</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                  <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-requests/${item.id}/list`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from '../instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${processor_id}/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { Link } from 'react-router-dom'\n\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n// import ViewList from '../ViewList/ViewList'\nimport ViewList2 from '../../ViewList2/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList2\n        id='for-review'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        // fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n\n      {/* <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      /> */}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog, dropDownUsers } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0,\n    _id = ''\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                disabled={claimsCount < 1}\n                onClick={() => {\n                  initDropdownUsers({ roles: 'CLAIMS_ANALYST' })\n                  setDialog(state => ({ ...state, assign: true }))\n                }}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} dropDownUsers={dropDownUsers} />\n    </div>\n  )\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET'\n      // responseType: 'blob',\n      // headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getAnalystClaims (params) {\n    return axios({\n      url: '/claims/assigned',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/claims/analyst/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'received_date', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'due_date', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ]\n\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [id, setId] = React.useState(null)\n  const [debounce, setDebounce] = React.useState(null)\n  const [selected, setSelected] = React.useState({ claim_numbers: [] })\n\n  const [claims, setClaims] = React.useState({\n    show: false,\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    // data: [],\n    orderBy: 'due_date',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claim, setClaim] = React.useState({})\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'analystAssigned'])\n    LoadingService.loading(true)\n\n    const _id = props.match.params.user_id\n    getClaims(claims)\n    setId(_id)\n  }, [props.match.params.user_id])\n\n  const getClaims = params => {\n    ClaimsVerifierSupervisorServices.getAnalystClaims({\n      category: params.category,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      id: props.match.params.user_id,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setClaims(state => ({ ...state, count, limit, page }))\n        const _data = []\n\n        //* Trial\n        for (const result of results) {\n          const selectedClaimnumbers = selected.claim_numbers\n          if (selectedClaimnumbers.includes(result.claim_number)) _data.push({ ...result, checked: true })\n          else _data.push({ ...result, checked: false })\n        }\n        // const data = results.map(batch => ({ ...claims, checked: false }))\n\n        const checkedCount = _data.filter(i => i.checked).length\n        const resultsCount = results.length\n\n        setClaim({\n          data: _data,\n          loading: false,\n          indeterminate: checkedCount > 0 && checkedCount < resultsCount ? true : undefined,\n          checked: checkedCount === resultsCount ? true : undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _claims = claim\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.checked = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaim(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const handleItemSelect = ({ claim, index }) => {\n    const _claims = {\n      ...claim,\n      data: claim.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setClaim(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    const unchecked = []\n    let _claims = data || claim\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let b of _claims.data) {\n        if (b.checked) {\n          selected_count++\n          claimNumbers.push(b.claim_number)\n        } else unchecked.push(b.claim_number)\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaim(_claims)\n\n    //* Trial\n    const uniqueSelectedClaimNumber = [...new Set([ ...selected.claim_numbers, ...claimNumbers ])]\n    const _data = uniqueSelectedClaimNumber.filter(i => !unchecked.includes(i))\n\n    // setSelected(state => ({ batch_numbers: batchNumbers }))\n    setSelected(state => ({ claim_numbers: _data }))\n  }\n\n  const handleOnCancel = () => {\n    let _data = claim.data.map(i => ({ ...i, checked: false }))\n\n    setClaim(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ claim_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    ClaimsVerifierSupervisorServices.reassign({\n      selected: selected.claim_numbers,\n      id: user_id,\n      notes: message,\n      prev_user: id\n    }).then(() => {\n      setSelected({ claim_numbers: [] })\n      getClaims(claims)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getClaims({ ...claims, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: claims.limit,\n      page: claims.page,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'desc' : 'asc'}`,\n      filter: claims.filter,\n      ...args\n    }\n    getClaims(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n    setClaims(state => ({ ...state, ...args }))\n    getClaims(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='primary'\n                disabled={!claim.data.length}\n                indeterminate={!!claim.indeterminate}\n                checked={!!claim.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              { headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date => {\n                    clearTimeout(debounce)\n                    setDebounce(\n                      setTimeout(() => {\n                        setClaims(p => ({\n                          ...p,\n                          filter: { ...p.filter, [headCell.sortField]: { value: date.toISOString(), match: headCell.match } }\n                        }))\n                        handleOnSearch({\n                          filter: { ...claims.filter, [headCell.sortField]: { value: date.toISOString(), match: headCell.match } },\n                          page: 1\n                        })\n                      }, 500)\n                    )\n                  }}\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event => {\n                    const search = event.target.value\n                    clearTimeout(debounce)\n                    setDebounce(\n                      setTimeout(() => {\n                        setClaims(p => ({\n                          ...p,\n                          filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } }\n                        }))\n                        handleOnSearch({\n                          filter: { ...claims.filter, [headCell.sortField]: { value: search, match: headCell.match } },\n                          page: 1\n                        })\n                      }, 500)\n                    )\n                  }}\n                />\n              )}\n\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claim.data ? claim.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='primary' onClick={event => handleItemSelect({ index, claim })} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.received_date)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.due_date)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      )) : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setClaims(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            claimsCount={selected.claim_numbers.length ? selected.claim_numbers.length : 0}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmitReassign}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    rejected: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED', addtl_cond: { 'latest.__type': { $ne: 'Reimbursement' } } })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, rejected: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.rejected['count'], id: 'rejected-claim-count' }}\n        sizes={sizes}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.rejected.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const getSubordinates = params => {\n    setFetching(true)\n    setFetchingViewList(true)\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n      .finally(value => {\n        setFetching(false)\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={sizes}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {verifiers.data &&\n                verifiers.data.map((item, index) => (\n                  <TableRow key={`verifier-list-item-${index}`}>\n                    <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                    <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                    <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                    <TableCell id={`cv-view-user-${index}`}>\n                      <Typography\n                        id={`view-user-${index}`}\n                        variant='caption'\n                        className={`text-link underline`}\n                        onClick={handleOnReviewUser(item.id)}\n                      >\n                        View\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter,\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={sizes}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const claims = claimResponse.data.data.results\n        const claimsCount = claimCountResponse.data.data\n        setClaims({ data: claims, count: claimsCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetching(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={sizes}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`fa-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`fa-view-claim-${index}`}>\n                    <Link to={`/claims/for-approval/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={sizes}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`mc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  {/* added cond on client to support old data */}\n                  <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                  <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                  <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`mc-view-claim-${index}`}>\n                    <Link to={`/claims/review/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const { results } = claimResponse.data.data\n        setClaims(prevState => ({\n          ...prevState,\n          data: results,\n          count: claimCountResponse.data.data\n        }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({ category: viewList.category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={sizes}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`rmc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={`rmc-claim-list-${index}`}>\n                  <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                  <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`rmc-view-claim-${index}`}>\n                    <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  analystAssigned: {\n    text: 'For Adjudication'\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (args) {\n    const { bundle_number, batch_number, params } = args\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n\n    ApiService.getBatch({ bundle_number, batch_number }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n    })\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getClaimsAndCount({ batch_number, bundle_number })\n    })\n  }\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, bundle_number }) => {\n    ApiService.getApprovedClaims({\n      bundle_number,\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaim(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n        LoadingService.loading(false)\n      })\n  }\n\n  React.useEffect(() => {\n    const { batch_number, bundle_number } = props.match.params\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const processor_id = SafeAccess(props.match, 'params.pr_officer', '')\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} inputChange={handleSearchChange} />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n            processor_id={processor_id}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${processor_id}/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// timefield lib\nimport TimeField from 'react-advanced-timefield'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/Claims/ClaimsMaintainerServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Constants\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' },\n  handling_timi_kpi: { on: 'handling-time-kpi', field: 'handling-time-kpi' }\n}\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {\n    description: { value: '' },\n    status: { value: '' },\n    section: { value: '' },\n    claim_type: { value: '' },\n    handling_time_formatted: { value: '' }\n  }\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false,\n  claim_type: '',\n  section: '',\n  handling_time: ''\n}\n\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nlet kpi_columns = [\n  { name: 'Section', sortField: 'section', id: 'section', match: 'any' },\n  { name: 'Claim Type', sortField: 'claim_type', id: 'description', match: 'any' },\n  { name: 'Handling Time', sortField: 'handling_time_formatted', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [section, setSection] = React.useState([])\n\n  const [index, setindex] = React.useState()\n\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n    ClaimsServices.lookupsAll({ category: 'section' }).then(res => {\n      const { data = [] } = res.data\n      const _data = data.map(c => ({ text: c.name, value: c.name }))\n      setSection(_data)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: { ...data, field: lookup.field } }).then(\n      ({ data: res }) => {\n        const { results, count } = res.data\n        setData(state => ({ ...state, data: results, count }))\n        setFetching(false)\n      }\n    )\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return lookup && lookup.field && args === lookup.field ? 'active' : ''\n  }\n\n  const onClickHospitalItem = () => {\n    setFetching(true)\n    setLookup(lookups.hospital_items)\n    setData({\n      ...data,\n      header: 'Hospital Item List',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n  const onClickNotCoveredReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_covered)\n    setData({\n      ...data,\n      header: 'Not Covered Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickChargingReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_charging)\n    setData({\n      ...data,\n      header: 'Reasons For Charging Member',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSource = () => {\n    setFetching(true)\n    setLookup(lookups.claims_source)\n    setData({\n      ...data,\n      header: 'Claim Source',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickReturnReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_return)\n    setData({\n      ...data,\n      header: 'Reimbursement Return Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickRejectReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_reject)\n    setData({\n      ...data,\n      header: 'Reimbursement Reject Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickHandlingTimeKpi = () => {\n    setFetching(true)\n    setLookup(lookups.handling_timi_kpi)\n    setData({\n      ...data,\n      count: 0,\n      header: 'Handling Time KPI',\n      filter: {\n        ...data.filter,\n        section: { value: '' },\n        claim_type: { value: '' },\n        handling_time: { value: '' },\n        status: { value: '' }\n      }\n    })\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const validate = () => {\n    if (lookup.field !== 'handling-time-kpi') return !item.description.trim()\n    else return !item.handling_time || item.handling_time === '00:00:00' || !item.section || !item.claim_type\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    let _search = {}\n\n    if (!(lookup.field === 'handling-time-kpi')) {\n      _search = {\n        description: item.description,\n        code: item.code\n      }\n    } else {\n      if (showAddItem.mode === 'add') {\n        _search = {\n          section: item.section,\n          claim_type: item.claim_type\n        }\n      } else {\n        const { section, claim_type, status, handling_time } = data.data[index]\n\n        switch (true) {\n          case section === item.section && claim_type === item.claim_type && status !== item.status:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.status\n            }\n            break\n          case section === item.section && claim_type === item.claim_type && handling_time !== item.handling_time:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.handling_time\n            }\n            break\n          default:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type\n            }\n        }\n      }\n    }\n\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: _search,\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (validate()) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Description details is empty. Please input the description details.',\n        onOk: handleOnOk,\n        okLabel: 'Okay',\n        cancelLabel: ''\n      }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state => ({\n            ...state,\n            open: true,\n            message: 'Description details already exists. Please change the description details encoded.',\n            onOk: handleOnOk,\n            okLabel: 'Okay',\n            cancelLabel: ''\n          }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(\n              res => {\n                setItem(initialItem)\n                setLookup(false)\n                setLookup(initialLookup)\n                setShowAddItem({ ...showAddItem, show: false })\n                LoadingService.loading(false)\n              }\n            )\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({\n              on: lookup.on,\n              data: item,\n              code: item.code,\n              params: { field: lookup.field }\n            }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({ ...showAddItem, show: false })\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = (field = '', item) => {\n    if (field === 'kpi') {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        section: item.section,\n        claim_type: item.claim_type,\n        handling_time: item.handling_time,\n        code: item._id,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    } else {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        description: item.description,\n        code: item.code,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    }\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description || item.section || item.claim_type || item.handling_time) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Are you sure you want to discard your changes?',\n        onOk: () => {\n          setShowAlert(alert => ({ ...alert, open: false }))\n          setShowAddItem(show => ({ ...show, show: false }))\n          setItem(item => ({ ...item, description: '', section: '', claim_type: '', handling_time: '' }))\n        },\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }))\n    } else {\n      setShowAddItem({ ...showAddItem, show: false })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='hospital-item-list'\n          className={`button-positive ${classes[isActive('hospital-item-list')]}`}\n          onClick={onClickHospitalItem}\n        >\n          Hospital Item List\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='not-covered-reason'\n          className={`button-positive ${classes[isActive('covered-reason')]}`}\n          onClick={onClickNotCoveredReason}\n        >\n          Not Covered Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reason-for-charging'\n          className={`button-positive ${classes[isActive('charging-reason')]}`}\n          onClick={onClickChargingReason}\n        >\n          Reason for Charging Member\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('claims-source')]}`}\n          onClick={onClickClaimSource}\n        >\n          Claim Source\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('handling-time-kpi')]}`}\n          onClick={onClickHandlingTimeKpi}\n        >\n          Handling Time KPI\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-return-reason'\n          className={`button-positive ${classes[isActive('return-reason')]}`}\n          onClick={onClickReturnReason}\n        >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-reject-reason'\n          className={`button-positive ${classes[isActive('reject-reason')]}`}\n          onClick={onClickRejectReason}\n        >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-type')]}`}\n          onClick={onClickClaimSubType}\n        >\n          Claim Sub-Type\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`}\n          onClick={onClickClaimSubSubType}\n        >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button\n            disabled={showAddItem.show}\n            variant='contained'\n            color='primary'\n            id='add-item'\n            className='button-positive'\n            onClick={() => setShowAddItem({ ...showAddItem, show: true, mode: 'add' })}\n          >\n            + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && (\n        <div className={classes['add-item-root']}>\n          {!(lookup.field === 'handling-time-kpi') ? (\n            <div className={classes.wrapper}>\n              <span className={classes['header-text']}>Description:</span>\n              <div className={classes['text-wrapper']}>\n                <TextField\n                  id={'description-field'}\n                  value={item.description}\n                  onChange={event => {\n                    setItem({ ...item, description: event.target.value })\n                  }}\n                />\n              </div>\n              <div className={classes['radio-buttons']}>\n                <div className={classes.activate}>\n                  Active:\n                  <Radio\n                    color='primary'\n                    id={'activate'}\n                    checked={item.active}\n                    onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                  />\n                </div>\n                <div className={classes.deactivate}>\n                  Deactivate:\n                  <Radio\n                    color='primary'\n                    id={'deactivate'}\n                    checked={item.deactivate}\n                    onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                  />\n                </div>\n              </div>\n              <div className={classes['button-wrapper']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className={classes.wrapper}>\n                <span className={classes['header-text']}>Section:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='section'\n                    items={section}\n                    value={item.section || ''}\n                    onChange={event => setItem(state => ({ ...state, section: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Claim Type:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='claim-type'\n                    items={claim_types}\n                    value={item.claim_type || ''}\n                    onChange={event => setItem(state => ({ ...state, claim_type: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Handling Time:</span>\n                {/* Trial - feel free to change this time input */}\n                <div className={classes['text-wrapper']}>\n                  <TimeField\n                    id={'description-field'}\n                    value={item.handling_time}\n                    input={<TextField TextFieldStyle={{ padding: '3.5px' }} />}\n                    showSeconds\n                    onChange={(event, time) => setItem(state => ({ ...state, handling_time: time }))}\n                  />\n                </div>\n                <div className={classes['radio-buttons']}>\n                  <div className={classes.activate}>\n                    Active:\n                    <Radio\n                      color='primary'\n                      id={'activate'}\n                      checked={item.active}\n                      onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                    />\n                  </div>\n                  <div className={classes.deactivate}>\n                    Deactivate:\n                    <Radio\n                      color='primary'\n                      id={'deactivate'}\n                      checked={item.deactivate}\n                      onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={classes['button-wrapper-kpi']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {!showAddItem.show && (\n        <div className={classes.table}>\n          <LoadingIndicator loading={fetching}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <React.Fragment>\n                  <TableRow>\n                    {!(lookup.field === 'handling-time-kpi')\n                      ? columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))\n                      : kpi_columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))}\n\n                    <TableCell key={'action'} id={`sort-action`} />\n                  </TableRow>\n                </React.Fragment>\n              }\n              body={\n                data &&\n                data.data.map((item, index) =>\n                  !(lookup.field === 'handling-time-kpi') ? (\n                    <TableRow key={index}>\n                      <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => handleOnEditItem('desc', item)}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <TableRow key={index}>\n                      <TableCell id={`item-section-${index}`}>{item.section}</TableCell>\n                      <TableCell id={`item-claim_type-${index}`}>{item.claim_type}</TableCell>\n                      <TableCell id={`item-handling_time-${index}`}>{item.handling_time_formatted}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => {\n                            handleOnEditItem('kpi', item)\n                            setindex(index)\n                          }}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                )\n              }\n              count={data && data.count}\n              page={data && data.page}\n              limit={data && data.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnChange}\n            />\n          </LoadingIndicator>\n        </div>\n      )}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({ ...alert, open: false }))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  analystAssigned: {\n    text: 'For Adjudication'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport classes from './AutoCompletes.module.scss'\n\nimport AutoCompleteCurrent from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete2 from '../../Components/AutoComplete2/AutoComplete2'\n\nexport default function AutoCompletes (props) {\n  const { storage, errors, debounce, suggestion } = props\n  const { setErrors, onChange, setDebounce, setSuggestion } = props\n  const { service } = props\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    setSuggestion(state => ({ ...state, facilities: [] }))\n    clearTimeout(debounce.facility)\n    setFetching(true)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, facilities: data }))\n            })\n            .finally(() => {\n              setFetching(false)\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // const handleOnChangeAutosuggest = ({ value, field, search }) => {\n  //   setSuggestion(state => ({ ...state, facilities: [] }))\n  //   onChange({ value: value, field })\n\n  //   if (isSuggestionClick) {\n  //     for (let i of suggestion.facilities) {\n  //       if (value === i.id || value === i.name) {\n  //         onChange({ value: i.id, field: 'facility_id' })\n  //         onChange({ value: i.name, field: 'facility_name' })\n  //         return i.rooms\n  //       }\n  //     }\n  //   } else {\n  //     const { 1: by } = field.split('_')\n  //     getFacilitySuggestions({ value, by })\n  //   }\n  // }\n\n  const handleOnChangeAutosuggest2 = ({ value, field, search }) => {\n    if (search) {\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n      onChange({ value, field })\n    } else {\n      const _value = value || {}\n      console.log('AutoSuggest selected value', _value)\n      onChange({ value: _value.id, field: 'facility_id' })\n      onChange({ value: _value.name, field: 'facility_name' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        {/* <div className={classes.input}>\n          <AutoCompleteCurrent\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            label={'Medical Partner ID using Current'}\n            suggestions={suggestion.facilities}\n            value={storage.facility_id}\n          />\n        </div> */}\n        <div className={classes.input}>\n          <AutoComplete2\n            onChange={(value, search) => handleOnChangeAutosuggest2({ field: 'facility_id', value, search })}\n            label={'Medical Partner ID using AutoComplete2'}\n            suggestions={suggestion.facilities}\n            field={'id'}\n            loading={fetching}\n            value={storage.facility_id}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport DatePicker from '../../Components/DatePicker2/DatePicker2'\nimport DatePickerCurrent from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from '../../Validations/DateValidator'\n\nimport classes from './DatePickers.module.scss'\n\nexport default function DatePickers (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='Beta'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <Typography>{DateFormatter(storage.date_from)}</Typography>\n        </div>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\nimport { fromBlob } from 'Services/Download'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst getMozillaPdfViewerUrl = () =>\n  BaseUrlFetcher.getClaimsBaseUrl() + '/thirdparty/mozilla-pdfjs-2.4.456-es5/web/viewer.html'\n// const mozillaPdfViewer = 'https://mozilla.github.io/pdf.js/web/viewer.html'\n\n// window.addEventListener('webviewerloaded', () => {\n//   let urlParams = new URLSearchParams(window.location.search)\n//   let displayName = urlParams.get('displayName')\n//   let fileUrl = urlParams.get('fileUrl')\n//   PDFViewerApplication.open({\n//     url: fileUrl,\n//     originalUrl: displayName\n//   })\n//   PDFViewerApplication.setTitleUsingUrl(displayName)\n// })\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfView2Component = props => {\n  // Variables\n  const { name, fileName, initialPageNumber = 1, initialScale, enabled } = props\n  // Service\n  const { service } = props\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [searchText, setSearchText] = React.useState('')\n\n  React.useEffect(() => {\n    setFile()\n    setPageNumber(initialPageNumber)\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const download = () => {\n    fromBlob({ fileName: fileName, content: [file], extension: 'pdf' })\n  }\n\n  const print = async () => {\n    // TODO Further test and dev\n    try {\n      console.log('PrintDialog start')\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n      console.log('PrintDialog request sent')\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n        console.log('PrintDialog response received')\n      })\n      console.log('PrintDialog finished')\n    } catch (error) {\n      console.log('PrintDialog error', error)\n      console.log('Going to PrintJs fallback')\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n        console.log('PrintJs finished')\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography id={'pdf-preview-title'} className={classes['file-name']} align='left'>\n          {name}\n        </Typography>\n        <Tooltip title='Search text'>\n          <span>\n            <div className={classes.search}>\n              <SearchTextComponent\n                onChange={event => {\n                  console.log('changed')\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      console.log('debounce')\n                      setSearchText(search)\n                    }, 500)\n                  )\n                }}\n              />\n            </div>\n          </span>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-previous'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber > 1 ? pageNumber - 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                console.log(elem)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-next'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber < numPages ? pageNumber + 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton id={'pdf-preview-zoom-in'} onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.viewport}>\n        <div className={classes.pdf}>\n          <Document\n            file={file}\n            onLoadSuccess={({ numPages }) => {\n              setNumPages(numPages)\n            }}\n          >\n            {[...Array(numPages)]\n              .map((value, index) => index + 1)\n              .map((value, index) => (\n                <div className={classes.page} id={`pdf-page-${value}`} key={`pdf-page-${value}`}>\n                  <Page\n                    pageNumber={value}\n                    scale={scale}\n                    renderMode={'canvas'}\n                    customTextRenderer={textItem =>\n                      textItem.str\n                        .split(searchText)\n                        .reduce(\n                          (strArray, currentValue, currentIndex) =>\n                            currentIndex === 0\n                              ? [...strArray, currentValue]\n                              : [...strArray, <mark key={currentIndex}>{searchText}</mark>, currentValue],\n                          []\n                        )\n                    }\n                  />\n                </div>\n              ))}\n          </Document>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MozillaPdfBlob = props => {\n  // Variables\n  const { name = '', extension = 'pdf' } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState(null)\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(async response => {\n        const blob = new Blob([response.data], { type: 'application/pdf' })\n        const fileURL = URL.createObjectURL(blob)\n        const uri = encodeURIComponent(fileURL)\n        const base64 = await blobToBase64(blob)\n\n        console.log(blob)\n        console.log(fileURL)\n        console.log(uri)\n        setUrl('')\n\n        const PdfViewer = document.getElementById('pdfViewer')\n        PdfViewer.contentWindow.PDFViewerApplication.open(fileURL, 1.5)\n      })\n    }\n  }, [service])\n\n  // https://stackoverflow.com/a/12094943\n  var BASE64_MARKER = ';base64,'\n  function convertDataURIToBinary (dataURI) {\n    var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n    var base64 = dataURI.substring(base64Index)\n    console.log(base64)\n    var raw = window.atob(base64)\n    var rawLength = raw.length\n    var array = new Uint8Array(new ArrayBuffer(rawLength))\n\n    for (var i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i)\n    }\n    return array\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {/* {url && ( */}\n      <iframe\n        id={'pdfViewer'}\n        className={classes.iframe}\n        src={`${getMozillaPdfViewerUrl()}?file=&displayName=${name}.${extension}`}\n        width='100%'\n        height='100%'\n      />\n      {/* )} */}\n    </div>\n  )\n}\n\nconst MozillaPdfURL = props => {\n  // Variables\n  const { name = '', extension = 'pdf' } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState(null)\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(url => {\n        const _url = encodeURIComponent(url)\n        setUrl(_url)\n      })\n    }\n  }, [service])\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe\n          id={'pdfViewer'}\n          className={classes.iframe}\n          src={`${getMozillaPdfViewerUrl()}?file=${url}&displayName=${name}.${extension}`}\n          width='100%'\n          height='100%'\n        />\n      )}\n    </div>\n  )\n}\n\nconst PdfViewer2Modal = () => {\n  dispatch = useDispatch()\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n  }\n\n  return (\n    <Dialog id={'pdf-preview'} fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton id={'pdf-preview-close'} edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            {name || 'Preview Sheet'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        {PdfView2Component({\n          name,\n          fileName,\n          initialPageNumber,\n          initialScale,\n          service,\n          enabled\n        })}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Service, PdfViewer2Modal, PdfView2Component, MozillaPdfBlob, MozillaPdfURL }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { MozillaPdfBlob, MozillaPdfURL } from '../../Components/PdfViewer2/PdfViewer2'\n\nimport classes from './PdfViewers.module.scss'\n\nexport default function PdfViewer (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const [mct, setMct] = React.useState('5e494813213ab37f5f550b44')\n  const [claimNumber, setClaimNumber] = React.useState('PF0820000002-001')\n\n  return (\n    <div className={classes.root}>\n      {/* <Typography>BASE64 * File limited</Typography>\n      <MozillaPdf name={'test'} service={Service.getMemberContract({ mct_id: mct })} enabled /> */}\n\n      <div className={classes.header}>\n        <Typography>Member Contract (Direct Url)</Typography>\n        <TextField value={mct} onChange={event => setMct(event.target.value)} />\n      </div>\n\n      <MozillaPdfURL\n        name={'Member Contract'}\n        service={CustomerCareServices.getMemberContractUrl({ mct_id: mct })}\n        enabled\n      />\n\n      <div className={classes.header}>\n        <Typography>Claims Analysis Sheet (URL)</Typography>\n        <TextField value={claimNumber} onChange={event => setClaimNumber(event.target.value)} />\n      </div>\n\n      <MozillaPdfURL\n        name={`Analysis Sheet of ${claimNumber}`}\n        service={ClaimsAdjudicationServices.getAnalysisSheetURL({ claimNo: claimNumber })}\n        enabled\n      />\n\n      <div className={classes.header}>\n        <Typography>Claims Analysis Sheet (Blob)</Typography>\n        <TextField value={claimNumber} onChange={event => setClaimNumber(event.target.value)} />\n      </div>\n\n      <MozillaPdfBlob\n        name={`Analysis Sheet of ${claimNumber}`}\n        service={ClaimsAdjudicationServices.getAnalysisSheet({ claimNo: claimNumber })}\n        enabled\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Utility\n\nimport classes from './ErrorProducers.module.scss'\n\nconst FaultyButton = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nconst FaultyOperation = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nexport default function ErrorProducers (props) {\n  const { storage, errors, notDefined } = props\n  const { setErrors, onChange } = props\n\n  const [boom, setBoom] = React.useState(false)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() => setBoom(true)}\n            id='save'\n          >\n            Throw Error\n          </Button>\n        </div>\n\n        {boom && (\n          <div className={classes.input}>\n            <FaultyButton />\n          </div>\n        )}\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={() => console.log(notDefined.test)}\n          id='save'\n        >\n          Call Undefined\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport AutoCompletes from './Sections/AutoCompletes/AutoCompletes'\nimport DatePickers from './Sections/DatePickers/DatePickers'\nimport PdfViewers from './Sections/PdfViewers/PdfViewers'\nimport ErrorProducers from './Sections/ErrorProducers/ErrorProducers'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n// import { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\n// const WrappedTextField = props => <ClaimsInputBase {...props} />\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: new Date()\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n  const [toggle, setToggle] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService(`Test Page ${toggle.toUpperCase()}`)\n    // BreadcrumbsService.setSelectedItems(['test'])\n  }, [toggle])\n\n  const onChange = ({ value, field }) => {\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar}>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('auto-complete')}\n        >\n          Auto-Complete\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('date-picker')}\n        >\n          Date-Pickers\n        </Button>\n        <Button variant='contained' color='primary' className='button-positive' onClick={() => setToggle('pdf-viewer')}>\n          Pdf-Viewer\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('error-producer')}\n        >\n          Error-Producer\n        </Button>\n      </div>\n      <div className={classes.content}>\n        {'-------'}\n        <div className={classes.wrapper}>\n          {toggle === 'auto-complete' && (\n            <AutoCompletes\n              service={ClaimsAdjudicationServices}\n              errors={errors}\n              storage={storage}\n              debounce={debounce}\n              suggestion={suggestion}\n              setErrors={setErrors}\n              onChange={onChange}\n              setStorage={setStorage}\n              setDebounce={setDebounce}\n              setSuggestion={setSuggestion}\n            />\n          )}\n\n          {toggle === 'date-picker' && (\n            <DatePickers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'pdf-viewer' && (\n            <PdfViewers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'error-producer' && <ErrorProducers errors={errors} storage={storage} setErrors={setErrors} />}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\nimport { dataValue } from 'Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader'\n\nconst initialState = {\n  doctor: [],\n  client: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'REMOVE_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { index, field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].filter((i, _index) => index !== _index)\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\n// const initialState = {\n//   pro: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   facility: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   doctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   anesthesiologist: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   pfDoctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   specialization: {\n//     description: [],\n//     data: []\n//   },\n//   hospitalItem: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   icd10: [],\n//   cpt: {\n//     description: [],\n//     code: [],\n//     data: []\n//   },\n//   contract: {\n//     years: []\n//   }\n// }\n\n// const icd10 = {\n//   given_diagnosis: [],\n//   description: [],\n//   code: [],\n//   data: []\n// }\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    // case 'SET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     let { field, suggestion } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: { ...initialState[field], ...suggestion }\n    //     }\n    //   })()\n\n    // case 'SET_SUGGESTION_ON_ARRAY':\n    //   return (() => {\n    //     let { field, index, by, suggestion, data } = action.payload\n\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           i = { ...i, [by]: suggestion, data }\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// import StackTrace from 'stacktrace-js'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\n// TEST Page\nimport Test from './Components/Test/Test'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n// window.onerror = function (msg, file, line, col, error) {\n//   StackTrace.fromError(error).then(err => {\n//     StackTrace.report(err, `${process.env.REACT_APP_SERVER_API}/c/c/error`, {\n//       type: 'window.onerror',\n//       url: window.location.href,\n//       userId: window.userId,\n//       agent: window.navigator.userAgent,\n//       date: new Date(),\n//       msg: msg\n//     })\n//   })\n// }\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          <Route path='/test' exact component={Test} />\n\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n"],"sourceRoot":""}