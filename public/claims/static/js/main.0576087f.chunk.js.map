{"version":3,"sources":["Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","SharedComponents/TextField/CustomTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","Pages/LoginPage/LoginPage.module.scss","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.module.scss","SharedComponents/404/Error.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.module.scss","Constant/images/images.js","SharedComponents/HeaderComponent/HeaderComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.module.scss","../node_modules/react-pdf/node_modules/pdfjs-dist/build sync","SharedComponents/IcdCptStatus/IcdCptStatus.module.scss","SharedComponents/LoadingComponent/LoadingComponent.module.scss","SharedComponents/PageTitleComponent/PageTitleComponent.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TableFooterComponent/TableFooterComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ReimbursementInfoComponent/ReimbursementInfoComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.module.scss","Pages/Protected/Protected.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.module.scss","SharedComponents/SnackbarComponent/SnackbarComponent.module.scss","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","SharedComponents/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","FontAwesomeLibrary.js","SharedComponents/TextField/CustomTextField.js","SharedComponents/IcdCptStatus/IcdCptStatus.js","Utilities/GenerateFormData.js","Pages/Protected/Store/actions/pageTitle.js","Pages/Protected/Store/actions/snackbar.js","Pages/Protected/Store/actions/pdf.js","SharedComponents/SnackbarComponent/SnackbarComponent.js","SharedComponents/LoadingComponent/LoadingComponent.js","Pages/Protected/Store/actions/pageLoading.js","SharedComponents/404/404.js","Services/ErrorHandler/exclude.js","Services/ErrorHandler/index.js","Services/Api/instance.js","Services/Api/CommonServices.js","Utilities/IndexedDb2.js","Services/Api/CPT_ICDServices.js","Controllers/ConfigController2.js","Pages/LoginPage/LoginPage.js","SharedComponents/HeaderComponent/HeaderComponent.js","SharedComponents/SideBarComponent/SideBarComponent.js","Pages/Protected/Store/actions/sidebar.js","SharedComponents/PageTitleComponent/PageTitleComponent.js","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.js","Pages/Protected/Store/actions/breadcrumbs.js","SharedComponents/PdfViewer2/PdfViewer2.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent.js","Utilities/TextFormatter.js","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/BatchEncoder/Store/actions/batch.js","Pages/Protected/Claims/BatchEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/pageTitleReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/bundlesReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/batchReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/BatchEncoder/Store/index.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/index.js","Pages/Protected/Claims/BatchEncoder/Routes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.js","Services/Api/ClaimsEncodingServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchesPage/BatchesPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.js","Services/Api/CustomerCareServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claim.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/grandTotal.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/dentalProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.js","Services/Api/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/Emergency.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/Reimbursement.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.js","Utilities/IndexedDbHelper.js","Services/Storage/IcdCptStorageServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Validators/Claim/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Validators/Claim/getValidators.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureForm.js","Constant/media.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetailsValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECUValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPEValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacyValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagementValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfoComponent/ReimbursementInfoComponent.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/ClaimPage/ClaimPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/grandTotalReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/dentalProcedureReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Routes.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/ForAdjudicationTile/ForAdjudicationTile.js","Pages/Protected/Claims/Components/MyClaimsTile/MyClaimsTile.js","Pages/Protected/Claims/Components/SubmittedClaimsTile/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile.js","Services/Api/ClaimsAdjudicationServices.js","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claim.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/error.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/escalation.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reassign.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reject.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/utilization.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsViewer/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Utilities/SafeAccess.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Utilities/FieldFormatter.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.js","Utilities/ArrayCompare.js","Utilities/BenefitNode2.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/helper.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.js","SharedComponents/PdfViewer/PdfViewer.js","Pages/Protected/Claims/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/ClaimsViewer/GetClaimComponent.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/ClaimsViewer/index.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/discrepancy.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/recon.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/discrepancyReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/errorReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/escalationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reassignReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/rejectReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reconReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/utilizationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/index.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/index.js","Pages/Protected/Claims/ClaimsAnalyst/Routes.js","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/PaymentRequest/Routes.js","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.js","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/MedicalConsultant/Routes.js","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsReconciliation/Routes.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReconciledClaimsTile/ReconciledClaimsTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsVerifierTile/ClaimsVerifierTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsForApprovalTile/ClaimsForApprovalTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/MedicalCollectiblesTile/MedicalCollectiblesTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReimbursementClaimTile/ReimbursementClaimTile.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/ReconciledServices.js","Services/Api/ClaimsVerifierSupervisorServices/ForApprovalServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Routes.js","Pages/Protected/Claims/index.js","Pages/Protected/Store/reducers/sidebarReducer.js","Pages/Protected/Store/reducers/pageTitleReducer.js","Pages/Protected/Store/reducers/breadcrumbsReducer.js","Pages/Protected/Store/reducers/pageLoadingReducer.js","Pages/Protected/Store/reducers/snackbarReducer.js","Pages/Protected/Store/reducers/pdfReducer.js","Pages/Protected/Store/index.js","Pages/Protected/Store/reducers/index.js","Services/ProtectedPageScrollEvent.js","Pages/Protected/Protected.js","App.js","serviceWorker.js","index.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.module.scss","SharedComponents/PdfViewer/PdfViewer.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/SideBarComponent/SideBarComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","SharedComponents/DatePicker/DatePicker.module.scss"],"names":["module","exports","Object","freeze","logo","avatar","pokeball","webpackEmptyContext","req","e","Error","code","keys","resolve","id","FontAwesomeLibrary","init","library","add","faHome","faBoxOpen","faBookOpen","faTools","faFileAlt","faExclamationCircle","faBalanceScale","faEdit","faTrash","faSave","faPrint","faSearchPlus","faSearchMinus","faArrowAltCircleRight","faArrowAltCircleLeft","faCalendarDay","CustomTextField","props","label","required","readOnly","constainerStyle","error","onChange","type","other","value","React","useState","focus","setFocus","_error","setError","useEffect","trim","className","classes","root","style","Typography","variant","wrapper","Fragment","Paper","onBlur","InputBase","input","onFocus","autoComplete","reset","set","IcdCptStatusComponent","data","setData","values","p","success","_success","cpt_fetched","cpt_total","icd10_fetched","icd10_total","setTimeout","show","fetch","IcdCptStatusSet","GenerateFormData","formData","FormData","map","item","index","Array","isArray","_item","JSON","stringify","append","setPageTitle","payload","setSnackbar","setPdf","dispatch","SnackbarComponent","snackbar","useSelector","state","useDispatch","handleClose","event","reason","open","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","elevation","severity","action","IconButton","aria-label","icon","onClick","fontSize","AlertTitle","message","SnackbarService","args","LoadingComponent","onScrollContainer","containerNode","containerStyle","setContainerStyle","getBoundingClientRect","top","left","loading","pageLoading","onWheel","overlay","CircularProgress","size","LoadingService","history","ErrorPage","counter","setCounter","_counter","interval","setInterval","clearInterval","push","title","Button","color","ErrorPageInit","useHistory","ErrorPageService","ExcludeErrorConstants","all","exclude","headers","status","handler","response","fail","config","Promise","reject","addToken","hasOwnProperty","isAuthorized","createInstance","url","instance","axios","create","baseURL","interceptors","request","use","window","localStorage","partnerUrl","process","clientUrl","replace","getItem","ErrorHandler","axiosClient","CommonServices","method","skip_generate_form_data","IndexedDb2","dbName","stores","version","indexedDB","onupgradeneeded","db","target","result","store","objectStoreNames","contains","name","createObjectStore","keyPath","onsuccess","onerror","console","log","key","storeName","mode","transaction","objectStore","put","mappings","item_success_insert","_add","length","manipulateItem","clear","additional_data","mapping","from","to","Date","now","getAll","CPT_ICDServices","limit","skip","ConfigController2","connect","getData","user_data","i","update","cpt","icd10","stored_cpt","stored_icd10","this","setCPT_ICD","cpt_count","count","icd10_count","data_limit","REACT_APP_LIMIT_ICD_CPT","parseInt","already_fetched","fetchMore","a","collectrion_name","getMany","then","remaining","_limit","LoginPage","disableControls","setDisableControls","username","password","user","setUser","loginError","setLoginError","document","submit","preventDefault","login","err","res","ex","setUserManagementData","updateCPT_ICD","setItem","Grid","container","xs","direction","justify","alignItems","src","images","alt","hidden","form","disabled","Link","href","note","HeaderComponent","logout","anchorEl","setAnchorEl","styles","Avatar","aria-controls","aria-haspopup","currentTarget","Menu","Boolean","keepMounted","MenuItem","SideBarComponent","items","sidebar","menu","circle","text","SideBarService","PageTitleComponent","pageTitle","borderColor","PageTitleService","BreadcrumbsComponent","breadcrumbs","selected","Breadcrumbs","BreadcrumbsService","pdfjs","GlobalWorkerOptions","workerSrc","Transition","forwardRef","ref","Slide","PdfViewer2Component","pdf","fileName","initialPageNumber","initialScale","service","enabled","file","setFile","numPages","setNumPages","scale","setScale","pageNumber","setPageNumber","_blob","Blob","handleOnClose","print","require","ipcRenderer","blobToBase64","send","on","reader","FileReader","readAsDataURL","onloadend","printable","split","printJS","base64","blob","onload","Dialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","edge","DialogContent","padding","controls","align","Tooltip","control","URL","createObjectURL","link","createElement","setAttribute","body","appendChild","click","onLoadSuccess","PdfViewer2Service","options","DashboardTileComponent","children","header","viewList","actionHeader","onFilterChange","isFilterShown","filter","setFilter","FormControl","Select","list","Children","child","displayName","TaskTrayComponent","sizes","showTitle","toArray","cloneElement","_sizes","sm","lg","spacing","itemSize","s","TicketListComponent","viewAllLink","content","caption","useStyles1","makeStyles","theme","flexShrink","marginLeft","TablePaginationActions","useTheme","page","rowsPerPage","onChangePage","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","pagination","rowsPerPageOptions","TableContainer","component","table","TableHead","footer","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","useStyles","display","minWidth","flex","iconButton","divider","width","height","margin","SearchTextComponent","placeholder","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","moment","headCells","sortField","CustomizedDialogs","setViewList","onViewListChange","category","debounce","setDebounce","fullWidth","maxWidth","aria-labelledby","PaperProps","DialogTitle","disableTypography","button","dividers","search","clearTimeout","overflow","stickyHeader","headCell","TableCell","TableSortLabel","active","orderBy","order","sort","row","bundle_number","date","due","facility","BatchEncodingServices","params","batch_number","Dashboard","created","submitted","bundles","setBundles","initialValue","getBundles","range","getBundleCount","batchResponse","batchCountResponse","createdBundles","results","createdBundleCount","prevState","submittedBundles","submittedBundleCount","handleFilterChange","handleOnShowViewList","startCase","tiles","createBundle","_params","AutoComplete","suggestions","relatedTarget","square","suggestion","handleItemClick","DatePicker","tabindex","setOpen","selectedDate","setSelectedDate","InputRef","useRef","CalendarButtonRef","handleOnFocus","current","handleOnBlur","activeElement","handleKeyDown","utils","MomentUtils","TextFieldComponent","onKeyDown","TextFieldCurrency","currency","customInput","isNumericString","displayType","thousandSeparator","decimalScale","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","field","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","term","earliest_term","isNaN","newDate","date_received","full_name","md","total_rcs","due_date","soa_number","total_soa_amt","facility_id","facility_name","doctor_id","doctor_name","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","EnhancedTable","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","Checkbox","center","numeric","disablePadding","sortDirection","defaultFunction","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","deleteStatus","onOpen","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","batch","setBatch","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","_index","handleClick","claim","buttonWrapper","deleteMessage","getMessage","DropDown","disableComponents","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","notes","allow","when","is","otherwise","messages","abortEarly","validate","ExtractValidationResult","setSelectedBatch","setBatchAction","setShowBatchForm","setSaveBatchControl","resetSuggestionObject","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","saveControl","confirmAction","setConfirmAction","setErrors","doctor","multiline","rows","BatchFormValidator","greater","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setOpenDialog","openBundleDialog","setOpenBundleDialog","setOpenError","submitStatus","setsubmitStatus","match","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","received","soa","amount","getBatches","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","newBatch","updateBatch","f","createBatch","updateBundle","handleOnOk","deleteMultipleBatch","catch","source","NewBundlePage","due_date_adjustment","newBundle","setNewBundle","inputs","save","toISOString","NewBundleValidator","pageTitleReducer","initialState","bundlesReducer","batchNumber","batchReducer","suggestionsReducer","combineReducers","createStore","sideBarItems","dashboard","specificBundle","BatchEncoderRoutes","Store","exact","onItemClick","ClaimsEncodingServices","claim_number","my","completed","openTickets","getBatchCount","openBatches","openBatchCount","myBatches","myBatchCount","completedBatches","completedBatchCount","handleOnEncode","assignBatch","BatchesPage","BatchDetails","groups","date_from","date_to","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","toLowerCase","ClaimList","selectedClaimNumber","onConfirm","submittedBatch","setSelected","setOrder","setOrderBy","setPagination","claims","setClaims","claim_numbers","_claims","claimNumbers","c","property","rowsLength","role","tabIndex","loa_number","approval_code","member","first_name","last_name","account_number","ProviderSchedule","dialog","setDialog","header1","hover","colSpan","cell","textAlign","fontStyle","partition","maxHeight","List","random","ListItem","ListItemText","BatchPage","setBatchNumber","setSelectedClaimNumber","setDetails","claimCount","setClaimCount","openDeleteDialog","setOpenDeleteDialog","showProviderSchedule","setShowProviderSchedule","getClaimsAndCount","getClaims","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","CustomerCareServices","member_account_no","member_account_number","member_oid","contract_oid","tree_oid","is_exact","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimPro","setClaimDoctor","setClaimRoom","setClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","setClaimType","initDropDowns","setDropDown","initSuggestions","setSuggestionObject","addSuggestionToArray","setProcedure","setHospitalItem","setProfessionalFee","setGrandTotal","setDentalProcedure","ContractRange","cursor","contract_year_from","contract_year_to","CustomerCareService","renameProp","oldProp","newProp","old","others","other_name","subType","AutoFillInitializer","AutoFill","loa","member_info","member_name","first_middle","given_name","middle_name","join","pop","common","loa_no","member_id","member_last_name","member_first_name","member_middle_name","procedures","professional_fees","hospital_items","diagnosis","diagnoses","primary_icd10_code","primary_diagnosis","proc","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","prof","diag","icd10_code","date_admitted_date","date_discharged_date","room_type","room","room_rate","total_amount","pro_id","pro_name","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","medical_partner_id","partner_id","medical_partner_name","partner_name","rooms","rate","InPatient","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","partner_doctor_name","OutPatientProcedure","pshilhealth_amount_paid","recommendation","OutPatientConsultation","customer_account_number","client_id","company_name","client_name","MedicineAllowance","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","showReimbursement","showCompany","showContractRange","showClaimSource","showApprovalCode","showLoaNumber","isDental","claimType","approvalCode","setApprovalCode","memberAccountNumber","setMemberAccountNumber","getLoaDetails","reimbursement_type","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","ICDTextFields","description","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Radio","IndexedDbHelper","deleteDb","callback","deleteDatabase","openDb","onUprade","onSuccess","onError","createStoreOnDb","onComplete","oncomplete","createIndexOnStore","isUnique","unique","openDbAndSave","entries","onSaveComplete","onLoopEnd","saveToStore","forEach","entry","IcdCptStorageServices","DB_NAME","OBJECT_STORE_NAME_CPT","OBJECT_STORE_NAME_ICD","records","readStorageEntries","loadEntries","filterKey","includes","full_description","full_code","LOOKUP_LIMIT","DiagnosisList","handleOnClickAddDiagnosis","handleOnChangeIcd10","getIcd10Suggestions","removeSuggestionToArray","handleOnRemoveDiagnosis","CptTextFields","CptTextField","gross_amount","ProcedureForm","showAmountPaidByMember","showPhilhealthField","procedure","unsubscribe","subscribe","handleOnChangeProcedureForm","handleOnChangeCpt","toString","getCptSuggestions","ProcedureFormValidator","buttons","HospitalItemTextFields","HospitalItemTextField","item_code","onChangeName","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","handleOnChangeHospitalForm","HospitalItemFormValidator","specialization","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureList","totalAmount","setTotalAmount","amountPerItem","parseFloat","showProcedureForm","generateKey","right","HospitalItemList","showHospitalItemForm","ProfessionalFeeList","showProfessionalFeeForm","ClaimFooter","handleOnSave","setShowReimbursementModal","fields","selected_fields","available_fields","flag","boolean","default","medicine_category","reimbursement_category","official_receipt_number","getValidators","_setDialog","_resolve","SoftValidatorAlertComponent","t","SoftValidatorService","_fields","hasPrimary","itemError","ClaimInPatient","onChangeFacility","getClaimDetails","onChangePro","dropDown","grandTotal","isAdd","setIsAdd","allowedFields","setAllowedFields","lineItemFields","setlineItemFields","_allowedFields","_lineItemFields","pro","claim_sub","sub_type","currentValue","sum","reduce","handleOnChangeFacility","doValidateAll","base_errors","MainValidator","doValidateBase","DiagnosisListValidator","goBack","addClaim","_claimNumber","updateClaim","startOf","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","handleOnItemClick","tooth_number","ToothNumber","DentalProcedureForm","dentalProcedure","DentalProcedureFormValidator","media","dentalChart","ClaimDental","contract_year","dental_procedures","contract","Media","ClaimMedicineAllowance","ClaimAPE","ClaimECU","ClaimPPE","ClaimPharmacy","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfoComponent","setShowModal","doReject","reimbursement_info","showAdd","setShowAdd","rejectModal","setRejectModal","setItems","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","remarks","reasons","handleOnClickSave","scrollTo","scrollHeight","behavior","ItemForm","today","handleOnChange","handleOnChangeReason","delete","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setType","initial_values","reimbursement_details","_claim","GetClaimComponent","_props","_type","SelectecClaimType","ClaimPage","breadCrumbs","getBatchDetails","getFacilitySuggestions","getProSuggestions","proUsersLookup","elem","getAnaesthesiologistSuggestions","anaesthesiologist","getClaim","employee_id","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","amount_not_covered","amount_due_from_member","reason_for_charging_member","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","initSubscriber","specificBatch","ClaimsDetailsEncoderRoutes","render","ForAdjudicationTile","services","getClaimCount","handleOnAnalyze","assignClaim","MyClaimsTile","SubmittedClaimsTile","claimNumber","setClaimNumber","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","handleOnShowPdf","getLetterOfAdvice","claimNo","getAnalysisSheet","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","ClaimsAdjudicationServices","responseType","Accept","getClaimResponse","analyzeRespone","analysis_results","icd_code","filters","DiscrepancyBase","discrepancy","iconStyle","retainSpace","noMargin","setMessage","flat","Infinity","m","spreadResult","Popover","transformOrigin","whiteSpace","resetError","setEscalationMessage","setReassignMessage","setRejectStatus","setLimitType","loa_details","has_corp_guarantee","permissions","requiredFields","read","defaultBehaviour","lastEntry","handleOnConfirmDelete","doValidate","showAmountNotCovered","showAmountDueFromMember","prop","reason_charging","failed","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","handleClickLineDiscrepancy","Set","expand","hospital_item","handleOCancel","professional_fee","SafeAccess","def","obj","assignee","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","isReimbursement","userManagementService","escalations","reassign","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","reassignErrors","setReassignErrors","initDropdownUsers","roles","getUsersByRole","users","_id","sortBy","visible","analysis_sheet","letter_of_advice","escalate","handleEscalateDialog","return","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","handleReassignDialog","comment","assign","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","DisapprovedLabel","disapproved","substring","generateMessage","TextFieldSubmit","onSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","user_id","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","coverageList","planTypeList","categoryNode","roomAndBoardList","riderList","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","node","nodeId","planPackage","benefitCategory","included","idx","tree_id","UnitLimit","unit","columns","RBC","EM","IP","OP","PV","SD","MT","OM","CC","DNT","SH","LimitTable","benefitType","elemRows","setElemRows","elemColumns","setElemColumns","generateColumns","limits","limit_unit","parent_name","generateRows","Header","contractType","elemFields","setElemFields","showAll","timebased","metadata","PECIndex","timebasedindex","findIndex","paddingBottom","htmlFor","col","annual","semiannual","quarterly","monthly","populateClient","populateMember","Footer","billingArrangement","amountLimit","gutterBottom","premium","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","rider_fee","imputed_in_premiums","billback","billback_net","amt_limit","max_session","max_amount","percent_mbl","percent_abl","no_visits","voluntaryValue","includesAny","s1","s2","BenefitNode2","nodes","treePath","levelLimit","reverse","shift","level","find","nodesParam","loadExisting","nodeIDMap","tree_path","node1","node2","sort_index","oldID","itemPlanType","newID","padStart","IDSet","newIncludedFacilities","newPartner","included_facilities","newExcludedFacilities","partnerNetworkList","excluded_facilties","found","exResult","exTree","getNodeTree","parentNodes","childNodes","parent","foundChild","childNode","newParent","newChildNodes","benefitCategoryNodes","planType","newItem","baseNode","baseItem","exclusionList","benefitTypeNodes","mainBenefitNodes","subBenefitNodes","selectedPlanType","selectedPlanPackage","selectedBenefitCategory","exclusionArray","exclusion","categoryNodes","typeNodes","combineNodes2","benefitNodes","subNodes","child_nodes","combineNodes","contractNodes","planPackageNodes","planTypeNodes","coverageCategories","riderCategories","combinedNodes","benefit","baseNodes","tmp_data","basePlanType","planNodes","planTypeID","properties","contract_plan_type","requested_rate","admin_fee","naf","rsd","indicative_principals","indicative_dependents","original_children","original_id","newPartnerNetworkList","partner","addFlag","planTypeNode","generatePlanNodes","newNode","foundNode","node_path","baseIndex","getMatchByPlanCode","eligiblityNodes","parentLevel","parentCode","parentIndex","newChildren","planCode","Benefits","client","setSelectedPlanType","setSelectedPlanPackage","setSelectedBenefitCategory","benefitRows","setBenefitRows","setExclusionList","setContractNodes","setPlanTypeNodes","setPlanPackageNodes","setBenefitCategoryNodes","setBenefitTypeNodes","setMainBenefitNodes","setSubBenefitNodes","setContractId","base","benefits","convertNodeData","combineBaseBenefitNodes","eList","createExclusionList","getFilteredNodes","info","contracts","getRows","getContractNode","getCategoryNode","getPlanTypeList","getRoomAndBoardList","getSidebarList","getCoverageList","getRiderList","contractNode","selectedPlan","setSelectedPlan","planTypes","setPlantTypes","setRows","getExclusions","tree","benefitsExclusion","element","childExclusions","childId","subBenefit","is_excluded","parent_code","plan_type","plan","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","filtered","doctors","setDoctors","fetchAll","lodash","queryColumn","collection","searchObj","address","handleOnSort","sorted","handleOnPaginate","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","last","sub","schedule","extractLoa","__type","ticket_type","grand_total","date_admitted","date_issued","claim_no","session","newDoctor","_doctors","randomRange","Utilization","fetchService","memberBenefitLimit","utilizationLoa","alter","setList","setFilters","allFilters","setAllFilters","filteredRows","setFilteredRows","utilized","ibnr","total","graph","setGraph","_utilizationLoa","concat","icd","category_code","startsWith","allFilter","columnFilter","chunk","take","handleSearchChange","compare","comparer","some","provider","background","procedure_name","cpt_code","renderRows","PdfViewer","download","Contract","RightPanelTabs","onReturnEscalate","getUtilizations","getPartners","getDoctors","recon","benefit_limit","tabs","comments","not","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","getUsers","hasError","setHasError","getReason","getRooms","getDropdown","doValidateProcedure","ProcedureValidator","doValidateHospitalItem","HospitalItemValidator","doValidateProfessionalFee","ProfessionalFeeValidator","group","groupEnd","invalid","ConfigController","getUserManagementData","endOf","DashboardRedirect","MedicalConsultantServices","UserManagementServices","role_name","ClaimAnalysis","fetching","setFetching","setMember","setClient","setUtilizationLoa","ApiService","breadCrumbsList","resetRecon","_claim_type","getDiscrepancy","getClaimType","getEscalationLogs","getReconNotes","adjudicationResults","fieldIndex","item_type","item_id","getComments","getNotes","getReport","getReports","getMemberUtilizationLoa","getMember","getBaseBenefitPlan","getBenefitPlanTree","getMemberBenefitLimit","receiver_id","discrepancyReducer","errorReducer","escalationReducer","reassignReducer","rejectReducer","reconReducer","utilizationReducer","specificClaim","analyze","exclusions","utilization","contact","ClaimsAnalystRoutes","PaymentRequestServices","paymentRequests","override","paymentRequestClaims","paymentRequestClaimCount","_category","soa_no","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","total_batches","total_batch","acc","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","requestBatch","should_include","paymentRequest","specificPaymentRequest","PaymentRequestRoutes","for_review","ticket","claimResponse","claimCountResponse","allClaims","allClaimsCount","handleOnReview","review","MedicalConsultantRoutes","ClaimsReconServices","for_recon","ClaimsReconcilationRoutes","ReconTIle","getItems","getItemCount","ClaimsForApprovalTile","verifier_name","total_claims","claimsCount","MedicalCollectiblesTile","ReimbursementClaimTile","account_no","account_name","ReconciledServices","ForApprovalServices","ClaimsVerifierSupervisorServices","ClaimsVerifierTile","ReconciledClaimsTile","reconciled","forApproval","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","ClaimsSupervisorRoutes","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","removeItem","batchEncoderLogic","ClaimsReconciliationRoutes","ClaimsVerifierSupervisorRoutes","sidebarReducer","breadcrumbsReducer","snackbarReducer","pdfReducer","pageLoadingReducer","subscribers","ProtectedPageScrollEvent","cb","Protected","selectedModule","setSelectedModule","isAauthorized","setIsAuthorized","setContainerNode","getMe","resetToLogin","access_token","main_module","main_role","clearUserManagementData","location","protocol","origin","scrollContainer","scrollTop","deltaY","accessToken","statusCode","onScroll","publish","Claims","routesForModule","initializeBaseUrls","App","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0576087f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__X-NCv\",\"table\":\"ProcedureList_table__LtkxW\",\"table-header\":\"ProcedureList_table-header__3Ac8E\",\"table-description\":\"ProcedureList_table-description__3_4Wa\",\"add-link\":\"ProcedureList_add-link__1UWwS\",\"row\":\"ProcedureList_row__3RlUn\",\"align\":\"ProcedureList_align__2L_cc\",\"center\":\"ProcedureList_center__32rls\",\"right\":\"ProcedureList_right__1pxhH\",\"table-total\":\"ProcedureList_table-total__11hza\",\"caption\":\"ProcedureList_caption__1cvHz\",\"amount\":\"ProcedureList_amount__l-4L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__1gaxi\",\"table\":\"HospitalItemList_table__1T4Ou\",\"table-header\":\"HospitalItemList_table-header__pil4o\",\"table-description\":\"HospitalItemList_table-description__3hcWS\",\"add-link\":\"HospitalItemList_add-link__1fF5-\",\"row\":\"HospitalItemList_row__2sr0L\",\"align\":\"HospitalItemList_align__2w1Hz\",\"center\":\"HospitalItemList_center__9YkBq\",\"right\":\"HospitalItemList_right__1g1-y\",\"table-total\":\"HospitalItemList_table-total__1eIuf\",\"caption\":\"HospitalItemList_caption__2UHjy\",\"amount\":\"HospitalItemList_amount__2_b-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__36scC\",\"first-container\":\"ClaimMedicineAllowance_first-container__3LG3r\",\"groups\":\"ClaimMedicineAllowance_groups__2iXhU\",\"input\":\"ClaimMedicineAllowance_input__2G2Zd\",\"child-container\":\"ClaimMedicineAllowance_child-container__2srkt\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__2l5oQ\",\"left-side\":\"ClaimMedicineAllowance_left-side__qFPtB\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__3Iz7T\",\"table\":\"ClaimMedicineAllowance_table__1qrlu\",\"table-header\":\"ClaimMedicineAllowance_table-header__12Kkz\",\"table-description\":\"ClaimMedicineAllowance_table-description__1hTo6\",\"add-link\":\"ClaimMedicineAllowance_add-link__3qxKy\",\"row\":\"ClaimMedicineAllowance_row__3Umzu\",\"align\":\"ClaimMedicineAllowance_align__1BVJf\",\"center\":\"ClaimMedicineAllowance_center__1tZAi\",\"right\":\"ClaimMedicineAllowance_right__2u6Im\",\"table-total\":\"ClaimMedicineAllowance_table-total__nAcH3\",\"caption\":\"ClaimMedicineAllowance_caption__2Xvx_\",\"amount\":\"ClaimMedicineAllowance_amount__3kOYn\",\"right-side\":\"ClaimMedicineAllowance_right-side__3z21t\",\"sticky\":\"ClaimMedicineAllowance_sticky__2612D\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__3KhN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__Mmcg0\",\"first-container\":\"ClaimPharmacy_first-container__2dLu3\",\"groups\":\"ClaimPharmacy_groups__3VQ0N\",\"input\":\"ClaimPharmacy_input__VDs0R\",\"child-container\":\"ClaimPharmacy_child-container__6sWfh\",\"tables-container\":\"ClaimPharmacy_tables-container__2NiO8\",\"left-side\":\"ClaimPharmacy_left-side__2WMcE\",\"wrapper\":\"ClaimPharmacy_wrapper__sT41S\",\"table\":\"ClaimPharmacy_table__19xAd\",\"table-header\":\"ClaimPharmacy_table-header__2ujsV\",\"table-description\":\"ClaimPharmacy_table-description__34Rj9\",\"add-link\":\"ClaimPharmacy_add-link__2Zv4z\",\"row\":\"ClaimPharmacy_row__1HEfZ\",\"align\":\"ClaimPharmacy_align__4xQmL\",\"center\":\"ClaimPharmacy_center__prewS\",\"right\":\"ClaimPharmacy_right__31r9B\",\"table-total\":\"ClaimPharmacy_table-total__1-XM-\",\"caption\":\"ClaimPharmacy_caption__3OHnP\",\"amount\":\"ClaimPharmacy_amount__2eKIA\",\"right-side\":\"ClaimPharmacy_right-side__6LVvr\",\"sticky\":\"ClaimPharmacy_sticky__1fLJm\",\"grand-total\":\"ClaimPharmacy_grand-total__m7uSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3v-Lv\",\"wrapper\":\"Footer_wrapper__1zMki\",\"groups\":\"Footer_groups__2MoDL\",\"center\":\"Footer_center__3a6Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__1XZyg\",\"input\":\"BaseDetails_input__pHRqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2fzNk\",\"header\":\"ICDTextField_header__pqXnc\",\"description\":\"ICDTextField_description___8gS9\",\"code\":\"ICDTextField_code__G5Fds\",\"primary\":\"ICDTextField_primary__2X9xl\",\"actions\":\"ICDTextField_actions__20aju\",\"wrapper\":\"ICDTextField_wrapper__2-mIJ\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__1sn7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3G1WP\",\"first-container\":\"ClaimMedicalSupplies_first-container__3VlM1\",\"groups\":\"ClaimMedicalSupplies_groups__1qSYd\",\"input\":\"ClaimMedicalSupplies_input__1ZmAK\",\"child-container\":\"ClaimMedicalSupplies_child-container__3FBi7\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__1Fq0r\",\"left-side\":\"ClaimMedicalSupplies_left-side__3D2mB\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__3WLRm\",\"table\":\"ClaimMedicalSupplies_table__258qm\",\"table-header\":\"ClaimMedicalSupplies_table-header__2_TTi\",\"table-description\":\"ClaimMedicalSupplies_table-description__1nujy\",\"add-link\":\"ClaimMedicalSupplies_add-link__2BUxt\",\"row\":\"ClaimMedicalSupplies_row__vGNBs\",\"align\":\"ClaimMedicalSupplies_align__33Doz\",\"center\":\"ClaimMedicalSupplies_center__2l45A\",\"right\":\"ClaimMedicalSupplies_right__1em68\",\"table-total\":\"ClaimMedicalSupplies_table-total__3JD-N\",\"caption\":\"ClaimMedicalSupplies_caption__1DdQa\",\"amount\":\"ClaimMedicalSupplies_amount__3Sav-\",\"right-side\":\"ClaimMedicalSupplies_right-side__2nXxw\",\"sticky\":\"ClaimMedicalSupplies_sticky__2F1nG\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__3dgFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__1qifU\",\"header\":\"ICDTextField_header__3VGao\",\"delete\":\"ICDTextField_delete__3vB5d\",\"description\":\"ICDTextField_description__3eIpr\",\"code\":\"ICDTextField_code__2j0R8\",\"primary\":\"ICDTextField_primary__KNO67\",\"discrepancy\":\"ICDTextField_discrepancy__1UfWd\",\"wrapper\":\"ICDTextField_wrapper__3ixXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1Skt8\",\"tiles\":\"Dashboard_tiles__lpIoJ\",\"row\":\"Dashboard_row__3KnBg\",\"task-tray\":\"Dashboard_task-tray__2lCpR\",\"list-item\":\"Dashboard_list-item__1Ic9e\",\"details\":\"Dashboard_details__1rU-L\",\"detail-item\":\"Dashboard_detail-item__3KSnH\",\"label\":\"Dashboard_label__1K4-z\",\"content\":\"Dashboard_content__2Zqqy\",\"action\":\"Dashboard_action__1LooX\",\"ticket-list\":\"Dashboard_ticket-list__3x5rn\",\"completed_task\":\"Dashboard_completed_task__3-uA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2JIh5\",\"table\":\"ProfessionalFeeList_table__2LQEU\",\"table-header\":\"ProfessionalFeeList_table-header__2OzH0\",\"table-description\":\"ProfessionalFeeList_table-description__28jUE\",\"add-link\":\"ProfessionalFeeList_add-link__35a_-\",\"row\":\"ProfessionalFeeList_row__2-_LK\",\"align\":\"ProfessionalFeeList_align__32hEA\",\"center\":\"ProfessionalFeeList_center__1SWoN\",\"right\":\"ProfessionalFeeList_right__1vR9f\",\"table-total\":\"ProfessionalFeeList_table-total__1lDQJ\",\"caption\":\"ProfessionalFeeList_caption__33xCy\",\"amount\":\"ProfessionalFeeList_amount__2dpID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__Y-B2-\",\"input\":\"BaseDetails_input__2Mx_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__JGJMu\",\"contract-id\":\"SideBar_contract-id__3nF6_\",\"id\":\"SideBar_id__3bO4v\",\"plan-types\":\"SideBar_plan-types__gAyTx\",\"node\":\"SideBar_node__3K3Dx\",\"benefit-label\":\"SideBar_benefit-label__1EcTO\",\"selected\":\"SideBar_selected__3Yeld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTextField_root__12dTT\",\"label\":\"CustomTextField_label__2aunG\",\"wrapper\":\"CustomTextField_wrapper__3YBGm\",\"read-only-value\":\"CustomTextField_read-only-value__26nQ7\",\"text-field\":\"CustomTextField_text-field__c2000\",\"form-control\":\"CustomTextField_form-control__2n1zh\",\"input\":\"CustomTextField_input__NKim1\",\"input-amount\":\"CustomTextField_input-amount__35U02\",\"end-adornment\":\"CustomTextField_end-adornment__2JrSO\",\"select\":\"CustomTextField_select__2C-TW\",\"focus\":\"CustomTextField_focus__S1_hl\",\"has-error\":\"CustomTextField_has-error__3dF7R\",\"error\":\"CustomTextField_error__1cHzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__42Rd3\",\"groups\":\"ProcedureForm_groups__2ZpFn\",\"input\":\"ProcedureForm_input__2L5en\",\"buttons\":\"ProcedureForm_buttons__rHNJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__mMTrP\",\"groups\":\"HospitalItemForm_groups__1fNtv\",\"first-item\":\"HospitalItemForm_first-item__15WZA\",\"input\":\"HospitalItemForm_input__1Wo8l\",\"buttons\":\"HospitalItemForm_buttons__3RCkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__1HBs_\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__GUidY\",\"discrepancy\":\"DiscrepancyBase_discrepancy__3xf0j\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__UYnw8\",\"with-margin\":\"DiscrepancyBase_with-margin__3xajx\",\"icon\":\"DiscrepancyBase_icon__1N9rI\",\"display-hidden\":\"DiscrepancyBase_display-hidden__3qbGn\",\"display-none\":\"DiscrepancyBase_display-none__wXzuv\",\"message\":\"DiscrepancyBase_message__36Loi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__3eq0p\",\"title\":\"BundlePage_title__3x58L\",\"root\":\"BundlePage_root__283i3\",\"list-header\":\"BundlePage_list-header__1GBCu\",\"actions\":\"BundlePage_actions__3H3cL\",\"bundle-details\":\"BundlePage_bundle-details__3EFVt\",\"batch-list\":\"BundlePage_batch-list__26oBP\",\"table-container\":\"BundlePage_table-container__1J8nf\",\"buttonWrapper\":\"BundlePage_buttonWrapper__1xA20\",\"delete-button\":\"BundlePage_delete-button__2HQIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__2MQLQ\",\"header\":\"CptTextField_header__1_r1n\",\"description\":\"CptTextField_description__2gowQ\",\"code\":\"CptTextField_code__1X5xt\",\"wrapper\":\"CptTextField_wrapper__FUZKz\",\"sub-wrapper\":\"CptTextField_sub-wrapper__1kK97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__2P-u0\",\"header\":\"HospitalItemTextField_header__3RDWG\",\"description\":\"HospitalItemTextField_description__GCnjW\",\"code\":\"HospitalItemTextField_code__17rmf\",\"wrapper\":\"HospitalItemTextField_wrapper__pOk2y\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__3CoSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2nDq_\",\"groups\":\"DentalProcedureForm_groups__5_KFi\",\"input\":\"DentalProcedureForm_input__2zhFS\",\"buttons\":\"DentalProcedureForm_buttons__2RrEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__ZLfuZ\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__2TA8h\",\"disapproved\":\"DisapprovedLabel_disapproved__1QF0_\",\"icon-container\":\"DisapprovedLabel_icon-container__1inxJ\",\"message\":\"DisapprovedLabel_message__3Vqzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__20AOh\",\"error\":\"LoginPage_error__XJ7jz\",\"hidden\":\"LoginPage_hidden__1MHLH\",\"form\":\"LoginPage_form__-BU2g\",\"forgot-password\":\"LoginPage_forgot-password__uijLo\",\"logo\":\"LoginPage_logo__2L8u9\",\"note\":\"LoginPage_note__2phGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__31XgN\",\"header-container\":\"ViewList_header-container__1VZFJ\",\"header\":\"ViewList_header__3IJWI\",\"title\":\"ViewList_title__153PR\",\"content\":\"ViewList_content__3EBp-\",\"search\":\"ViewList_search__2T4Ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__fOI8L\",\"header-container\":\"ViewList_header-container__15b2V\",\"header\":\"ViewList_header__2yDtP\",\"title\":\"ViewList_title__6qHH5\",\"content\":\"ViewList_content__2wIcJ\",\"search\":\"ViewList_search__q7CsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__1c-fP\",\"header\":\"Exclusions_header__OkiLT\",\"body\":\"Exclusions_body__1TznK\",\"plan-types\":\"Exclusions_plan-types__3nG3V\",\"type\":\"Exclusions_type__1Sf42\",\"table\":\"Exclusions_table__3R1PL\",\"hidden\":\"Exclusions_hidden__3njgG\",\"search\":\"Exclusions_search__11bGt\",\"cell\":\"Exclusions_cell__1Xs8u\",\"center\":\"Exclusions_center__38xwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__RSkYA\",\"header-container\":\"ViewList_header-container__w5NIm\",\"header\":\"ViewList_header__3IQsQ\",\"title\":\"ViewList_title__35fAO\",\"content\":\"ViewList_content__Qwry5\",\"search\":\"ViewList_search__Wyc_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2_z8r\",\"header-container\":\"ViewList_header-container__3WWag\",\"header\":\"ViewList_header__2HSe-\",\"title\":\"ViewList_title__2UVK4\",\"content\":\"ViewList_content__3eP6Y\",\"search\":\"ViewList_search__zJncR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1Rq6u\",\"header-container\":\"ViewList_header-container__2Eafb\",\"header\":\"ViewList_header__NF-fk\",\"title\":\"ViewList_title__2u8uB\",\"content\":\"ViewList_content__1yUtF\",\"search\":\"ViewList_search__23Ay-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1wvHu\",\"header-container\":\"ViewList_header-container__12mEX\",\"header\":\"ViewList_header__3OBrG\",\"title\":\"ViewList_title__33FCj\",\"content\":\"ViewList_content__11fI4\",\"search\":\"ViewList_search__32xl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__2H6Pb\",\"title\":\"Error_title__3ihbU\",\"message\":\"Error_message__3I8g1\",\"action-messages\":\"Error_action-messages__1rqtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__2NmED\",\"title\":\"ContractRange_title__E_hT6\",\"input\":\"ContractRange_input__3ff6N\",\"label\":\"ContractRange_label__1ekKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__47GqK\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1ojI4\",\"has-error\":\"DiagnosisList_has-error__22b9S\",\"title\":\"DiagnosisList_title__3pos_\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__TpP98\",\"error\":\"DiagnosisList_error__21k61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__2bnaD\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__3xFhl\",\"has-error\":\"DiagnosisList_has-error__1uomu\",\"title\":\"DiagnosisList_title__kXt5P\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2PTFb\",\"error\":\"DiagnosisList_error__35W7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__3fun1\",\"title\":\"ClaimListHeader_title__WJLB-\",\"wrapper\":\"ClaimListHeader_wrapper__1F29R\",\"button\":\"ClaimListHeader_button__1wjAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__1QyJD\",\"wrapper\":\"Benefits_wrapper__2jR0h\",\"left-side\":\"Benefits_left-side__3MVYf\",\"title\":\"Benefits_title__RhMcW\",\"right-side\":\"Benefits_right-side__3VGXh\",\"center\":\"Benefits_center__2tHRK\"};","module.exports = Object.freeze({\n  logo: 'https://intellicare.net.ph/wp-content/uploads/Intellicare_green-play.png',\n  avatar: 'https://avatars.sched.co/a/c0/7249803/avatar.jpg?479',\n  pokeball: 'https://upload.wikimedia.org/wikipedia/en/3/39/Pokeball.PNG'\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HeaderComponent_root__1P3pT\",\"left-container\":\"HeaderComponent_left-container__3Dcw_\",\"right-container\":\"HeaderComponent_right-container__1OYZu\",\"avatar\":\"HeaderComponent_avatar__7kjfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__134XU\",\"tiles\":\"Dashboard_tiles__3-cNn\",\"task-tray\":\"Dashboard_task-tray__1XF4s\",\"list-item\":\"Dashboard_list-item__3qy0B\",\"details\":\"Dashboard_details__15s7s\",\"detail-item\":\"Dashboard_detail-item__3IHwo\",\"label\":\"Dashboard_label__1DKDf\",\"content\":\"Dashboard_content__2wA9x\",\"action\":\"Dashboard_action__2y9Fa\",\"ticket-list\":\"Dashboard_ticket-list__DOG3i\",\"completed_task\":\"Dashboard_completed_task__3owpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2sYb8\",\"tiles\":\"Dashboard_tiles__E_4-O\",\"task-tray\":\"Dashboard_task-tray__2VDQD\",\"list-item\":\"Dashboard_list-item__ppY3e\",\"details\":\"Dashboard_details__332wx\",\"detail-item\":\"Dashboard_detail-item__umKEs\",\"label\":\"Dashboard_label__2cGs-\",\"content\":\"Dashboard_content__2-Sut\",\"action\":\"Dashboard_action__h_HAI\",\"ticket-list\":\"Dashboard_ticket-list__1QobE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__255TG\",\"claims-container\":\"BatchPage_claims-container__3h3TE\",\"footer\":\"BatchPage_footer__1Jf_V\",\"actions\":\"BatchPage_actions__11khZ\",\"delete-button\":\"BatchPage_delete-button__1Qc1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1uEiL\",\"tiles\":\"Dashboard_tiles__1p7ax\",\"task-tray\":\"Dashboard_task-tray__12TWB\",\"list-item\":\"Dashboard_list-item__2SveG\",\"details\":\"Dashboard_details__2WxhK\",\"detail-item\":\"Dashboard_detail-item__30PKn\",\"label\":\"Dashboard_label__3e3j4\",\"content\":\"Dashboard_content__2lI50\",\"action\":\"Dashboard_action__3Q66h\",\"ticket-list\":\"Dashboard_ticket-list__3VZn-\",\"completed_task\":\"Dashboard_completed_task__2KLLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__108O5\",\"tiles\":\"Dashboard_tiles__1UqHd\",\"task-tray\":\"Dashboard_task-tray__13jCx\",\"list-item\":\"Dashboard_list-item__1POQ4\",\"details\":\"Dashboard_details__2IkLS\",\"detail-item\":\"Dashboard_detail-item__3Y59v\",\"label\":\"Dashboard_label__2rLfF\",\"content\":\"Dashboard_content__2l1Kt\",\"action\":\"Dashboard_action__xbn6T\",\"ticket-list\":\"Dashboard_ticket-list__iE5Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__23ayB\",\"tiles\":\"Dashboard_tiles__33s9X\",\"task-tray\":\"Dashboard_task-tray__1uBpo\",\"list-item\":\"Dashboard_list-item__26TQ6\",\"details\":\"Dashboard_details__17s4J\",\"detail-item\":\"Dashboard_detail-item__3sS05\",\"label\":\"Dashboard_label__2pLvS\",\"content\":\"Dashboard_content__37CXM\",\"action\":\"Dashboard_action__Qvz0B\",\"ticket-list\":\"Dashboard_ticket-list__2d55k\",\"completed_task\":\"Dashboard_completed_task__Uz_lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2RzYz\",\"tiles\":\"Dashboard_tiles__1cs7I\",\"task-tray\":\"Dashboard_task-tray__2A2Ey\",\"list-item\":\"Dashboard_list-item__2fnpW\",\"details\":\"Dashboard_details__1Wp_8\",\"detail-item\":\"Dashboard_detail-item__30oox\",\"label\":\"Dashboard_label__15Y3V\",\"content\":\"Dashboard_content__fE3g4\",\"action\":\"Dashboard_action__5pEKU\",\"ticket-list\":\"Dashboard_ticket-list__klX7O\",\"completed_task\":\"Dashboard_completed_task__VoHmg\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 229;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"IcdCptStatus_root__VpDPD\",\"fetch\":\"IcdCptStatus_fetch__39I55\",\"success\":\"IcdCptStatus_success__1mWTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingComponent_root__2UfOh\",\"overlay\":\"LoadingComponent_overlay__21www\",\"loading\":\"LoadingComponent_loading__3PDNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageTitleComponent_root__3xaWu\",\"title\":\"PageTitleComponent_title__1Br2u\",\"status\":\"PageTitleComponent_status__2N8C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableFooterComponent_root__FICsV\",\"text\":\"TableFooterComponent_text__3VtIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"ValueField_field__3EGEH\",\"label\":\"ValueField_label__2SDLZ\",\"value\":\"ValueField_value__if9Zt\",\"center\":\"ValueField_center__37s1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfoComponent_root__3X0PJ\",\"header-container\":\"ReimbursementInfoComponent_header-container__2iqQ1\",\"header\":\"ReimbursementInfoComponent_header__wqfRq\",\"title\":\"ReimbursementInfoComponent_title__1KnEr\",\"content\":\"ReimbursementInfoComponent_content__13H5N\",\"basic-info\":\"ReimbursementInfoComponent_basic-info__2zrkK\",\"label\":\"ReimbursementInfoComponent_label__-5nVw\",\"collapsible-cell\":\"ReimbursementInfoComponent_collapsible-cell__wHNez\",\"container\":\"ReimbursementInfoComponent_container__2qC9R\",\"show-cell\":\"ReimbursementInfoComponent_show-cell__3yzF_\",\"cell\":\"ReimbursementInfoComponent_cell__1WCQD\",\"groups\":\"ReimbursementInfoComponent_groups__354nf\",\"input\":\"ReimbursementInfoComponent_input__2ORst\",\"reasons-container\":\"ReimbursementInfoComponent_reasons-container__336Zh\",\"delete\":\"ReimbursementInfoComponent_delete__2FSlo\",\"reasons\":\"ReimbursementInfoComponent_reasons__VdATs\",\"add-link\":\"ReimbursementInfoComponent_add-link__3uk2C\",\"empty-reasons\":\"ReimbursementInfoComponent_empty-reasons__OMf7M\",\"footer\":\"ReimbursementInfoComponent_footer__1lxo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3d9Cb\",\"wrapper\":\"Header_wrapper__11cP0\",\"groups\":\"Header_groups__1XNBo\",\"center\":\"Header_center__21GKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"Protected_main-container__26YI3\",\"sub-container\":\"Protected_sub-container__3hCgJ\",\"content\":\"Protected_content__1ikZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__7mMYd\",\"header\":\"Utilization_header__3-DmX\",\"graph\":\"Utilization_graph__jS7Y3\",\"anual-benefit\":\"Utilization_anual-benefit__PiGUz\",\"line-graph\":\"Utilization_line-graph__2pYxS\",\"container\":\"Utilization_container__2_WFM\",\"line-container\":\"Utilization_line-container__2ZwHO\",\"item\":\"Utilization_item__2nbS9\",\"line-details\":\"Utilization_line-details__3ShmM\",\"label\":\"Utilization_label__mglW7\",\"color\":\"Utilization_color__3-ICH\",\"search\":\"Utilization_search__Abs3z\",\"table\":\"Utilization_table__1HuJw\",\"cell\":\"Utilization_cell__uCofH\",\"icon\":\"Utilization_icon__3jhC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SnackbarComponent_root___7Fjo\",\"icon\":\"SnackbarComponent_icon__3G7pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BreadcrumbsComponent_root__tgbvN\",\"item\":\"BreadcrumbsComponent_item__U7DgC\",\"active\":\"BreadcrumbsComponent_active__2PIYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__3Rn65\",\"default-override\":\"ClaimList_default-override__1IClS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__fL0nk\",\"label\":\"ToothNumber_label__2QAUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__QsneL\",\"label\":\"ToothNumber_label__2Ge1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__21XST\",\"first-container\":\"ClaimReimbursement_first-container__2yvyO\",\"groups\":\"ClaimReimbursement_groups__3nZvd\",\"input\":\"ClaimReimbursement_input__1NZdS\",\"child-container\":\"ClaimReimbursement_child-container__3yEse\",\"tables-container\":\"ClaimReimbursement_tables-container__2uzwJ\",\"left-side\":\"ClaimReimbursement_left-side__3wgYg\",\"wrapper\":\"ClaimReimbursement_wrapper__3iC8w\",\"table\":\"ClaimReimbursement_table__2wVgm\",\"table-header\":\"ClaimReimbursement_table-header__2slfB\",\"table-description\":\"ClaimReimbursement_table-description__3LfKE\",\"add-link\":\"ClaimReimbursement_add-link__2JoUD\",\"row\":\"ClaimReimbursement_row__1UAk9\",\"align\":\"ClaimReimbursement_align__1Kdzp\",\"center\":\"ClaimReimbursement_center__216eV\",\"right\":\"ClaimReimbursement_right__2S_Vn\",\"table-total\":\"ClaimReimbursement_table-total__3nxWO\",\"caption\":\"ClaimReimbursement_caption__2CsGK\",\"amount\":\"ClaimReimbursement_amount__3ImWL\",\"right-side\":\"ClaimReimbursement_right-side__17tpL\",\"sticky\":\"ClaimReimbursement_sticky__105xy\",\"grand-total\":\"ClaimReimbursement_grand-total__2eO_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LimitTable_root__1DBjU\",\"header\":\"LimitTable_header__3wAD9\",\"groups\":\"LimitTable_groups__aoDPg\",\"field\":\"LimitTable_field__14Ts8\",\"label\":\"LimitTable_label__2e3n3\",\"value\":\"LimitTable_value__1kdIS\",\"table\":\"LimitTable_table__2yrPv\",\"hidden\":\"LimitTable_hidden__38TGg\",\"search\":\"LimitTable_search__YDrZQ\",\"cell\":\"LimitTable_cell__2qLyf\",\"footer\":\"LimitTable_footer__15g6g\",\"center\":\"LimitTable_center__69LSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__1sbBo\",\"first-container\":\"ClaimReimbursement_first-container__32uSx\",\"groups\":\"ClaimReimbursement_groups__241R5\",\"input\":\"ClaimReimbursement_input___OMPJ\",\"child-container\":\"ClaimReimbursement_child-container__2wtdp\",\"left-side\":\"ClaimReimbursement_left-side__1goqX\",\"right-side\":\"ClaimReimbursement_right-side__38MYX\",\"tables-container\":\"ClaimReimbursement_tables-container__249Qz\",\"wrapper\":\"ClaimReimbursement_wrapper__383Ih\",\"table\":\"ClaimReimbursement_table__1nj02\",\"table-header\":\"ClaimReimbursement_table-header__cQQ21\",\"table-description\":\"ClaimReimbursement_table-description__Pq9Hn\",\"add-link\":\"ClaimReimbursement_add-link__2dL38\",\"row\":\"ClaimReimbursement_row__2HCe3\",\"align\":\"ClaimReimbursement_align__j6IS3\",\"center\":\"ClaimReimbursement_center__S4RER\",\"right\":\"ClaimReimbursement_right__XeAFi\",\"table-total\":\"ClaimReimbursement_table-total__1pp3m\",\"caption\":\"ClaimReimbursement_caption__3TBP1\",\"amount\":\"ClaimReimbursement_amount__rKTYK\",\"sticky\":\"ClaimReimbursement_sticky__3BK9k\",\"grand-total\":\"ClaimReimbursement_grand-total__2N-VA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__19BwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__GmVH1\",\"buttonWrapper\":\"BatchList_buttonWrapper__2sLPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__2m6gY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3O8b6\",\"table\":\"ProcedureList_table__34qBa\",\"table-header\":\"ProcedureList_table-header__3QCTp\",\"table-description\":\"ProcedureList_table-description__3UuvP\",\"add-link\":\"ProcedureList_add-link__2AoGx\",\"row\":\"ProcedureList_row__2Ve69\",\"align\":\"ProcedureList_align__2tPN_\",\"center\":\"ProcedureList_center__1VjsQ\",\"right\":\"ProcedureList_right__3XCbT\",\"discrepancy\":\"ProcedureList_discrepancy__1e3X1\",\"icon-container\":\"ProcedureList_icon-container__oKXTC\",\"table-total\":\"ProcedureList_table-total__2mgqx\",\"caption\":\"ProcedureList_caption__1J0kr\",\"amount\":\"ProcedureList_amount__2l3h5\",\"groups\":\"ProcedureList_groups__3EVV6\",\"input\":\"ProcedureList_input__2KG3R\",\"buttons\":\"ProcedureList_buttons__3CyFH\",\"table-grid\":\"ProcedureList_table-grid__2A8iX\",\"message\":\"ProcedureList_message__9EJOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__J7-_W\",\"groups\":\"ProcedureForm_groups__1wdPR\",\"input\":\"ProcedureForm_input__3f_i3\",\"description\":\"ProcedureForm_description__EMxJT\",\"code\":\"ProcedureForm_code__3gj_c\",\"buttons\":\"ProcedureForm_buttons__23tX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__1nFYH\",\"table\":\"ProfessionalFeeList_table__2CEPY\",\"specialization\":\"ProfessionalFeeList_specialization__2Kfae\",\"table-header\":\"ProfessionalFeeList_table-header__1wYMV\",\"table-description\":\"ProfessionalFeeList_table-description__g9VS-\",\"add-link\":\"ProfessionalFeeList_add-link__3nrbv\",\"row\":\"ProfessionalFeeList_row__2xo9x\",\"align\":\"ProfessionalFeeList_align__30_8y\",\"center\":\"ProfessionalFeeList_center__UtGci\",\"right\":\"ProfessionalFeeList_right__2SABv\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1Z6g6\",\"icon-container\":\"ProfessionalFeeList_icon-container__4l6V-\",\"table-total\":\"ProfessionalFeeList_table-total__HUwbc\",\"caption\":\"ProfessionalFeeList_caption__2cbLV\",\"amount\":\"ProfessionalFeeList_amount__2kNXu\",\"groups\":\"ProfessionalFeeList_groups__1176s\",\"input\":\"ProfessionalFeeList_input__2yu47\",\"buttons\":\"ProfessionalFeeList_buttons__1VX4P\",\"table-grid\":\"ProfessionalFeeList_table-grid__2DNz5\",\"message\":\"ProfessionalFeeList_message__h8DGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__1CI_E\",\"escalate\":\"ClaimFooter_escalate__30D6D\",\"header-container\":\"ClaimFooter_header-container__1Btp5\",\"header\":\"ClaimFooter_header__1i337\",\"title\":\"ClaimFooter_title__1NAHG\",\"content\":\"ClaimFooter_content__2GZa0\",\"input\":\"ClaimFooter_input__1hfjc\",\"footer\":\"ClaimFooter_footer__2gbHe\",\"assign\":\"ClaimFooter_assign__3kn3z\",\"to\":\"ClaimFooter_to__nvPCx\",\"action\":\"ClaimFooter_action__mLFex\",\"reassign\":\"ClaimFooter_reassign__1xqIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__33sf3\",\"first-container\":\"ClaimInPatient_first-container__2gCZq\",\"groups\":\"ClaimInPatient_groups__1Cz9S\",\"input\":\"ClaimInPatient_input__3PUnj\",\"child-container\":\"ClaimInPatient_child-container__3OX0C\",\"left-side\":\"ClaimInPatient_left-side__3g4Tb\",\"right-side\":\"ClaimInPatient_right-side__1KzGH\",\"tables-container\":\"ClaimInPatient_tables-container__2Tsqm\",\"wrapper\":\"ClaimInPatient_wrapper__2mNR8\",\"table\":\"ClaimInPatient_table__2gn3O\",\"table-header\":\"ClaimInPatient_table-header__2Sx2G\",\"table-description\":\"ClaimInPatient_table-description__29Zrj\",\"add-link\":\"ClaimInPatient_add-link__1lGRd\",\"row\":\"ClaimInPatient_row__1D4Qo\",\"align\":\"ClaimInPatient_align__2Ulsn\",\"center\":\"ClaimInPatient_center__3RFf5\",\"right\":\"ClaimInPatient_right__VwgTV\",\"table-total\":\"ClaimInPatient_table-total__t7p16\",\"caption\":\"ClaimInPatient_caption__3GCDs\",\"amount\":\"ClaimInPatient_amount__3VBfV\",\"sticky\":\"ClaimInPatient_sticky__WMaZ7\",\"grand-total\":\"ClaimInPatient_grand-total__36ZNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__gOq60\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3wjKw\",\"groups\":\"ClaimOutPatientProcedure_groups__24jrj\",\"input\":\"ClaimOutPatientProcedure_input__32TiB\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2DP7G\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2PMEQ\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2iRHp\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__1ppZU\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1yzW0\",\"table\":\"ClaimOutPatientProcedure_table__1UC1e\",\"table-header\":\"ClaimOutPatientProcedure_table-header__3pQqV\",\"table-description\":\"ClaimOutPatientProcedure_table-description__1_UsW\",\"add-link\":\"ClaimOutPatientProcedure_add-link__3N6Uy\",\"row\":\"ClaimOutPatientProcedure_row__qUjSD\",\"align\":\"ClaimOutPatientProcedure_align__sHOF6\",\"center\":\"ClaimOutPatientProcedure_center__1xZu6\",\"right\":\"ClaimOutPatientProcedure_right__3tzvA\",\"table-total\":\"ClaimOutPatientProcedure_table-total__VEE5p\",\"caption\":\"ClaimOutPatientProcedure_caption__qSby4\",\"amount\":\"ClaimOutPatientProcedure_amount__1zvzk\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2Xd7-\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3bQu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1I6mc\",\"first-container\":\"ClaimOutPatientConsultation_first-container__5h6py\",\"groups\":\"ClaimOutPatientConsultation_groups__NQTI_\",\"input\":\"ClaimOutPatientConsultation_input__2R2_m\",\"child-container\":\"ClaimOutPatientConsultation_child-container__3eWe5\",\"left-side\":\"ClaimOutPatientConsultation_left-side__184gF\",\"right-side\":\"ClaimOutPatientConsultation_right-side__3o07W\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__3iJbh\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2ajzz\",\"table\":\"ClaimOutPatientConsultation_table__4pv54\",\"table-header\":\"ClaimOutPatientConsultation_table-header__3P4Jp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__2e6Hm\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1Ticr\",\"row\":\"ClaimOutPatientConsultation_row__1JvqS\",\"align\":\"ClaimOutPatientConsultation_align__makXE\",\"center\":\"ClaimOutPatientConsultation_center__3Ie9L\",\"right\":\"ClaimOutPatientConsultation_right__gTeyd\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3D0no\",\"caption\":\"ClaimOutPatientConsultation_caption__2MBir\",\"amount\":\"ClaimOutPatientConsultation_amount__3pIys\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1DAFY\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__1-tgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__3lESZ\",\"text-fields\":\"PaymentRequestPage_text-fields__2HVGB\",\"sub-container\":\"PaymentRequestPage_sub-container__3pZtL\",\"input-container\":\"PaymentRequestPage_input-container__1YBoN\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__SVU-e\",\"table-container\":\"PaymentRequestPage_table-container__13AOW\",\"headers\":\"PaymentRequestPage_headers__3Uo50\",\"header\":\"PaymentRequestPage_header__1bcNZ\",\"submit-header\":\"PaymentRequestPage_submit-header__1W0nt\",\"dialog-container\":\"PaymentRequestPage_dialog-container__3Iork\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__37_w4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__1uzvq\",\"groups\":\"ProfessionalFeeForm_groups__1znzB\",\"input\":\"ProfessionalFeeForm_input__1qWi3\",\"buttons\":\"ProfessionalFeeForm_buttons__3iX1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__28nD-\",\"header\":\"PartnerNetwork_header__2ivra\",\"search\":\"PartnerNetwork_search__2t7aN\",\"table\":\"PartnerNetwork_table__220LN\",\"hidden\":\"PartnerNetwork_hidden__tCf0J\",\"cell\":\"PartnerNetwork_cell__2Mv5F\",\"doctors\":\"PartnerNetwork_doctors__1POnD\",\"header-container\":\"PartnerNetwork_header-container__2qsSV\",\"title\":\"PartnerNetwork_title__2-tcg\",\"content\":\"PartnerNetwork_content__3UWZv\",\"center\":\"PartnerNetwork_center__wFHaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__2v-Iq\",\"first-container\":\"ClaimInPatient_first-container__OXZr8\",\"groups\":\"ClaimInPatient_groups__lcOua\",\"input\":\"ClaimInPatient_input__3jdIQ\",\"child-container\":\"ClaimInPatient_child-container__QIIuT\",\"tables-container\":\"ClaimInPatient_tables-container__LqKij\",\"left-side\":\"ClaimInPatient_left-side__Tq7gv\",\"wrapper\":\"ClaimInPatient_wrapper__ZH-92\",\"table\":\"ClaimInPatient_table__dew6o\",\"table-header\":\"ClaimInPatient_table-header__FsuTv\",\"table-description\":\"ClaimInPatient_table-description__1Fe9U\",\"add-link\":\"ClaimInPatient_add-link__346Cy\",\"row\":\"ClaimInPatient_row__2KCab\",\"align\":\"ClaimInPatient_align__1955S\",\"center\":\"ClaimInPatient_center__VQv4W\",\"right\":\"ClaimInPatient_right__3L7S3\",\"table-total\":\"ClaimInPatient_table-total__jZtXf\",\"caption\":\"ClaimInPatient_caption__1E9EL\",\"amount\":\"ClaimInPatient_amount__2KocC\",\"right-side\":\"ClaimInPatient_right-side__3ajwn\",\"sticky\":\"ClaimInPatient_sticky__2ebbG\",\"grand-total\":\"ClaimInPatient_grand-total__xFw4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__37MO9\",\"first-container\":\"ClaimOutPatientProcedure_first-container__13vV3\",\"groups\":\"ClaimOutPatientProcedure_groups__2gG1u\",\"input\":\"ClaimOutPatientProcedure_input__3AC30\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2u8xk\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__eGzg4\",\"left-side\":\"ClaimOutPatientProcedure_left-side__3C9TS\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__16Yv8\",\"table\":\"ClaimOutPatientProcedure_table__12U0M\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1JvHk\",\"table-description\":\"ClaimOutPatientProcedure_table-description__oSDoe\",\"add-link\":\"ClaimOutPatientProcedure_add-link__bxevU\",\"row\":\"ClaimOutPatientProcedure_row__2AgNm\",\"align\":\"ClaimOutPatientProcedure_align__2_YV2\",\"center\":\"ClaimOutPatientProcedure_center__D37q1\",\"right\":\"ClaimOutPatientProcedure_right__1XohB\",\"table-total\":\"ClaimOutPatientProcedure_table-total__1JfT3\",\"caption\":\"ClaimOutPatientProcedure_caption__zHxB5\",\"amount\":\"ClaimOutPatientProcedure_amount__2-LZR\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2fKwq\",\"sticky\":\"ClaimOutPatientProcedure_sticky__24mpW\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__1r2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__27aGh\",\"first-container\":\"ClaimOutPatientConsultation_first-container__2jxrr\",\"groups\":\"ClaimOutPatientConsultation_groups__3XWG-\",\"input\":\"ClaimOutPatientConsultation_input__62Yw0\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1FM9P\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__kpByP\",\"left-side\":\"ClaimOutPatientConsultation_left-side__2Fi3P\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2-nz3\",\"table\":\"ClaimOutPatientConsultation_table__3IuV2\",\"table-header\":\"ClaimOutPatientConsultation_table-header__BF9Bp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1ZXuv\",\"add-link\":\"ClaimOutPatientConsultation_add-link__2Qq6L\",\"row\":\"ClaimOutPatientConsultation_row__fXDHe\",\"align\":\"ClaimOutPatientConsultation_align__2_uM2\",\"center\":\"ClaimOutPatientConsultation_center__3k5RP\",\"right\":\"ClaimOutPatientConsultation_right__2-rsT\",\"table-total\":\"ClaimOutPatientConsultation_table-total__1MwcL\",\"caption\":\"ClaimOutPatientConsultation_caption__37p4X\",\"amount\":\"ClaimOutPatientConsultation_amount__2b19u\",\"right-side\":\"ClaimOutPatientConsultation_right-side__O3yFh\",\"sticky\":\"ClaimOutPatientConsultation_sticky__ToHiR\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__13Qul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2wVSO\",\"groups\":\"HospitalItemForm_groups__1Fg5M\",\"input\":\"HospitalItemForm_input__1mYF_\",\"description\":\"HospitalItemForm_description__14Kba\",\"code\":\"HospitalItemForm_code__2jYri\",\"buttons\":\"HospitalItemForm_buttons__37mLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3VPur\",\"root\":\"PdfViewer2_root__29H9D\",\"controls\":\"PdfViewer2_controls__2l3Du\",\"control\":\"PdfViewer2_control__3VcZS\",\"disabled\":\"PdfViewer2_disabled__bNT53\",\"pdf\":\"PdfViewer2_pdf__2PQdd\",\"page-number\":\"PdfViewer2_page-number__HnONp\",\"file-name\":\"PdfViewer2_file-name__1ruAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__15jC2\",\"table\":\"HospitalItemList_table__3yh5r\",\"table-header\":\"HospitalItemList_table-header__3RZl4\",\"table-description\":\"HospitalItemList_table-description__364M7\",\"add-link\":\"HospitalItemList_add-link__Xdz4i\",\"row\":\"HospitalItemList_row__1If2d\",\"align\":\"HospitalItemList_align__3ghha\",\"center\":\"HospitalItemList_center__3LdSG\",\"right\":\"HospitalItemList_right__2swK1\",\"discrepancy\":\"HospitalItemList_discrepancy__3KCEE\",\"icon-container\":\"HospitalItemList_icon-container__2YuKZ\",\"table-total\":\"HospitalItemList_table-total__zx-JI\",\"caption\":\"HospitalItemList_caption__37q7e\",\"amount\":\"HospitalItemList_amount__1uGS2\",\"groups\":\"HospitalItemList_groups__B6ozB\",\"input\":\"HospitalItemList_input__1lx7g\",\"buttons\":\"HospitalItemList_buttons__1PYeO\",\"table-grid\":\"HospitalItemList_table-grid__3rmkl\",\"message\":\"HospitalItemList_message__1XsB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__2RjZ-\",\"first-container\":\"ClaimEmergency_first-container__3U3WQ\",\"groups\":\"ClaimEmergency_groups__2XAPr\",\"input\":\"ClaimEmergency_input__gRc92\",\"child-container\":\"ClaimEmergency_child-container__NS33H\",\"left-side\":\"ClaimEmergency_left-side__NaeJ8\",\"right-side\":\"ClaimEmergency_right-side__1-rH1\",\"tables-container\":\"ClaimEmergency_tables-container__Udvra\",\"wrapper\":\"ClaimEmergency_wrapper__3AdEy\",\"table\":\"ClaimEmergency_table__zDVzz\",\"table-header\":\"ClaimEmergency_table-header__3OOKd\",\"table-description\":\"ClaimEmergency_table-description__JeGzv\",\"add-link\":\"ClaimEmergency_add-link__2cF2u\",\"row\":\"ClaimEmergency_row__1UVHF\",\"align\":\"ClaimEmergency_align__3Lhvw\",\"center\":\"ClaimEmergency_center__2fNnf\",\"right\":\"ClaimEmergency_right__2GSG2\",\"table-total\":\"ClaimEmergency_table-total__3Ryh1\",\"caption\":\"ClaimEmergency_caption__WVnQP\",\"amount\":\"ClaimEmergency_amount__YNnko\",\"sticky\":\"ClaimEmergency_sticky__2Kh0X\",\"grand-total\":\"ClaimEmergency_grand-total__2qSI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3DdFv\",\"first-container\":\"ClaimEmergency_first-container__2ExBv\",\"groups\":\"ClaimEmergency_groups___-BUP\",\"input\":\"ClaimEmergency_input__26-7y\",\"child-container\":\"ClaimEmergency_child-container__RkcSX\",\"tables-container\":\"ClaimEmergency_tables-container__2NU11\",\"left-side\":\"ClaimEmergency_left-side__3Ejv9\",\"wrapper\":\"ClaimEmergency_wrapper__2KVY3\",\"table\":\"ClaimEmergency_table__3b9Gx\",\"table-header\":\"ClaimEmergency_table-header__1VXvx\",\"table-description\":\"ClaimEmergency_table-description__Z5jRp\",\"add-link\":\"ClaimEmergency_add-link__g5KU5\",\"row\":\"ClaimEmergency_row__1WDes\",\"align\":\"ClaimEmergency_align__2TR6m\",\"center\":\"ClaimEmergency_center__1W0ME\",\"right\":\"ClaimEmergency_right__1XxHA\",\"table-total\":\"ClaimEmergency_table-total__1Gg-W\",\"caption\":\"ClaimEmergency_caption__1uZX4\",\"amount\":\"ClaimEmergency_amount__3lbzz\",\"right-side\":\"ClaimEmergency_right-side__2ecDG\",\"sticky\":\"ClaimEmergency_sticky__2QKl_\",\"grand-total\":\"ClaimEmergency_grand-total__SbpYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__282Ca\",\"first-container\":\"ClaimDental_first-container__3A9Fg\",\"groups\":\"ClaimDental_groups__10CFm\",\"input\":\"ClaimDental_input__aw-6O\",\"contract-range\":\"ClaimDental_contract-range__2VpO3\",\"chart\":\"ClaimDental_chart__2XPGT\",\"child-container\":\"ClaimDental_child-container__2XUY4\",\"tables-container\":\"ClaimDental_tables-container__Phg4z\",\"left-side\":\"ClaimDental_left-side__Njxq7\",\"wrapper\":\"ClaimDental_wrapper__2HG5j\",\"table\":\"ClaimDental_table__1pFMs\",\"table-header\":\"ClaimDental_table-header__mG3uP\",\"table-description\":\"ClaimDental_table-description__15-bq\",\"add-link\":\"ClaimDental_add-link__3goyc\",\"row\":\"ClaimDental_row___VONI\",\"align\":\"ClaimDental_align__xnj4s\",\"center\":\"ClaimDental_center__3hdRa\",\"right\":\"ClaimDental_right__1ETNp\",\"table-total\":\"ClaimDental_table-total__2X8Sh\",\"caption\":\"ClaimDental_caption__anFy9\",\"amount\":\"ClaimDental_amount__3eARb\",\"right-side\":\"ClaimDental_right-side__260cv\",\"sticky\":\"ClaimDental_sticky__27LBb\",\"grand-total\":\"ClaimDental_grand-total__3b_SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__jSz04\",\"wrapper\":\"ChatBox_wrapper__8Ky8P\",\"header\":\"ChatBox_header__2Jxo1\",\"title\":\"ChatBox_title__2o9Pe\",\"body\":\"ChatBox_body__3mZqA\",\"messages\":\"ChatBox_messages__3qxpg\",\"split\":\"ChatBox_split__3mlzt\",\"balloon\":\"ChatBox_balloon__3gLgq\",\"mheader\":\"ChatBox_mheader__180Pj\",\"sender\":\"ChatBox_sender__18Tx1\",\"time\":\"ChatBox_time__1ZHnb\",\"mbody\":\"ChatBox_mbody__17auY\",\"content\":\"ChatBox_content__m09Ig\",\"receive\":\"ChatBox_receive__1At1g\",\"me\":\"ChatBox_me__1pGgD\",\"placeholder\":\"ChatBox_placeholder__2If2H\"};","import { library } from '@fortawesome/fontawesome-svg-core'\n\n// ist of font that will use\nimport {\n  faHome,\n  faBoxOpen,\n  faBookOpen,\n  faTools,\n  faFileAlt,\n  faExclamationCircle,\n  faBalanceScale,\n  faEdit,\n  faTrash,\n  faSave,\n  faPrint,\n  faSearchPlus,\n  faSearchMinus,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faCalendarDay\n} from '@fortawesome/free-solid-svg-icons'\n\nconst FontAwesomeLibrary = {\n  init: () => {\n    library.add(\n      faHome,\n      faBoxOpen,\n      faBookOpen,\n      faTools,\n      faFileAlt,\n      faExclamationCircle,\n      faBalanceScale,\n      faEdit,\n      faTrash,\n      faSave,\n      faPrint,\n      faSearchPlus,\n      faSearchMinus,\n      faArrowAltCircleRight,\n      faArrowAltCircleLeft,\n      faCalendarDay\n    )\n  }\n}\n\nexport default FontAwesomeLibrary\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\n\nimport classes from './CustomTextField.module.scss'\nexport default function CustomTextField (props) {\n  const { label = '', required, readOnly, constainerStyle = {}, error, onChange, type, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n    if (typeof value === 'number') {\n      if (value <= 0) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = e => {\n    setError()\n    if (typeof onChange === 'function') onChange(e)\n  }\n\n  return (\n    <div className={classes.root} style={constainerStyle}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                type={type}\n                {...other}\n                onFocus={() => setFocus(true)}\n                autoComplete='off'\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './IcdCptStatus.module.scss'\n\nlet reset = null\nlet set = null\nconst IcdCptStatusComponent = () => {\n  const [data, setData] = React.useState({})\n\n  React.useEffect(() => {\n    reset = () => setData({})\n    set = values => {\n      if (typeof values === 'function') setData(values)\n      else setData(p => ({ ...p, ...values }))\n    }\n  }, [])\n\n  const success = () => {\n    const _success = data.cpt_fetched === data.cpt_total && data.icd10_fetched === data.icd10_total\n\n    if (_success) setTimeout(() => setData({}), 2000)\n\n    return _success\n  }\n\n  return (\n    <React.Fragment>\n      {data.show && (\n        <div className={classes.root}>\n          <p className={`${classes.fetch} ${success() && classes.success}`}>\n            <span>Status: </span>\n            {success() ? 'Success' : 'Fetching'}\n          </p>\n\n          <p>\n            <span>CPT: </span>\n            {data.cpt_fetched}/{data.cpt_total}\n          </p>\n          <p>\n            <span>ICD: </span>\n            {data.icd10_fetched}/{data.icd10_total}\n          </p>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst IcdCptStatusReset = () => {\n  reset()\n}\n\nconst IcdCptStatusSet = values => {\n  set(values)\n}\n\nexport { IcdCptStatusComponent, IcdCptStatusReset, IcdCptStatusSet }\n","export default function GenerateFormData (data) {\n  const formData = new FormData()\n  Object.keys(data).map((item, index) => {\n    if (Array.isArray(data[item])) {\n      data[item].map(_item => {\n        const value = typeof _item === 'object' ? JSON.stringify(_item) : _item\n        formData.append(`${item}[]`, value)\n      })\n    } else {\n      const value = typeof data[item] === 'object' ? JSON.stringify(data[item]) : data[item]\n      formData.append(item, value)\n    }\n  })\n\n  return formData\n}\n","export const setPageTitle = payload => {\n  return {\n    type: 'SET_DASHBOARD_PAGE_TITLE',\n    payload\n  }\n}\n","export const setSnackbar = payload => {\n  return {\n    type: 'SET_SNACKBAR',\n    payload\n  }\n}\n","export const setPdf = payload => {\n  return {\n    type: 'SET_PDF',\n    payload\n  }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertTitle from '@material-ui/lab/AlertTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSnackbar } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './SnackbarComponent.module.scss'\n\nlet dispatch = null\n\nconst SnackbarComponent = () => {\n  const snackbar = useSelector(state => state.snackbar)\n  dispatch = useDispatch()\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return\n\n    dispatch(setSnackbar({ open: false }))\n  }\n\n  return (\n    <Snackbar\n      className={classes.root}\n      open={snackbar.open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n    >\n      <div>\n        <Alert\n          elevation={6}\n          variant='filled'\n          severity={snackbar.severity}\n          action={\n            <IconButton aria-label='delete' className={classes.icon} onClick={handleClose}>\n              <CloseIcon fontSize='small' />\n            </IconButton>\n          }\n        >\n          <AlertTitle>Error</AlertTitle>\n          {snackbar.message}\n        </Alert>\n      </div>\n    </Snackbar>\n  )\n}\n\nconst SnackbarService = {\n  set: args => dispatch(setSnackbar(args))\n}\n\nexport { SnackbarComponent, SnackbarService }\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setpageLoading } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './LoadingComponent.module.scss'\n\nlet dispatch = null\n\nconst LoadingComponent = ({ onScrollContainer, containerNode }) => {\n  const [containerStyle, setContainerStyle] = React.useState({})\n\n  React.useEffect(() => {\n    if (containerNode) {\n      const { top, left } = containerNode.getBoundingClientRect()\n      setContainerStyle({ top: `${top}px`, left: `${left}px` })\n    }\n  }, [containerNode])\n\n  dispatch = useDispatch()\n  const loading = useSelector(state => state.pageLoading)\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.root} style={containerStyle} onWheel={onScrollContainer}>\n          <div className={classes.overlay} />\n          <CircularProgress className={classes.loading} size={50} />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst LoadingService = {\n  loading: value => dispatch(setpageLoading(value))\n}\n\nexport { LoadingComponent, LoadingService }\n","export const setpageLoading = payload => {\n  return {\n    type: 'SET_PAGE_LOADING',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst ErrorPage = props => {\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        Page not found\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        We cant seem to find the page you're looking for.\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst ErrorPageInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst ErrorPageService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { ErrorPageInit, ErrorPage, ErrorPageService }\n","const ExcludeErrorConstants = {\n  '404': 'X-404',\n  all: 'X-All'\n}\nconst exclude = ({ headers, status }) => !!headers[ExcludeErrorConstants[status]]\n\nexport { exclude, ExcludeErrorConstants }\n","import { SnackbarService } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { ErrorPageService } from 'SharedComponents/404/404'\n\nimport { exclude } from './exclude'\n\nconst handler = {\n  success: response => response,\n  fail: error => {\n    const { response, config } = error\n\n    if (!exclude({ headers: config.headers, status: 'all' })) {\n      if (response) {\n        const { status } = response\n\n        if (status >= 500 && status < 600) {\n          // Internal Server Error\n          SnackbarService.set({ open: true, message: 'Something went wrong!', severity: 'error' })\n        } else if (status === 404) {\n          // Resource not found\n          if (!exclude({ headers: response.config.headers, status })) {\n            ErrorPageService.redirect()\n          }\n        }\n      } else {\n        // No Internet\n        SnackbarService.set({ open: true, message: 'No internet connection!', severity: 'error' })\n      }\n    }\n\n    LoadingService.loading(false)\n\n    return Promise.reject(error)\n  }\n}\n\nexport default handler\n","import axios from 'axios'\nimport GenerateFormData from 'Utilities/GenerateFormData'\nimport ErrorHandler from 'Services/ErrorHandler'\n\nconst addToken = (data = {}) => !(data.hasOwnProperty('isAuthorized') && !data.isAuthorized)\n\nconst createInstance = (url = '') => {\n  let instance = axios.create()\n  let baseURL = null\n\n  instance.interceptors.request.use(request => {\n    // Do something before request is sent\n    if (!baseURL) {\n      baseURL = window.localStorage.partnerUrl\n        ? window.localStorage.partnerUrl + url\n        : `${process.env.REACT_APP_SERVER_API}${url}`\n\n      if (url === '/client' || url === '/icd') {\n        baseURL = window.localStorage.clientUrl || `${process.env.REACT_APP_CLIENT_API}/`\n        baseURL = baseURL.replace('/api/', '/')\n      }\n    }\n\n    request.baseURL = baseURL\n\n    const { data } = request\n\n    if (addToken(data)) request.headers['Authorization'] = `Bearer ${window.localStorage.getItem('token')}`\n\n    if (data) delete data.isAuthorized\n\n    if (data && !request.headers['skip_generate_form_data']) request.data = GenerateFormData(data)\n\n    // Check if login is made via hims-app and not awb-only app\n    // if (window.localStorage.getItem('hims_login') === 'true') {\n    //   request.headers['X-Hims-App'] = 'hims-app'\n    // }\n\n    return request\n  })\n\n  instance.interceptors.response.use(ErrorHandler.success, ErrorHandler.fail)\n\n  return instance\n}\n\nexport default createInstance\n","import instance from './instance'\nconst axios = instance()\nconst axiosClient = instance('/client')\nexport default class CommonServices {\n  // static login (data) {\n  //   return axios({\n  //     url: '/auth/login',\n  //     method: 'POST',\n  //     data: { ...data, isAuthorized: false }\n  //   })\n  // }\n\n  static login (data) {\n    return axiosClient({\n      url: '/api/login',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data: { ...data, isAuthorized: false }\n    })\n  }\n\n  static logout (data) {\n    return axiosClient({\n      url: '/api/logout',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data\n    })\n  }\n  static getMe (data) {\n    return axios({\n      url: '/me',\n      method: 'GET'\n    })\n  }\n}\n","export default class IndexedDb2 {\n  static async connect ({ dbName, stores = [], version = 1 }) {\n    return new Promise((resolve, reject) => {\n      let request = window.indexedDB.open(dbName /*, version */)\n\n      request.onupgradeneeded = function (event) {\n        const db = event.target.result\n\n        for (const store of stores) {\n          db.objectStoreNames.contains(store.name) || db.createObjectStore(store.name, { keyPath: store.keyPath })\n        }\n      }\n\n      request.onsuccess = function (event) {\n        const db = event.target.result\n        resolve(db)\n      }\n      request.onerror = function (event) {\n        console.log('[onerror]', request.error)\n        reject(request.error)\n      }\n    })\n  }\n\n  static async update ({ db, storeName, mode = 'readwrite', data }) {\n    const transaction = db.transaction(storeName, mode)\n    const objectStore = transaction.objectStore(storeName)\n    const { keyPath } = objectStore\n    for (let key in data) objectStore.put({ [keyPath]: key, value: data[key] })\n  }\n\n  static async add ({ db, storeName, mode = 'readwrite', data, mappings = null, item_success_insert }) {\n    let index = 0\n    const _add = () => {\n      if (index !== data.length) {\n        setTimeout(() => {\n          const transaction = db.transaction(storeName, mode)\n          const objectStore = transaction.objectStore(storeName)\n\n          const item = data[index]\n\n          if (item) {\n            const _item = mappings ? this.manipulateItem({ item, mappings }) : item\n            objectStore.add(_item)\n            if (item_success_insert) item_success_insert()\n          }\n\n          _add()\n          index++\n        }, 1)\n      }\n    }\n    _add()\n  }\n\n  static async clear ({ db, storeName, mode = 'readwrite' }) {\n    const transaction = db.transaction(storeName, mode)\n    const objectStore = transaction.objectStore(storeName)\n\n    return new Promise(resolve => {\n      objectStore.clear().onsuccess = event => {\n        resolve()\n      }\n    })\n  }\n\n  static manipulateItem ({ item, mappings }) {\n    const additional_data = {}\n    for (const mapping of mappings) {\n      const { from, to } = mapping\n\n      try {\n        additional_data[to] = item[from]\n      } catch (error) {\n        console.log(error)\n        console.log(item)\n        additional_data[to] = Date.now()\n      }\n    }\n    return { ...item, ...additional_data }\n  }\n\n  static async getData ({ db, storeName }) {\n    const transaction = db.transaction(storeName, 'readonly')\n    const objectStore = transaction.objectStore(storeName)\n\n    return new Promise(resolve => {\n      objectStore.getAll().onsuccess = function (event) {\n        resolve(event.target.result)\n      }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/icd')\n\nexport default class CPT_ICDServices {\n  static getMany ({ type, limit, skip }) {\n    return axios({\n      url: `/api/${type}?filter={\"limit\":${limit}, \"skip\":${skip}}`,\n      method: 'GET'\n    })\n  }\n}\n","import IndexedDb2 from 'Utilities/IndexedDb2'\nimport CPT_ICDServices from 'Services/Api/CPT_ICDServices'\nconst dbName = 'himsDb'\nconst stores = [\n  { name: 'user_data', keyPath: ['key'] },\n  { name: 'config', keyPath: ['key'] },\n  { name: 'cpt', keyPath: ['key'] },\n  { name: 'cpt_list', keyPath: ['_id', 'label'] },\n  { name: 'icd10', keyPath: ['key'] },\n  { name: 'icd10_list', keyPath: ['_id', 'full_code', 'full_description'] }\n]\n\nexport default class ConfigController2 {\n  static async getUserManagementData () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'user_data' })\n\n    if (!result.length) return\n\n    let user_data = {}\n\n    for (let i of result) user_data[i.key] = i.value\n\n    return user_data\n  }\n\n  static async setUserManagementData (data) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    await IndexedDb2.update({ db, storeName: 'user_data', data })\n  }\n\n  static async clearUserManagementData (data) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    await IndexedDb2.clear({ db, storeName: 'user_data' })\n  }\n\n  static async initializeBaseUrls () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'config' })\n\n    if (!result.length) return\n\n    let config = {}\n\n    for (let i of result) config[i.key] = i.value\n\n    if (config['PARTNER_URL']) {\n      // window.localStorage.partnerUrl = config['PARTNER_URL']\n    }\n\n    if (config['CLIENT_URL']) {\n      // window.localStorage.clientUrl = config['CLIENT_URL']\n    }\n  }\n\n  static async updateCPT_ICD ({ cpt, icd10, IcdCptStatusSet }) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let stored_cpt = await IndexedDb2.getData({ db, storeName: 'cpt' })\n    let stored_icd10 = await IndexedDb2.getData({ db, storeName: 'icd10' })\n\n    if (!stored_cpt.length || !stored_icd10.length) {\n      await IndexedDb2.update({ db, storeName: 'cpt', data: cpt })\n      await IndexedDb2.update({ db, storeName: 'icd10', data: icd10 })\n      this.setCPT_ICD({ IcdCptStatusSet, cpt_count: cpt.count, icd10_count: icd10.count })\n    }\n  }\n\n  static async setCPT_ICD ({ IcdCptStatusSet, cpt_count, icd10_count }) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    const data_limit = process.env.REACT_APP_LIMIT_ICD_CPT ? parseInt(process.env.REACT_APP_LIMIT_ICD_CPT) : -1\n\n    if (!db) return\n\n    let already_fetched = {}\n\n    IcdCptStatusSet({\n      show: true,\n      cpt_fetched: 0,\n      cpt_total: data_limit > cpt_count || data_limit === -1 ? cpt_count : data_limit,\n      icd10_fetched: 0,\n      icd10_total: data_limit > icd10_count || data_limit === -1 ? icd10_count : data_limit\n    })\n\n    const fetchMore = async (args = {}) => {\n      let { type, collectrion_name, limit = 2000, skip = 0, mappings } = args\n\n      const item_success_insert = () => {\n        IcdCptStatusSet(p => {\n          const name = `${collectrion_name}_fetched`\n          return {\n            ...p,\n            [name]: p[name] + 1\n          }\n        })\n      }\n      CPT_ICDServices.getMany({ type, limit, skip }).then(async ({ data }) => {\n        await IndexedDb2.add({ db, storeName: `${collectrion_name}_list`, data, mappings, item_success_insert })\n\n        if (!already_fetched[type]) already_fetched[type] = 0\n\n        already_fetched[type] += data.length\n\n        if (data.length < limit) return\n\n        if (data_limit === -1) {\n          fetchMore({ ...args, skip: already_fetched[type] })\n        } else if (already_fetched[type] < data_limit) {\n          const remaining = data_limit - already_fetched[type]\n\n          const _limit = remaining > 2000 ? 2000 : remaining\n          fetchMore({ ...args, skip: already_fetched[type], limit: _limit })\n        }\n      })\n    }\n\n    const limit = data_limit > -1 && data_limit < 2000 ? data_limit : 2000\n\n    fetchMore({ type: 'icd10-codes', collectrion_name: 'icd10', limit })\n    fetchMore({ type: 'cpts', collectrion_name: 'cpt', mappings: [{ from: 'description', to: 'label' }], limit })\n  }\n}\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n// import TextField from '@material-ui/core/TextField'\n// import Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\n\nimport { IcdCptStatusComponent, IcdCptStatusReset, IcdCptStatusSet } from 'SharedComponents/IcdCptStatus/IcdCptStatus'\n\nimport { to } from 'await-to-js'\nimport CommonServices from 'Services/Api/CommonServices'\n\n// import { ConfigController } from 'Controllers/ConfigController'\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nimport classes from './LoginPage.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function LoginPage ({ history }) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [user, setUser] = React.useState({ username: '', password: '' })\n  const [loginError, setLoginError] = React.useState({\n    show: false,\n    message: ''\n  })\n\n  React.useEffect(() => {\n    IcdCptStatusReset()\n    document.title = 'HIMS - Login'\n  }, [])\n\n  const submit = async event => {\n    event.preventDefault()\n    setDisableControls(true)\n\n    const [err, res] = await to(CommonServices.login(user))\n\n    if (err) {\n      setDisableControls(false)\n      let message = 'Login Failed!'\n      try {\n        message = err.response.data.message\n      } catch (ex) {}\n\n      setLoginError({ show: true, message: message })\n    } else {\n      const { login, icd10, cpt } = res.data\n\n      await ConfigController2.setUserManagementData(login)\n\n      ConfigController2.updateCPT_ICD({ icd10, cpt, IcdCptStatusSet })\n\n      window.localStorage.setItem('from_login', true)\n      history.push('/')\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {' '}\n      <Grid container>\n        <Grid item container xs={8} />\n        <Grid item container xs={3} direction='column' justify='center' alignItems='flex-start'>\n          <Grid item container className={classes.logo} alignItems='flex-end' justify='center'>\n            <img src={images.logo} alt='logo' />\n          </Grid>\n          <Grid item>\n            <Paper className={classes.container}>\n              <Typography variant='h5'>Intellicare HIMS</Typography>\n\n              <Typography variant='caption' className={`${classes.error} ${!loginError.show ? classes.hidden : ''}`}>\n                {loginError.message}\n              </Typography>\n\n              <form className={classes.form}>\n                <CustomTextField\n                  id='username'\n                  label='Username'\n                  disabled={disableControls}\n                  onChange={e => setUser({ ...user, username: e.target.value })}\n                />\n\n                <CustomTextField\n                  id='password'\n                  label='Password'\n                  type='password'\n                  disabled={disableControls}\n                  onChange={e => setUser({ ...user, password: e.target.value })}\n                />\n\n                <Button\n                  type='submit'\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  disabled={disableControls}\n                  onClick={submit}\n                >\n                  Login\n                </Button>\n\n                <div className={classes['forgot-password']}>\n                  <Link href='https://fb.com'>Forgot your password?</Link>\n                </div>\n              </form>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Typography className={classes.note}>\n              Problems logging in? Please <a href='./'>contact your IT Team</a> for assistance.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* Initialize CPT ICD Progress */}\n      <IcdCptStatusComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\n\n// Styles\nimport styles from './HeaderComponent.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function HeaderComponent ({ logout }) {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  return (\n    <Grid item container className={styles.root}>\n      <Grid item className={styles['left-container']}>\n        <img src={images.logo} alt='logo' />\n      </Grid>\n      <Grid item className={styles['right-container']}>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n\n        <Avatar alt='avatar' src={images.avatar} className={styles.avatar} />\n        <IconButton\n          aria-controls='simple-menu'\n          aria-haspopup='true'\n          onClick={event => setAnchorEl(event.currentTarget)}\n        >\n          <ArrowDropDown />\n        </IconButton>\n\n        <Menu\n          id='header-menu'\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          keepMounted\n          onClose={() => setAnchorEl(null)}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSidebarItems } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './SideBarComponent.module.scss'\n\nlet dispatch = null\n\nconst SideBarComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.sidebar)\n\n  return (\n    <div className={classes.root}>\n      <Scrollbars className={classes.menu}>\n        {items.map(item => (\n          <Link to={item.to} className={classes.item} key={item.to}>\n            <div className={classes.circle}>\n              <FontAwesomeIcon icon={item.icon} className={classes.icon} />\n            </div>\n            {item.label ? <span className={classes.text}>{item.label}</span> : ''}\n          </Link>\n        ))}\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='tools' className={classes.icon} />\n          </div>\n          <span className={classes.text}>Settings</span>\n        </Link>\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='book-open' className={classes.icon} />\n          </div>\n          {/* <span className={classes.text}>Settings</span> */}\n        </Link>\n      </Scrollbars>\n    </div>\n  )\n}\n\nconst SideBarService = {\n  setItems: items => {\n    dispatch(setSidebarItems(items))\n  }\n}\n\nexport { SideBarComponent, SideBarService }\n","export const setSidebarItems = payload => {\n  return {\n    type: 'SET_SIDEBAR_ITEMS',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageTitle } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './PageTitleComponent.module.scss'\n\nlet dispatch = null\n\nconst PageTitleComponent = () => {\n  dispatch = useDispatch()\n  const pageTitle = useSelector(state => state.pageTitle)\n  return (\n    <div className={classes.root}>\n      <Typography variant='h6' className={classes.title} id='dashboard-page-title'>\n        {pageTitle.text}\n      </Typography>\n\n      {pageTitle.status && (\n        <span\n          className={`${classes.status}`}\n          style={{ color: pageTitle.status.color, borderColor: pageTitle.status.color }}\n        >\n          {pageTitle.status.text}\n        </span>\n      )}\n    </div>\n  )\n}\n\nconst PageTitleService = (text, status = null) => {\n  dispatch(setPageTitle({ text, status }))\n}\n\nexport { PageTitleComponent, PageTitleService }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setBreadcrumbsItems, setSelectedBreadcrumbs } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './BreadcrumbsComponent.module.scss'\n\nlet dispatch = null\n\nconst BreadcrumbsComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.breadcrumbs.selected)\n  return (\n    <Breadcrumbs aria-label='breadcrumb' className={classes.root}>\n      {items.map((item, index) => {\n        if (index !== items.length - 1) {\n          return (\n            <Link to={item.to} className={classes.item} key={index}>\n              <Typography variant='body2'>{item.text}</Typography>\n            </Link>\n          )\n        } else {\n          return (\n            <Typography color='textPrimary' variant='body2' key={index}>\n              {item.text}\n            </Typography>\n          )\n        }\n      })}\n    </Breadcrumbs>\n  )\n}\n\nconst BreadcrumbsService = {\n  setItems: items => dispatch(setBreadcrumbsItems(items)),\n  setSelectedItems: items => dispatch(setSelectedBreadcrumbs(items))\n}\n\nexport { BreadcrumbsComponent, BreadcrumbsService }\n","export const setBreadcrumbsItems = payload => {\n  return {\n    type: 'SET_BREADCRUMBS_ITEMS',\n    payload\n  }\n}\n\nexport const setSelectedBreadcrumbs = payload => {\n  return {\n    type: 'SET_SELECTED_BREADCRUMBS',\n    payload\n  }\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfViewer2Component = () => {\n  dispatch = useDispatch()\n\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n\n  React.useEffect(() => {\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n    setFile()\n  }\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <Dialog fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        <div className={classes.root}>\n          <div className={classes.controls}>\n            <Typography className={classes['file-name']} align='left'>\n              {name}\n            </Typography>\n            <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n            <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom in' className={classes.control}>\n              <span>\n                <IconButton onClick={() => setScale(scale + 0.2)}>\n                  <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom out' className={classes.control}>\n              <span>\n                <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n                  <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={print}>\n                  <FontAwesomeIcon icon='print' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={download}>\n                  <FontAwesomeIcon icon='save' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </div>\n\n          <div className={classes.pdf}>\n            <Document\n              file={file}\n              onLoadSuccess={document => {\n                setNumPages(document.numPages)\n              }}\n            >\n              <Page pageNumber={pageNumber} scale={scale} />\n            </Document>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Component, PdfViewer2Service }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n      />\n    </Paper>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nexport { CurrencyFormatter, DigitFormatter, UpperWord, DateFormatter, DateFormatterFromNow }\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for bundle number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    {category === 'created' && 'Update'}\n                    {category === 'submitted' && 'View'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport moment from 'moment'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [bundles, setBundles] = React.useState({\n    created: { count: 0, data: [] },\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Created Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'created', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const createdBundles = batchResponse.data.data.results\n\n      const createdBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, created: { data: createdBundles, count: createdBundleCount } }))\n    })\n\n    //* Submitted Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'submitted', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const submittedBundles = batchResponse.data.data.results\n\n      const submittedBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, submitted: { data: submittedBundles, count: submittedBundleCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    BatchEncodingServices.getBundles({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBundles(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Bundles`), category })\n    BatchEncodingServices.getBundles({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingServices.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: bundles.created.count, id: 'created-count' }}\n              sizes={{ sm: 12 }}\n              title='Created Bundles'\n              id='created-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('created')}\n                  id='created-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              actionHeader={\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  onClick={generateBundleNumber}\n                  id='create-new-bundle'\n                >\n                  Create New Bundle\n                </Button>\n              }\n              onFilterChange={handleFilterChange('created')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='created-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='created-due-date'>Due Date</TableCell>\n                    <TableCell id='created-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.created.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`created-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                            Update\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: bundles.submitted.count, id: 'submitted-count' }}\n              sizes={{ sm: 12 }}\n              title='Submitted Bundles'\n              id='submitted-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('submitted')}\n                  id='submitted-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('submitted')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='submitted-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='submitted-due-date'>Due Date</TableCell>\n                    <TableCell id='submitted-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.submitted.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`submitted-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={0}\n            title='Open Tickets'\n            // viewAll={{ to: '/batches?category=open', caption: 'View List' }}\n            viewAllLink={{ to: '/batches?category=open', caption: '' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const { id, label, required, value, format, readOnly, onChange, error, tabindex, ...other } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const CalendarButtonRef = React.useRef()\n\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n\n    let activeElement = null\n\n    setTimeout(() => {\n      activeElement = document.activeElement\n      setFocus(false)\n      setTimeout(() => {\n        CalendarButtonRef.current.focus()\n        activeElement.focus()\n      }, 10)\n    }, 10)\n  }\n\n  const handleKeyDown = event => {\n    if (event.key === 'Tab') setTimeout(() => CalendarButtonRef.current.focus(), 1)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      onKeyDown={handleKeyDown}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        ref={CalendarButtonRef}\n                        className={classes.button}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                // {...other}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {checkAll && (\n                  <TableCell padding='checkbox'>\n                    {allowCheck ? (\n                      <Checkbox\n                        disabled={allowCheckDisabled}\n                        indeterminate={indeterminate}\n                        checked={checked}\n                        onChange={handleSelectAllClick}\n                        color={checkboxColor}\n                      />\n                    ) : null}\n                  </TableCell>\n                )}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button onClick={onCancel} variant='contained' color='primary' className='button-negative'>\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button onClick={onOk} variant='contained' color='primary' className='button-positive' autoFocus>\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    onOpen,\n    deleteStatus,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        allowCheck\n        allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                  <Checkbox\n                    color='default'\n                    disabled={Boolean(isBundleCompleted)}\n                    checked={i.selected}\n                    onClick={event => handleClick({ index, batch })}\n                  />\n                </TableCell>\n                <TableCell id={`batch-no-${i.batch_number}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {!deleteStatus && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const { id, label = '', required, items = [], readOnly, onChange, disableComponents = false, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              <Select\n                id={id}\n                onChange={handleChange}\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                classes={{ root: classes.select }}\n                input={<InputBase className={classes.input} />}\n                {...other}\n                disabled={disableComponents}\n              >\n                {items.map((item, index) => (\n                  <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                    {item.text}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export const setSelectedBatch = payload => {\n  return {\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setShowBatchForm, setSelectedBatch } from '../../Store/actions'\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(state => state.batch.selected)\n  const show = useSelector(state => state.batch.show)\n  const action = useSelector(state => state.batch.action)\n  const suggestions = useSelector(state => state.suggestions)\n  const saveControl = useSelector(state => state.batch.saveControl)\n\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from '../../Components/BundleDetails/BundleDetails'\nimport BatchList from '../../Components/BatchList/BatchList'\nimport BatchForm from '../../Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} from '../../Store/actions'\n\n// Validator\nimport BundleValidator from './BundleValidator'\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n      BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  const cancelBundle = () => props.history.push(`/`)\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    console.log(error)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent />\n              {bundle.status === 'IN_PROGRESS' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              deleteStatus={submitStatus}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={() =>\n                  setOpenBundleDialog(state => ({\n                    ...state,\n                    show: true,\n                    message: 'Are you sure you want to submit?',\n                    handleOnOk: handleOnSubmit\n                  }))\n                }\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field, selectedIndex } = args\n    console.log(args)\n    setNewBundle(state => ({ ...state, [field]: value }))\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-bundle-number'\n            label='Bundle No.'\n            value={newBundle.bundle_number}\n            fullWidth\n            disabled\n            error={errors.bundle_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldNumber\n            id='create-new-bundle-total-rcs'\n            required\n            label='Total No. of RCS'\n            value={newBundle.total_rcs}\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-date-received'\n            label='Date Received'\n            value={newBundle.date_received}\n            disabled={disableControls}\n            onChange={date => {\n              // Adjust due date accordingly to date received and term adjustment\n              const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n              setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n            }}\n            error={errors.date_received}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-due-date'\n            label='Due Date'\n            disabled={disableControls}\n            value={newBundle.due_date}\n            onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n            error={errors.due_date}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-soa-number'\n            label='SOA No.'\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n            error={errors.soa_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldCurrency\n            id='create-new-bundle-total-soa'\n            required\n            label='Total SOA Amount'\n            fullWidth\n            value={newBundle.total_soa_amt}\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-id'\n            required\n            label='Medical Partner ID'\n            value={newBundle.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-name'\n            required\n            label='Medical Partner Name (Facility)'\n            value={newBundle.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-docotr-partner-id'\n            label='Medical Partner ID'\n            value={newBundle.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={newBundle.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      <div className={classes.actions}>\n        <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n          Cancel\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={handleOnSave}\n          disabled={disableControls}\n          id='save'\n        >\n          Save\n        </Button>\n      </div>\n    </Paper>\n  )\n}\n","\nconst pageTitleReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","const initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","const initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'BATCH_ENCODER') {\n  args.push(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport pageTitleReducer from './pageTitleReducer'\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nconst reducers = combineReducers({\n  pageTitle: pageTitleReducer,\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// Pages of Batch Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BundlePage from './Pages/BundlePage/BundlePage'\nimport NewBundlePage from './Pages/NewBundlePage/NewBundlePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => data,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Provider store={Store}>\n        <Switch>\n          <Route path='/' exact component={Dashboard} />\n          <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n          <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        </Switch>\n      </Provider>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for batch number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={category === 'open' ? `encode-batch-${index}` : category === 'my' ? `update-batch-${index}` : `view-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => onItemClick({ category, batch_number: row.batch_number })}\n                >\n                  {category === 'open' && 'Encode'}\n                  {category === 'my' && 'Update'}\n                  {category === 'completed' && 'View'}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [batches, setBatches] = React.useState({\n    open: { count: 0, data: [] },\n    my: { count: 0, data: [] },\n    completed: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Open Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n\n    //* My Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    })\n\n    //* Completed Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, completed: { data: completedBatches, count: completedBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    ClaimsEncodingServices.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBatches(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnEncode = batch_number => {\n    ClaimsEncodingServices.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    ClaimsEncodingServices.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsEncodingServices.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, batch_number }) => {\n    if (category === 'open') handleOnEncode(batch_number)\n    else if (category === 'my' || category === 'completed') props.history.push(`/batches/${batch_number}`)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              id='open-batches'\n              count={{ color: 3, value: batches.open.count, id: 'open-batches-count' }}\n              title='Open Batches'\n              viewList={\n                <Typography\n                  id='ob-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('open')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('open')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='ob-batch-no'>Batch No.</TableCell>\n                    <TableCell id='ob-due-date'>Due Date</TableCell>\n                    <TableCell id='ob-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.open.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`encode-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnEncode(item.batch_number)}\n                        >\n                          Encode\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='my-batches'\n              count={{ color: 8, value: batches.my.count, id: 'my-batches-count' }}\n              title='My Batches'\n              viewList={\n                <Typography\n                  id='mb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('my')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('my')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='mb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='mb-due-date'>Due Date</TableCell>\n                    <TableCell id='mb-facility-name'>Facility Name</TableCell>\n                    <TableCell id='mb-status'>Status</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.my.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`update-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          Update\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='completed-batches'\n              count={{ color: 5, value: batches.completed.count, id: 'completed-batches-count' }}\n              title='Completed Batches'\n              viewList={\n                <Typography\n                  id='cb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('completed')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('completed')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='cb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='cb-due-date'>Due Date</TableCell>\n                    <TableCell id='cb-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.completed.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`view-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          View\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={openTickets.count}\n            title='Open Tickets'\n            viewAllLink={{ to: '/batches', caption: 'View all' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {openTickets.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { onClickAdd, onClickProviderSchedule, count, status, type = '', inputChange = null, disabled = false } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n  // {}\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  forDeletion,\n  setForDeletion,\n  submittedBatch,\n  setSelected\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [pagination, setPagination] = React.useState({\n    count: 4,\n    rowsPerPage: 5,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ claim_numbers: [] })\n    setSelected([])\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setForDeletion({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    disabled={submittedBatch}\n                    checked={row.selected}\n                    color='default'\n                    onClick={event => handleClick({ index, claims })}\n                  />\n                </TableCell>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onConfirm}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../Components/ClaimList/ClaimList'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ProviderSchedule from '../../Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        getClaimsAndCount({ batch_number: batchNumber, search })\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, search = '' }) => {\n    ClaimsEncodingServices.getClaims({ batch_number, params: { search } }).then(res => {\n      const { results, count } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      LoadingService.loading(true)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      getClaimsAndCount({ batch_number: _batchNumber })\n    })\n  }, [props.match.params._batchNumber])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    ClaimsEncodingServices.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    ClaimsEncodingServices.deleteMultipleClaim({\n      batch_number: batchNumber,\n      data: forDeletion\n    })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            forDeletion={forDeletion}\n            setForDeletion={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push('/')}\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ member_account_no }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getContractPDF ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/pdf`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberContractBenefit ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/${contract_oid}/benefit`,\n      method: 'GET',\n      params: { member_oid, contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberContract ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBaseBenefitPlan () {\n    return axios({\n      url: `/benefit-plan/base`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBenefitPlanTree ({ contract_oid }) {\n    return axios({\n      url: `/benefit-plan/tree/${contract_oid}`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberBenefitLimit ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberFindBenefit ({ member_oid, contract_oid, tree_oid, is_exact }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid, tree_oid, is_exact },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ member_account_no }) {\n    return axios({\n      url: `/member/utilization-loa`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setGrandTotal = payload => {\n  return {\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","export const setDentalProcedure = payload => {\n  return {\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\nexport default function ContractRange (props) {\n  const { claim, error = {}, disableControls = false, onChange = () => {}, readOnly = false } = props\n\n  return (\n    <div className={classes['root']}>\n      <div style={{ cursor: 'pointer' }} onClick={() => {}} className={classes['title']}>\n        <Typography variant='subtitle1'>Contract Year:</Typography>\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          From:\n        </Typography>\n        <DatePicker\n          id='contract-date-from'\n          required\n          value={claim.contract_year_from}\n          disabled={disableControls}\n          onChange={event => onChange(event, 'contract_year_from')}\n          error={error.contract_year_from}\n          readOnly={readOnly}\n        />\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          To:\n        </Typography>\n        <DatePicker\n          id='contract-date-to'\n          required\n          value={claim.contract_year_to}\n          disabled={disableControls}\n          onChange={event => onChange(event, 'contract_year_to')}\n          error={error.contract_year_to}\n          readOnly={readOnly}\n        />\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from './../../Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  const type = ClaimTypes[claim_type].other_name\n\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import React from 'react'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from '../ContractRange/ContractRange'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from './../../AutoFill'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } from '../../Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\n// Libraries\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    showLoaNumber = true,\n    isDental = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(state => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value && value !== approvalCode) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnBlurMemberAccountNumber = event => {\n    if (!handleMemberAccountNumber) return\n\n    const value = event.target.value.trim()\n\n    if (value === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(value)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!value) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: value }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={ClaimTypes.Reimbursement.subType}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={claim.customer_account_number}\n                disabled={disableControls}\n                required\n                onChange={event => onChange({ field: 'customer_account_number', value: event.target.value })}\n                error={errors.customer_account_number}\n              />\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                required\n                value={claim.company_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'company_name', value: event.target.value })}\n                error={errors.company_name}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              value={''}\n              disabled={disableControls}\n              onChange={event => {}}\n              error={''}\n            />\n          </div>\n        )}\n        {showContractRange && <ContractRange />}\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField\n            id='member-account-number'\n            required\n            label='Member Account No.'\n            value={claim.member_account_number}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_account_number',\n                value: event.target.value\n              })\n            }\n            onBlur={handleOnBlurMemberAccountNumber}\n            error={errors.member_account_number}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            required={!!isDental}\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillInitializer />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","function IndexedDbHelper () {}\n\n/**\n * Deletes an IndexedDb database.\n *\n * @param {string} name database to be deleted\n * @param {function} callback function to be invoked\n */\n\nIndexedDbHelper.deleteDb = function (name, callback) {\n  var request = window.indexedDB.deleteDatabase(name)\n\n  request.onerror = function (event) {\n    // console.log(\"Error deleting database.\");\n    callback()\n  }\n\n  request.onsuccess = function (event) {\n    // console.log(\"Database deleted successfully\");\n    callback()\n  }\n}\n\n/**\n * Opens an IndexedDb database.\n *\n * @param {string} name IndexedDb database to create/open\n * @param {function} onUprade callback function to be invoked when database\n *            is to be created or when there is a need to upgrade\n * @param {function} onSuccess callback function to be invoked upon successfully opening database\n * @param {function} onError callback function to be invoked upon failure\n */\nIndexedDbHelper.openDb = function (name, onUprade, onSuccess, onError) {\n  let request = window.indexedDB.open(name)\n\n  request.onerror = function (event) {\n    console.error(event)\n    if (onError) onError(event)\n  }\n\n  request.onsuccess = function (event) {\n    let db = event.target.result\n    if (onSuccess) onSuccess(db, event)\n  }\n\n  // Triggered when a new database is created or when the\n  // version number of an existing database has been incremented\n  request.onupgradeneeded = function (event) {\n    // Save the IDBDatabase interface\n    let db = event.target.result\n    if (onUprade) onUprade(db, event)\n  }\n}\n\n/**\n * Creates object store\n *\n * @param {object} db reference to database object\n * @param {string} name name of object store to be created\n * @param {string} keyPath unique key in object\n * @param {function} onComplete callback to be invoked upon object store creation\n */\nIndexedDbHelper.createStoreOnDb = function (db, name, keyPath, onComplete) {\n  // console.log('test', 'creating store ' + name);\n\n  let store = db.createObjectStore(name, { keyPath: keyPath })\n  if (onComplete) store.transaction.oncomplete = onComplete\n  return store\n}\n\n/**\n * Creates index on an object store.\n *\n * @param {object} store reference to object store\n * @param {string} name name of index to be created\n * @param {boolean} isUnique whether index is unique or not\n */\nIndexedDbHelper.createIndexOnStore = function (store, name, isUnique) {\n  store.createObjectStore(name, { unique: isUnique })\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {string} dbName IndexedDb database to open\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.openDbAndSave = function (dbName, storeName, entries, onSaveComplete, onLoopEnd) {\n  IndexedDbHelper.openDb(\n    dbName,\n\n    function (db, event) {},\n\n    function (db, event) {\n      IndexedDbHelper.saveToStore(db, storeName, entries, onSaveComplete, onLoopEnd)\n    },\n\n    function (event) {\n      console.error('error opening ' + dbName)\n      console.error(event)\n      if (onLoopEnd) onLoopEnd()\n    }\n  )\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {object} db IndexedDb database reference\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.saveToStore = function (db, storeName, entries, onSaveComplete, onLoopEnd) {\n  if (!entries || entries.length === 0) {\n    if (onLoopEnd) onLoopEnd()\n\n    return\n  }\n\n  let transaction = db.transaction([storeName], 'readwrite')\n\n  transaction.oncomplete = function (event) {\n    console.log('entries written to IndexedDb objectstore: ' + storeName + ' total: ' + entries.length)\n    if (onSaveComplete) onSaveComplete()\n  }\n\n  let store = transaction.objectStore(storeName)\n\n  entries.forEach(function (entry) {\n    // console.log(entry)\n    try {\n      store.add(entry)\n    } catch (ex) {}\n  })\n\n  if (onLoopEnd) onLoopEnd()\n}\n\nIndexedDbHelper.getAll = function (db, storeName, callback) {\n  try {\n    let objectStore = db.transaction(storeName, 'readonly').objectStore(storeName)\n    objectStore.getAll().onsuccess = function (event) {\n      callback(event.target.result)\n    }\n  } catch (ex) {\n    let empty = []\n    callback(empty)\n  }\n}\n\nexport { IndexedDbHelper }\n","import { IndexedDbHelper } from 'Utilities/IndexedDbHelper'\nimport instance from '../Api/instance'\n// const axios = instance('/c/ce')\n// const FlexSearch = require('flexsearch');\n\nexport default class IcdCptStorageServices {\n  /**\n   * Initializes a IndexedDb database and the object stores needed to store/access ICDs and CPTs\n   *\n   * @param {function} callback function to be invoked upon completion\n   */\n  static initializeStorage (callback) {\n    // IcdCptStorageServices.flexSearchIndex = {}\n\n    let dbName = IcdCptStorageServices.DB_NAME\n\n    IndexedDbHelper.deleteDb(dbName, function () {\n      IndexedDbHelper.openDb(\n        dbName,\n\n        function (db, event) {\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_CPT, 'code')\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_ICD, 'code')\n        },\n\n        function (db, event) {\n          console.log('success opening ' + dbName)\n          IcdCptStorageServices.db = db\n\n          if (callback) callback()\n        },\n\n        function (event) {\n          console.error('error opening ' + dbName)\n          console.error(event)\n          if (callback) callback()\n        }\n      )\n    })\n  }\n\n  /**\n   * Saves ICD entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveIcdEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_ICD,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  /**\n   * Saves CPT entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveCptEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_CPT] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_CPT,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  static readStorageEntries (storeName, callback) {\n    // Load entries from IndexedDB and into memory records\n    IndexedDbHelper.openDb(\n      IcdCptStorageServices.DB_NAME,\n      null,\n      function (db, event) {\n        IndexedDbHelper.getAll(db, storeName, function (entries) {\n          callback(entries)\n        })\n      },\n      null\n    )\n  }\n\n  static loadEntries (storeName, callback) {\n    // If memory records is still empty\n    if (!IcdCptStorageServices.records[storeName]) {\n      IcdCptStorageServices.readStorageEntries(storeName, function (entries) {\n        IcdCptStorageServices.records[storeName] = entries\n        callback(IcdCptStorageServices.records[storeName])\n      })\n    } else {\n      // Use entries from memory records\n      callback(IcdCptStorageServices.records[storeName])\n    }\n  }\n\n  /**\n   * Peform lookups.\n   *\n   * This method has been created to emulate the output of ClaimsEncodingServices.lookups() so that\n   * autosuggest features that rely on the behavior ClaimsEncodingServices.lookups() will still function\n   * if this method is used as a replacement.\n   *\n   * @see ClaimsEncodingServices.lookups()\n   */\n  static lookups ({ on, params }) {\n    let promise = new Promise(function (resolve, reject) {\n      let storeName = null\n      if (on === 'icd-10') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_ICD\n      } else if (on === 'cpt') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_CPT\n      }\n\n      IcdCptStorageServices.loadEntries(storeName, function (entries) {\n        // Perform search\n        let value = params.query.toLowerCase()\n\n        let result = []\n        let filterKey = ''\n        if (on === 'icd-10') {\n          filterKey = 'full_description'\n          switch (params.by) {\n            case 'code':\n              filterKey = 'full_code'\n              break\n            case 'category':\n              filterKey = 'category_code'\n              break\n          }\n\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.full_description, code: entry.full_code, ...entry }))\n          }\n        } else if (on === 'cpt') {\n          filterKey = 'label'\n          if (params.by === 'code') filterKey = 'code'\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.label, code: entry.code, ...entry }))\n          }\n        }\n\n        // Sort by filter key\n        result.sort((a, b) => {\n          let item1 = ('' + a[filterKey]).toLowerCase()\n          let item2 = ('' + b[filterKey]).toLowerCase()\n\n          if (item1 > item2) {\n            return 1\n          }\n\n          return -1\n        })\n\n        // Pick top X entries\n        result = result.slice(0, IcdCptStorageServices.LOOKUP_LIMIT)\n\n        result = { data: { data: result } }\n\n        resolve(result)\n      })\n    })\n\n    return promise\n\n    // return axios({\n    //   url: `/lookups/${on}`,\n    //   method: 'GET',\n    //   params: { limit: 10, ...params }\n    // })\n    // Expected: [{code: \"A000\", description: \"Cholera due to Vibrio cholerae 01, biovar cholerae\"}]\n  }\n}\n\nIcdCptStorageServices.DB_NAME = 'himsDb'\nIcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icd10_list'\nIcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpt_list'\n// IcdCptStorageServices.DB_NAME = 'claimsDb'\n// IcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icds'\n// IcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpts'\n\nIcdCptStorageServices.LOOKUP_LIMIT = 10\n\nIcdCptStorageServices.records = {}\n\n// IcdCptStorageServices.flexSearchIndex = {};\n\n// static populate(cat, entries){\n//     let index = (IcdCptStorageServices.flexSearchIndex[cat] || (\n//         IcdCptStorageServices.flexSearchIndex[cat] = new FlexSearch\n//     )).add(entries)\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = new FlexSearch\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(1, {id:0, key1: 'a'})\n//   // // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(2, entries[1])\n\n//   // // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find({\n//   // //   full_description: data[0]['full_description']\n//   // // })\n\n//   // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find(\n//   //   function(item){\n//   //     console.log(item)\n//   //     return true;\n//   //     //return item.full_description == data[0]['full_description'];\n//   // });\n\n//   // alert('')\n//   // console.log(entries)\n\n// }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    //.less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {procedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n              {showAmountPaidByMember && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.amount_paid_by_member}\n                  />\n                </div>\n              )}\n            </div>\n            {showPhilhealthField && (\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.philhealth_amount_paid}\n                  />\n                </div>\n\n                <div className={classes['input']}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            )}\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {procedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => dispatch(setProcedure({ show: false }))}>\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {procedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(procedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(procedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {hospitalItem.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <HospitalItemTextFields>\n              <HospitalItemTextField\n                id='hospital-item'\n                codeId={`hospital-code`}\n                name={hospitalItem.details.name || ''}\n                item_code={hospitalItem.details.item_code || ''}\n                suggestions={suggestions.hospitalItem}\n                onChangeName={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                }\n                onChangeCode={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                }\n                errors={errors}\n              />\n            </HospitalItemTextFields>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n              {showAmountPaidByMember && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChangeHospitalForm({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.amount_paid_by_member}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes['input']}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeHospitalForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {hospitalItem.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveHospitalItem}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setHospitalItem({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {hospitalItem.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this hospital item?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {professionalFee.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={`${classes.groups} ${classes['first-item']}`}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id || ''}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name || ''}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.specialization}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {professionalFee.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProfessionalFee}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {professionalFee.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this professional fee?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setProcedure,\n  setProfessionalFee,\n  setHospitalItem,\n  resetSuggestionObject,\n  setDentalProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const { data, isDental } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(!isDental ? i.philhealth_amount_paid : 0)\n    )\n  }\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.description}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setHospitalItem,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  resetSuggestionObject\n} from '../../Store/actions'\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.name}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.item_code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setProfessionalFee,\n  setHospitalItem,\n  setProcedure,\n  setDentalProcedure,\n  resetSuggestionObject\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.doctor_name}</td>\n                <td>{i.specialization}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => data => {\n  const schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n\n    // TODO Claim Source here\n\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    // TODO Client Account Number*\n    // TODO Client Account Name*\n\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now'),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .max('now')\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        ClaimsEncodingServices.lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        }).then(res => {\n          const { data } = res.data\n          const rooms = (data[0].rooms || []).map(room => ({\n            text: room.type,\n            value: room.type,\n            rate: room.rate\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport MainValidator from './../../Validators/Claim'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    // disableControls = false,\n    onChange = () => {}\n    // readOnly = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes['label']}>\n          <Typography variant='subtitle2'>Contract Year:</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant='subtitle1'>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes['label']}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} from '../../Store/actions'\n\nexport default function DentalProcedureForm (props) {\n  const dispatch = useDispatch()\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(state => state.dentalProcedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DentalProcedureFormValidator({\n      description: dentalProcedure.details.description,\n      code: dentalProcedure.details.code.toString(),\n      tooth_number: dentalProcedure.details.tooth_number,\n      gross_amount: dentalProcedure.details.gross_amount,\n      vat_amount: dentalProcedure.details.vat_amount,\n      amount_paid_by_member: dentalProcedure.details.amount_paid_by_member\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {dentalProcedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n\n            <div className={classes.groups}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={dentalProcedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={dentalProcedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {dentalProcedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {dentalProcedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","const media = {\n  dentalChart:\n     'http://1y7exd3y0q9b2aqn6d2i9q42.wpengine.netdna-cdn.com/wp-content/uploads/2015/01/periodontal-charting-862x581.jpg'\n}\n\nexport default media\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\n\n// Media\nimport Media from 'Constant/media'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [flag, setFlag] = React.useState({\n    flag: true\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member ? i.amount_paid_by_member : 0) -\n      parseFloat(i.philhealth_amount_paid ? i.philhealth_amount_paid : 0)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['chart']}>\n                <img src={Media.dentalChart} alt='dental-chart' />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      customer_account_number: '',\n      company_name: '',\n      date_to: new Date().toISOString(),\n      date_from: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            customer_account_number: data.customer_account_number,\n            company_name: data.company_name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || []\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  reimbursement_type: Joi.string()\n    .trim()\n    .label('Reimbursement Type')\n    .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimECUValidator from './ClaimECUValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimECUValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showContractRange\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO-ECU Specialist ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO-ECU Specialist Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPPEValidator from './ClaimPPEValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPPEValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPharmacyValidator from './ClaimPharmacyValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPharmacyValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  onChange={event => {}}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimMedicalSuppliesValidator from './ClaimMedicalSuppliesValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimMedicalSuppliesValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimClinicManagementValidator from './ClaimClinicManagementValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimClinicManagementValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfoComponent.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfoComponent (props) {\n  const { show, setShowModal, handleOnSave, doReject } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n\n  const [items, setItems] = React.useState([])\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => setShowModal(false)\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive'>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnClickUpdate({ index, item })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnClickSave({ item })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'contract_year_from', 'contract_year_to', 'date_from']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : type === 'Dental' ? Dental : other_fields\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfoComponent from '../../../Components/ReimbursementInfoComponent/ReimbursementInfoComponent'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: []\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = { ..._allowedFields, ..._lineItemFields }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields(initial_values))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        ClaimsEncodingServices.lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        }).then(res => {\n          const { data } = res.data\n          const rooms = (data[0].rooms || []).map(room => ({\n            text: room.type,\n            value: room.type,\n            rate: room.rate\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          batch_number: data.batch_number\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else if (data.reimbursement_details.type === 'Dental') {\n          _claim = {\n            ..._claim,\n            procedures: data.dental_procedures || [],\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(\n            data.reimbursement_details.type === 'InPatient'\n              ? 'InPatient'\n              : data.reimbursement_details.type === 'Dental'\n                ? 'Dental'\n                : ''\n          )\n        })\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member ? i.amount_paid_by_member : 0) -\n      parseFloat(i.philhealth_amount_paid ? i.philhealth_amount_paid : 0)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...fields, flag: type === 'Dental' }))({\n      ...data,\n      flag: type === 'Dental'\n    })\n    return error\n  }\n\n  const validateDiagnosis = () => {\n    if (type === 'Dental') {\n      return {}\n    }\n    return DiagnosisListValidator(claim.diagnosis)\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = validateDiagnosis()\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) {\n      data.date_to = new Date().toISOString()\n    }\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: new Date().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          reimbursement_type: 'Dental',\n          date_from: new Date().toISOString(),\n          contract_year_to: '',\n          contract_year_from: '',\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              handleMemberAccountNumber={type === 'Dental'}\n              isDental={type === 'Dental'}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='dp-medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    required\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'date_from') && type === 'Dental' && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'contract_year_from') && (\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <ContractRange\n                    id='contract-year'\n                    contract_year_from={claim.contract_year_from}\n                    contract_year_to={claim.contract_year_to}\n                    suggestions={suggestions.contract.years}\n                    onChange={({ from, to }) => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          field: 'contract_year_from',\n                          value: from\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          field: 'contract_year_to',\n                          value: to\n                        })\n                      )\n                    }}\n                    error={errors.contract_year_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm />\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfoComponent\n            claim={claim}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from '../../Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from '../../Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from '../../Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from '../../Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from '../../Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from '../../Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from '../../Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from '../../Components/ClaimECU/ClaimECU'\nimport ClaimPPE from '../../Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from '../../Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from '../../Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from '../../Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from '../../Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} from '../../Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\nexport default function ClaimPage (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    ClaimsEncodingServices.getClaim({\n      batch_number: _batchNumber,\n      claim_number: _claimNumber\n    }).then(res => {\n      const { data } = res.data\n\n      // Set Diagnosis Suggestions\n      const { diagnosis = [] } = data\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n      callback(data)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const grandTotalReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\nimport initSubscriber from 'redux-subscriber'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_DETAILS_ENCODER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(...args)\ninitSubscriber(store)\nexport default store\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  dentalProcedure: dentalProcedureReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BatchesPage from './Pages/BatchesPage/BatchesPage'\nimport BatchPage from './Pages/BatchPage/BatchPage'\nimport ClaimPage from './Pages/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Provider store={Store}>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/batches' exact component={BatchesPage} />\n        <Route path='/batches/:_batchNumber' exact component={BatchPage} />\n        <Route path='/batches/:_batchNumber/claims/add' exact render={props => <ClaimPage {...props} isAdd />} />\n        <Route path='/batches/:_batchNumber/claims/:_claimNumber' exact component={ClaimPage} />\n      </Switch>\n    </Provider>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                      ? `update-claim-${index}`\n                      : category === 'submitted'\n                        ? `print-${index}`\n                        : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleOnAnalyze(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`}>\n                      {' '}\n                      variant='caption' className='text-link underline'> Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div className={`${classes[`input-wrapper`]} ${message !== '' ? classes['discrepancy'] : ''}`}>{children}</div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const resetError = payload => {\n  return {\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","export const resetEscalation = payload => {\n  return {\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","export const resetReassign = payload => {\n  return {\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","export const setRejectStatus = payload => {\n  return {\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","export const setLimitType = payload => {\n  return {\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import InPatient from './InPatient'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].medical_partner_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import React from 'react'\n\n// Components\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } from '../../Store/actions'\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(state => state.claimType)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  const handleOnBlurMemberAccountNumber = event => {\n    if (!handleMemberAccountNumber) return\n\n    const value = event.target.value.trim()\n\n    if (value === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(value)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!value) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: value }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n            {showCompany && (\n              <React.Fragment>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-customer-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.customer_account_number\n                    }}\n                  >\n                    <TextField\n                      id='company-account-number'\n                      label='Customer (Company) Account Number'\n                      value={claim.customer_account_number}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'customer_account_number', value: event.target.value })}\n                      error={errors.customer_account_number}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-company-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.company_name\n                    }}\n                  >\n                    <TextField\n                      id='company-name'\n                      label='Company Name'\n                      value={claim.company_name}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'company_name', value: event.target.value })}\n                      error={errors.company_name}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_account_number\n                }}\n              >\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  onBlur={handleOnBlurMemberAccountNumber}\n                  error={errors.member_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AutoFillInitializer />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required.description && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required.code && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={error.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={error.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required={{ code: !permissions.create, description: !permissions.create }}>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                  noMargin\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${error[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    error={error.error && error.items[index]}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes['label']}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    errors = {},\n    doValidate,\n    permissions,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in errors) {\n      if (errors.hasOwnProperty(prop)) {\n        setErrors(errors)\n        break\n      }\n    }\n  }, [errors, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <ToothNumber\n                  id='tooth-number'\n                  label='Tooth Number'\n                  required\n                  value={procedure.details.tooth_number}\n                  onChange={event => {\n                    handleOnChange({\n                      field: 'tooth_number',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.tooth_number}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={procedure.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={procedure.details.amount_not_covered > 0}\n                    disableComponents={procedure.details.amount_not_covered === 0}\n                    value={procedure.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={procedure.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={procedure.details.amount_due_from_member > 0}\n                    disableComponents={procedure.details.amount_due_from_member === 0}\n                    value={procedure.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProcedure } from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const {\n    data,\n    doValidate,\n    permissions,\n    id,\n    isDental = false,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.procedure)\n  const procedure = useSelector(state => state.procedure)\n  const error = useSelector(state => state.error.procedure)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td id={`${id}-description-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.description}\n                </td>\n                <td\n                  id={`${id}-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    isDental={isDental}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthField={showPhilhealthField}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    isDental={isDental}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthField={showPhilhealthField}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, error = {}, doValidate, permissions } = props\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospitalItem-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={hospitalItem.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={hospitalItem.details.amount_not_covered > 0}\n                    disableComponents={hospitalItem.details.amount_not_covered === 0}\n                    value={hospitalItem.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={hospitalItem.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-reason-for-charging-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='reason-for-charging-member'\n                    label='Reason for Charging Member'\n                    required={hospitalItem.details.amount_due_from_member > 0}\n                    disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                    value={hospitalItem.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setHospitalItem } from '../../Store/actions'\n\nexport default function HospitalItemList (props) {\n  const {\n    data,\n    doValidate,\n    permissions,\n    id,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const error = useSelector(state => state.error.hospital_item)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`${id}-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthRemarks={showPhilhealthRemarks}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthRemarks={showPhilhealthRemarks}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, error = {}, doValidate, permissions } = props\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-amount-paid-by-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_paid_by_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.amount_paid_by_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-remarks'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_remarks\n                }}\n              >\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_remarks}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_not_covered\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-not-covered'\n                  label='Amount Not Covered'\n                  value={professionalFee.details.amount_not_covered}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason = ''\n                      setErrors(state => ({ ...state, reason: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_not_covered',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_not_covered}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered-reason'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason\n                }}\n              >\n                <DropDown\n                  id='amount-not-covered-reason'\n                  label='Reason'\n                  required={professionalFee.details.amount_not_covered > 0}\n                  disableComponents={professionalFee.details.amount_not_covered === 0}\n                  value={professionalFee.details.reason}\n                  items={dropDown.reason}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-due-from-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_due_from_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-due-from-member'\n                  label='Amount Due from Member'\n                  value={professionalFee.details.amount_due_from_member}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason_for_charging_member = ''\n                      setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                    }\n                    handleOnChange({\n                      field: 'amount_due_from_member',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_due_from_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason_for_charging_member\n                }}\n              >\n                <DropDown\n                  id='hospital-item'\n                  label='Reason for Charging Member'\n                  required={professionalFee.details.amount_due_from_member > 0}\n                  disableComponents={professionalFee.details.amount_due_from_member === 0}\n                  value={professionalFee.details.reason_for_charging_member}\n                  items={dropDown.reason_charging}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason_for_charging_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason_for_charging_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProfessionalFee } from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data, doValidate, permissions, id } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(state => state.professionalFee)\n  const error = useSelector(state => state.error.professional_fee)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td id={`${id}-doctor-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`${id}-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","const SafeAccess = (value, path, def = undefined) => {\n  return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\nimport { SafeAccess } from 'Utilities/SafeAccess'\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee\n} from '../../Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel,\n    isReimbursement\n  } = props\n  // Variables\n  const { disabled, permissions } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n  const rejectStatus = useSelector(state => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to Submit the Claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const handleOnClickReject = () => {\n    if (!doValidate()) {\n      if (isReimbursement) doReject()\n      else setRejectModal(true)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewAnalysisSheet({ goBack: false })}\n              disabled={disabled && permissions.analysis_sheet.enabled}\n            >\n              View Analysis Sheet\n            </Button>\n          )}\n          {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewLetterOfAdvice({ goBack: false })}\n              disabled={disabled && permissions.letter_of_advice.enabled}\n            >\n              View Letter of Advice\n            </Button>\n          )}\n          {SafeAccess(permissions.escalate, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleEscalateDialog()}\n              disabled={disabled && permissions.escalate.enabled}\n            >\n              Escalate\n            </Button>\n          )}\n          {SafeAccess(permissions.reject, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={handleOnClickReject}\n              disabled={rejectStatus && !isReimbursement}\n            >\n              Reject\n            </Button>\n          )}\n\n          {SafeAccess(permissions.return, ['visible']) && (\n            <Button\n              id='btn-return'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              // onClick={() => setApproveModal(true)}\n              // disabled={disabled && permissions.return.enabled}\n            >\n              Return\n            </Button>\n          )}\n\n          {SafeAccess(permissions.approve, ['visible']) && (\n            <Button\n              id='approve'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleOnShowModal()}\n              disabled={disabled && permissions.approve.enabled}\n            >\n              Approve\n            </Button>\n          )}\n          {SafeAccess(permissions.save, ['visible']) && (\n            <Button\n              id='save-for-now'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && setSaveModal(true)}\n              disabled={disabled && permissions.save.enabled}\n            >\n              Save for now\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n        Cancel\n      </Button>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.reassign, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleReassignDialog()}\n              disabled={disabled && permissions.reassign.enabled}\n            >\n              Reassign\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      {SafeAccess(permissions.escalate, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={escalateModal.dialog}\n            className={classes.escalate}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reason For Escalation\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={escalations.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                  error={escalationErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                  </Typography>\n                  <DropDown\n                    id='escalate-to'\n                    items={dropDownUsers}\n                    value={escalations.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setEscalationAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={escalationErrors.assignee}\n                    disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={escalateModal.confirm}\n            message='Are you sure you want to escalate claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n              doEscalate({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reassign, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={reassignModal.dialog}\n            className={classes.reassign}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reassign\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={reassign.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setReassignMessage(event.target.value))}\n                  error={reassignErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    Assign To:\n                  </Typography>\n                  <DropDown\n                    id='reassign-to'\n                    items={dropDownUsers}\n                    value={reassign.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setReassignAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={reassignErrors.assignee}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={reassignModal.confirm}\n            message='Are you sure you want to re-assign claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n              doReassign({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reject, ['enabled']) && (\n        <Alert\n          open={rejectModal}\n          message='Are you sure you want to reject this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRejectModal(false)}\n          onOk={() => {\n            setRejectModal(false)\n            doReject({ goBack: true })\n          }}\n        />\n      )}\n\n      {SafeAccess(permissions.approve, ['enabled']) && (\n        <Alert\n          open={approveModal.show}\n          message={approveModal.message || 'Are you sure you want to approve the claim?'}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setApproveModal({ show: false })}\n          onOk={() => {\n            setApproveModal({ show: false })\n            doApprove({ goBack: false })\n          }}\n        />\n      )}\n\n      <Alert\n        open={saveModal}\n        message='Are you sure you want to save the changes?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveModal(false)}\n        onOk={() => {\n          setSaveModal(false)\n          doSave(true)\n        }}\n      />\n\n      <Alert\n        open={cancelModal}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setCancelModal(false)}\n        onOk={() => {\n          setCancelModal(false)\n          doCancel({ goBack: true })\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab key={`${item.props.label}-tab-label`} className={classes['item']} label={item.props.label} />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel key={`${item.props.label}-tab-content`} className={classes['panels']} value={value} index={index}>\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, planTypeList, categoryNode, roomAndBoardList, coverageList, riderList, onItemClick } = props\n\n  // console.log(planTypeList) // Base []\n  // console.log(categoryNode) // Room {} name\n  // console.log(roomAndBoardList) // Room Rows\n  // console.log(coverageList) // CV []\n  // console.log(riderList) // RI []\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          <TreeItem\n            key={`node-room-board`}\n            className={`${classes.node}`}\n            nodeId={`node-room-board`}\n            label={'Room and Board'}\n            onClick={() => onItemClick({ list: 'room-board', planPackage: 'RB', benefitCategory: 'RBC' })}\n          />\n          <TreeItem\n            key={`node-coverage`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-coverage`}\n            label={'COVERAGE'}\n          >\n            {coverageList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-coverage-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-coverage-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'coverage', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n          <TreeItem\n            key={`node-riders`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-riders`}\n            label={'RIDERS'}\n          >\n            {riderList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-riders-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-riders-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'riders', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","const UnitLimit = unit => {\n  if (!unit) return ''\n\n  switch (unit) {\n    case 'Percentage':\n      return '%'\n    default:\n      return unit\n  }\n}\n\nexport { UnitLimit }\n","import React from 'react'\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './LimitTable.module.scss'\n\nconst columns = {\n  // COVERAGE\n  RBC: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Rollover', sortField: 'rollerover', search: true },\n    { name: 'Refresh', sortField: 'refresh', search: true }\n  ],\n  EM: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  IP: [\n    { name: 'Category', sortField: 'parent_name', search: true },\n    { name: 'Description', sortField: 'name', search: true },\n    { name: 'Inner Limit Type', sortField: 'type', search: true },\n    { name: 'Inner Limit', sortField: 'limit', search: true },\n    { name: 'Daily Inner Limit', sortField: '', search: true }\n  ],\n  OP: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Benefit', sortField: 'benefit', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  PV: [\n    { name: 'Provision', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  APE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  PPE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  SD: [\n    { name: 'Procedure', sortField: 'category', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  MT: [\n    { name: 'Provision', sortField: 'provision', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment', sortField: 'availment', search: true }\n  ],\n  OM: [\n    { name: 'Excluded Medicine', sortField: 'excluded_medicine', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment Type', sortField: 'availment_type', search: true }\n  ],\n  CC: [\n    { name: 'Personnel', sortField: 'personnel', search: true },\n    { name: 'Number', sortField: 'number', search: true },\n    { name: 'No. of Days', sortField: 'no_of_days', search: true },\n    { name: 'Days Deployed', sortField: 'days_deployed', search: true },\n    { name: 'Time From', sortField: 'time_from', search: true },\n    { name: 'Time To', sortField: 'time_to', search: true }\n  ],\n  DNT: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  SH: [\n    { name: 'Plan', sortField: 'name', search: true },\n    { name: 'Member Type', sortField: 'member_type', search: true }\n  ]\n\n  // RIDERS\n}\n\nconst queryColumn = (collection, { search, field }) => {\n  // if (collection === 'benefits') {\n  //   clearTimeout(debounce)\n  //   setDebounce(\n  //     setTimeout(() => {\n  //       let searchObj = search\n  //       let category = field\n  //       if (field === 'id') {\n  //         setPartnerId(search)\n  //         if (partnerName || partnerLocation) {\n  //           searchObj = {\n  //             id: search,\n  //             name: partnerName,\n  //             address: partnerLocation\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       if (field === 'name') {\n  //         setPartnerName(search)\n  //         if (partnerId || partnerLocation) {\n  //           searchObj = {\n  //             id: partnerId,\n  //             name: search,\n  //             address: partnerLocation\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       if (field === 'address') {\n  //         setPartnerLocation(search)\n  //         if (partnerId || partnerName) {\n  //           searchObj = {\n  //             id: partnerId,\n  //             name: partnerName,\n  //             address: search\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       console.log(search, category)\n  //       if (search.length >= 3 || (!search && category === 'and')) {\n  //         benefitservice({\n  //           member_account_no: memberAccountNumber,\n  //           params: {\n  //             limit: benefits.limit,\n  //             page: benefits.page,\n  //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n  //             search: searchObj,\n  //             category: category\n  //           }\n  //         }).then(res => {\n  //           const { data } = res.data\n  //           setbenefits(state => ({\n  //             ...state,\n  //             data: data.results,\n  //             count: data.count,\n  //             page: 1,\n  //             orderBy: 'name',\n  //             order: true\n  //           }))\n  //         })\n  //       } else fetchAll()\n  //     }, 500)\n  //   )\n  // } else {\n  //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n  // }\n}\n\nconst handleOnSort = (collection, orderBy) => e => {\n  // if (collection === 'benefits') {\n  //   const _params = {\n  //     ...benefits,\n  //     orderBy,\n  //     order: !benefits.order,\n  //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n  //   }\n  //   benefitservice({\n  //     member_account_no: memberAccountNumber,\n  //     params: _params\n  //   }).then(res => {\n  //     const { data } = res.data\n  //     setbenefits(state => ({\n  //       ...state,\n  //       ..._params,\n  //       data: data.results,\n  //       count: data.count\n  //     }))\n  //   })\n  // } else {\n  //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n  //   setDoctors(state => ({ ...state, filtered: sorted }))\n  // }\n}\n\nconst handleOnPaginate = (collection, params) => {\n  // if (collection === 'benefits') {\n  //   const _params = {\n  //     category: benefits.category,\n  //     limit: benefits.limit,\n  //     page: benefits.page,\n  //     search: benefits.search,\n  //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n  //     ...params\n  //   }\n  //   benefitservice({\n  //     member_account_no: memberAccountNumber,\n  //     params: _params\n  //   }).then(res => {\n  //     const { data } = res.data\n  //     setbenefits(state => ({\n  //       ...state,\n  //       ..._params,\n  //       data: data.results,\n  //       count: data.count\n  //     }))\n  //   })\n  // } else {\n  // }\n}\n\nconst generateColumns = ({ benefitType }) => {\n  const rows = columns[benefitType] || []\n  return (\n    <TableRow>\n      {rows.map(headCell => (\n        <TableCell key={headCell.sortField}>\n          <TableSortLabel\n            // active={benefits.orderBy === headCell.sortField}\n            // direction={benefits.order ? 'asc' : 'desc'}\n            onClick={event => {}}\n          >\n            {headCell.name}\n          </TableSortLabel>\n          {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n        </TableCell>\n      ))}\n\n      <TableCell align='center' />\n    </TableRow>\n  )\n}\n\nconst generateRows = ({ benefitType, rows }) => {\n  if (rows.length <= 0) {\n    return (\n      <TableRow>\n        <TableCell id={`no-record`} colSpan={5}>\n          <div\n            className={`${classes.cell} ${classes.center}`}\n            style={{\n              textAlign: 'center',\n              fontStyle: 'italic',\n              padding: '10px'\n            }}\n          >\n            <span>No Record</span>\n          </div>\n        </TableCell>\n      </TableRow>\n    )\n  }\n\n  switch (benefitType) {\n    case 'RBC':\n      const firstOnly = true\n      const _rows = !firstOnly ? rows : [rows[0]]\n      return _rows.map((row, index) => {\n        return (\n          row && (\n            <TableRow key={`benefit-${index}`}>\n              <TableCell id={`category-${index}`}>{row.name}</TableCell>\n              <TableCell id={`limit-${index}`}>\n                <div className={classes.cell}>\n                  {row.limits.map((limit, idx) => {\n                    return (\n                      limit.limit && (\n                        <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                      )\n                    )\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`rollover-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'rollover'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`refresh-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'refresh'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n            </TableRow>\n          )\n        )\n      })\n    case 'EM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'IP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`description-${index}`}>{row.name}</TableCell>\n            <TableCell id={`inner-limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`inner-limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`daily-inner-limit-${index}`}>{/* Unknown */}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'OP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PV':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'APE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PPE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SD':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`procedure-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'MT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-${index}`}>\n              {UpperWord(SafeAccess(row, ['custom_metadata', 'availment'], ''))}\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'OM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`excluded-medicine-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'availment'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'CC':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`personnel-${index}`}>{row.name}</TableCell>\n            <TableCell id={`number-${index}`}>{SafeAccess(row, ['custom_metadata', 'number'], '')}</TableCell>\n            <TableCell id={`number-of-days-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'no_of_days'], '')}\n            </TableCell>\n            <TableCell id={`days-deployed-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'days_deployed'], '')}\n            </TableCell>\n            <TableCell id={`time_from-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_from'], '')}</TableCell>\n            <TableCell id={`time_to-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_to'], '')}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'DNT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`name-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SH':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`plan-${index}`}>{SafeAccess(row, ['custom_metadata', 'title'], '-')}</TableCell>\n            <TableCell id={`member-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'member_type'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n  }\n}\n\nexport default function LimitTable (props) {\n  const { benefitType, rows } = props\n\n  const [elemRows, setElemRows] = React.useState([])\n  const [elemColumns, setElemColumns] = React.useState([])\n\n  React.useEffect(() => {\n    setElemColumns(generateColumns({ benefitType }))\n    setElemRows(generateRows({ benefitType, rows }))\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={elemColumns}\n          body={elemRows}\n          pagination\n          count={0}\n          page={1}\n          limit={5}\n          rowsPerPageOptions={[5, 10, 15]}\n          onChange={args => {}}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function LimitTable (props) {\n  const { label, value } = props\n\n  return (\n    <div className={classes.field}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n      </Typography>\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\nimport { Typography } from '@material-ui/core'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Header.module.scss'\n\nconst populateClient = args => {\n  const { showAll, benefitType, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['metadata'], {})\n\n  let limits = []\n  let index = -1\n  let PECIndex = -1\n  let timebasedindex = 0\n  let timebased\n\n  switch (benefitType) {\n    case 'APE':\n      return <React.Fragment />\n\n    case 'CC':\n      return <React.Fragment />\n\n    case 'DNT':\n      return <React.Fragment />\n\n    case 'EC':\n      // this one have sub form function, need further study\n      return <React.Fragment />\n\n    case 'EM':\n      return <React.Fragment />\n\n    case 'IP':\n      return <React.Fragment />\n\n    case 'MT':\n      return <React.Fragment />\n\n    case 'OP':\n      return <React.Fragment />\n\n    case 'OM':\n      return <React.Fragment />\n\n    case 'NT':\n      return <React.Fragment />\n\n    case 'PPE':\n      return <React.Fragment />\n\n    case 'PV':\n      return <React.Fragment />\n\n    case 'RBC':\n      if (categoryNode) {\n        limits = categoryNode['limits'] || {}\n        index = limits.findIndex(item => ['ABL', 'MBL'].includes(item.type))\n        PECIndex = limits.findIndex(item => ['PEC'].includes(item.type))\n        if (limits[PECIndex] && limits[PECIndex]['time_based_limit']) {\n          timebased = limits[PECIndex]['time_based_limit']\n          timebasedindex = limits[PECIndex]['time_based_limit'].length\n        }\n      }\n      let voluntaryValue = ''\n      let involuntaryValue = ''\n\n      const modeOfPayment = {\n        annual: 'Annual',\n        semiannual: 'Semi-Annual',\n        quarterly: 'Quarterly',\n        monthly: 'Monthly'\n      }\n\n      if (metadata['voluntary_upgrading_type']) {\n        if (metadata['voluntary_upgrading_type'] === 'paid_by_member') {\n          voluntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['voluntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['voluntary_upgrading_amount']\n        ) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' hrs'\n        } else if (metadata['voluntary_upgrading_type'] === 'rate' && metadata['voluntary_upgrading_amount']) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' %'\n        }\n      }\n      if (metadata['involuntary_upgrading_type']) {\n        if (metadata['involuntary_upgrading_type'] === 'paid_by_member') {\n          involuntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['involuntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['involuntary_upgrading_amount']\n        ) {\n          involuntaryValue = metadata['involuntary_upgrading_amount'] + ' hrs'\n        }\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            <ValueField\n              label={'Limit Type'}\n              value={`${index > -1 && limits[index]['type'] ? limits[index]['type'] : ''}`}\n            />\n            <ValueField\n              label={'Limit'}\n              value={`${\n                index > -1 && limits[index]['limit'] && limits[index]['limit_unit']\n                  ? `${DigitFormatter(limits[index]['limit'])} ${UnitLimit(limits[index]['limit_unit'])}`\n                  : ''\n              }`}\n            />\n            <ValueField\n              label={'PEC Limit Type'}\n              value={`${PECIndex > -1 && limits[PECIndex]['type'] ? limits[PECIndex]['type'] : ''}`}\n            />\n            {PECIndex === -1 ||\n            limits[PECIndex]['limit_unit'] === 'PHP' ||\n            limits[PECIndex]['limit_unit'] === 'Percentage' ? (\n                <ValueField\n                  label={'PEC Limit'}\n                  value={`${\n                    PECIndex > -1 && limits[PECIndex]['limit'] && limits[PECIndex]['limit_unit']\n                      ? `${DigitFormatter(limits[PECIndex]['limit'])} ${UnitLimit(limits[PECIndex]['limit_unit'])}`\n                      : ''\n                  }`}\n                />\n              ) : (\n                <React.Fragment>\n                  <Typography style={{ height: 26, paddingBottom: 6 }} htmlFor='limit_unit'>\n                  Specify Limit\n                  </Typography>\n                  <Typography style={{ height: 26, paddingBottom: 5 }} htmlFor='limit_unit'>\n                  After n month\n                  </Typography>\n                  {timebasedindex > 0 ? (\n                    timebased.map((col, index) => (\n                      <ValueField\n                        label={''}\n                        value={\n                          limits[PECIndex]['time_based_limit'] && limits[PECIndex]['time_based_limit'][index]\n                            ? limits[PECIndex]['time_based_limit'][index]['number_month'] &&\n                            limits[PECIndex]['time_based_limit'][index]['number_month'] !== '' &&\n                            limits[PECIndex]['time_based_limit'][index]['limit'] &&\n                            limits[PECIndex]['time_based_limit'][index]['limit'] !== ''\n                              ? // number of month\n                              (limits[PECIndex]['time_based_limit'][index]['number_month'] &&\n                              limits[PECIndex]['time_based_limit'][index]['number_month'] !== ''\n                                ? limits[PECIndex]['time_based_limit'][index]['number_month'].toString()\n                                : '—') +\n                              ' ' +\n                              // day_based\n                              (limits[PECIndex]['time_based_limit'][index]['day_based']\n                                ? limits[PECIndex]['time_based_limit'][index]['day_based'].toString()\n                                : 'Months') +\n                              ' : ' +\n                              // limit\n                              (limits[PECIndex]['time_based_limit'][index]['limit'] &&\n                              limits[PECIndex]['time_based_limit'][index]['limit'] !== ''\n                                ? limits[PECIndex]['time_based_limit'][index]['limit'].toString()\n                                : '—') +\n                              ' ' +\n                              // limit type\n                              (limits[PECIndex]['time_based_limit'][index]['limit_type']\n                                ? limits[PECIndex]['time_based_limit'][index]['limit_type'] === 'PHP'\n                                  ? 'PHP'\n                                  : '%'\n                                : '%')\n                              : '——'\n                            : '——'\n                        }\n                      />\n                    ))\n                  ) : (\n                    <ValueField label={''} value={`——`} />\n                  )}\n                </React.Fragment>\n              )}\n            <ValueField label={'Mode of Payment'} value={modeOfPayment[metadata['mode_of_payment']]} />\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SD':\n      return <React.Fragment />\n\n    case 'SH':\n      return <React.Fragment />\n  }\n}\n\nconst populateMember = args => {}\n\nexport default function Header (props) {\n  const { contractType } = props\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setElemFields(populateClient(props))\n    } else if (contractType === 'member') {\n      setElemFields(populateMember(props))\n    }\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\nimport { Typography } from '@material-ui/core'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Footer.module.scss'\n\nconst populateClient = args => {\n  const { showAll, benefitType, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['custom_metadata'], {})\n\n  let billingArrangement = {}\n  let amountLimit = {}\n\n  switch (benefitType) {\n    case 'APE':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['mobile_ape_availees'] || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Mobile APE\n                </Typography>\n                <ValueField\n                  label={'Min no. of availees in a shift (8 hrs)'}\n                  value={`${metadata['mobile_ape_availees']}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'CC':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n        fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n        soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n        soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed',\n        rider_fee: '1-time rider fee to be upon start of contract'\n      }\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['billing_arangement'] || showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'DNT':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['waiting_period_unit'] && metadata['waiting_period_type']) || showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'EC':\n      billingArrangement = {\n        imputed_in_premiums: 'Imputed in premiums',\n        billback: 'Bill back with admin fee',\n        billback_net: 'Bill back, net of APE cost with admin fee',\n        rider_fee: '1-time rider fee to be upon enrollment'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['waiting_period_unit'] && metadata['waiting_period_type']) || showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n            {([metadata['billing_arangement']], showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'EM':\n      return <React.Fragment />\n\n    case 'IP':\n      amountLimit = {\n        amt_limit: 'Amount Limit',\n        max_session: 'Max Session',\n        max_amount: 'Max Amount',\n        percent_mbl: 'Percent of MBL',\n        percent_abl: 'Percent of ABL',\n        no_visits: 'No. of Visits'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['amt_limit'] && metadata['amt_limit_unit']) || showAll) && (\n              <Typography variant='overline' display='block' gutterBottom>\n                Limit\n              </Typography>\n            )}\n            {([metadata['mobile_ape_availees']], showAll) && (\n              <ValueField\n                label={'Amount Limit for all procedures'}\n                value={`${metadata['amt_limit']} ${amountLimit[metadata['amt_limit_unit']]}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'MT':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        billback: 'Bill back with admin fee (15%)',\n        rider_fee: '1-time rider fee to be upon enrollment'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['availment_per_year'] || showAll) && (\n              <ValueField label={'AVAILMENT PER YEAR'} value={`${metadata['availment_per_year'] || ''}`} />\n            )}\n            {([metadata['waiting_period_type'], metadata['waiting_period_unit']], showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n            {([billingArrangement[metadata['billing_arangement']]], showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'OP':\n      amountLimit = {\n        amt_limit: 'Amount Limit',\n        max_session: 'Max Session',\n        max_amount: 'Max Amount',\n        percent_mbl: 'Percent of MBL',\n        percent_abl: 'Percent of ABL',\n        no_visits: 'No. of Visits'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['amt_limit'] && metadata['amt_limit_unit']) || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Limit\n                </Typography>\n                <ValueField\n                  label={'Amount Limit for all procedures'}\n                  value={`${metadata['amt_limit']} ${amountLimit[metadata['amt_limit_unit']]}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'OM':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['limit_for_all'] && metadata['limit_for_all_unit']) || showAll) && (\n              <ValueField\n                label={'Limit for All'}\n                value={`${metadata['limit_for_all']} ${metadata['limit_for_all_unit']}`}\n              />\n            )}\n          </div>\n          <div className={classes.groups}>\n            {((metadata['waiting_period'] && metadata['waiting_period_unit']) || showAll) && (\n              <ValueField\n                label={'Waiting period after effectivity of member'}\n                value={`${metadata['waiting_period']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'NT':\n      return <React.Fragment />\n\n    case 'PPE':\n      return <React.Fragment />\n\n    case 'PV':\n      return <React.Fragment />\n\n    case 'RBC':\n      let voluntaryValue = ''\n      // let involuntaryValue = ''\n      if (metadata['voluntary_upgrading_type']) {\n        if (metadata['voluntary_upgrading_type'] === 'paid_by_member') {\n          voluntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['voluntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['voluntary_upgrading_amount']\n        ) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' hrs'\n        } else if (metadata['voluntary_upgrading_type'] === 'rate' && metadata['voluntary_upgrading_amount']) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' %'\n        }\n      }\n      if (metadata['involuntary_upgrading_type']) {\n        if (metadata['involuntary_upgrading_type'] === 'paid_by_member') {\n          // involuntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['involuntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['involuntary_upgrading_amount']\n        ) {\n          // involuntaryValue = metadata['involuntary_upgrading_amount'] + ' hrs'\n        }\n      }\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['voluntary_upgrading_type'] || showAll) && (\n              <React.Fragment>\n                <ValueField label={'Voluntary Room Upgrading'} value={voluntaryValue} />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SD':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['limit_for_all'] && metadata['limit_for_all_unit']) || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Limit\n                </Typography>\n                <ValueField\n                  label={'Peso Limit for all procedures'}\n                  value={`${metadata['limit_for_all']} ${metadata['limit_for_all_unit']}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SH':\n      return <React.Fragment />\n  }\n}\n\nconst populateMember = args => {}\n\nexport default function Footer (props) {\n  const { contractType } = props\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setElemFields(populateClient(props))\n    } else if (contractType === 'member') {\n      setElemFields(populateMember(props))\n    }\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","export class BenefitNode2 {\n  static getNodeTree (item, nodes) {\n    let current = item\n    let treePath = []\n    let levelLimit = 2\n\n    if (Array.isArray(current['tree_path'])) {\n      treePath = [...current['tree_path']].reverse()\n    } else {\n      treePath = Object.values(current['tree_path']).reverse()\n    }\n    treePath.shift()\n\n    if (current.level === 3) {\n      levelLimit = 1\n    }\n\n    const nodeTree = treePath\n      .reduce((result, path) => {\n        if (current !== undefined && current.level > levelLimit) {\n          const input = {\n            id: current.id,\n            name: current.name,\n            code: current.code\n          }\n\n          if (current['original_id']) {\n            input['original_id'] = current['original_id']\n          }\n\n          result.push(input)\n\n          current = nodes.find(node => {\n            return node.level === current.level - 1 && node.code === path && node.children.includes(current.id)\n          })\n        }\n        return result\n      }, [])\n      .reverse()\n\n    return nodeTree\n  }\n\n  static convertNodeData (nodesParam, loadExisting = false) {\n    let nodeIDMap = []\n\n    let nodes = [...nodesParam]\n\n    if (!loadExisting) {\n      nodes = nodes.filter(item => {\n        if (item.level === 1 || item.level === 2 || (item.level > 2 && item.tree_path[2] === 'BASE')) {\n          return true\n        }\n        return false\n      })\n    }\n\n    nodes = nodes.sort((node1, node2) => {\n      if (node1.level === 3 && node1.code === 'BASE') return -1\n      if (node2.level === 3 && node2.code === 'BASE') return 1\n\n      if (node1.sort_index > node2.sort_index) return -1\n      if (node1.sort_index < node2.sort_index) return 1\n\n      if (node1.name > node2.name) return 1\n      if (node1.name < node2.name) return -1\n\n      return 0\n    })\n\n    nodes = nodes.map((item, i) => {\n      const oldID = item['_id']\n      let itemPlanType = 'BASE'\n\n      if (item.level > 2 && item.tree_path[2] !== 'BASE') {\n        itemPlanType = item.tree_path[2]\n      }\n\n      const newID = 'NODE-' + itemPlanType + '-' + i.toString().padStart(3, '0')\n\n      item['included'] = true\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      let metadata = Object.assign({}, item['custom_metadata'])\n\n      if (metadata['included_facilities'] && metadata['included_facilities'].length > 0) {\n        const newIncludedFacilities = [...metadata['included_facilities']]\n\n        metadata['partner_network_list'] = newIncludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = true\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        delete metadata.included_facilities\n      }\n\n      if (metadata['excluded_facilties'] && metadata['excluded_facilties'].length > 0) {\n        let newExcludedFacilities = [...metadata['excluded_facilties']]\n\n        let partnerNetworkList = []\n\n        if (metadata['partner_network_list'] !== undefined) {\n          partnerNetworkList = [...metadata['partner_network_list']]\n        }\n\n        newExcludedFacilities = newExcludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = false\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        metadata['partner_network_list'] = [...partnerNetworkList, ...newExcludedFacilities]\n\n        delete metadata.excluded_facilties\n      }\n\n      item['custom_metadata'] = metadata\n\n      nodeIDMap.push(IDSet)\n\n      if (loadExisting) {\n        item['original_id'] = item['_id']\n      }\n\n      item['id'] = newID\n\n      delete item['_id']\n\n      return Object.assign({}, item)\n    })\n\n    nodes = nodes.map(item => {\n      if (loadExisting) {\n        item['original_children'] = [...item['children']]\n      }\n\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n\n          return result\n        }, [])\n      }\n      return item\n    })\n\n    return nodes\n  }\n\n  static createExclusionList (nodes) {\n    const eList = nodes.reduce((exResult, item) => {\n      // if (item['custom_metadata']['is_excluded'] && item['custom_metadata']['is_excluded'] === true) {\n      if (item['level'] === 6 && item['tree_path'][3] === 'EX') {\n        const exTree = this.getNodeTree(item, nodes)\n        exResult.push(exTree)\n      }\n      return exResult\n    }, [])\n\n    return eList\n  }\n\n  static combineNodes (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      parent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['parent_name'] = parent.name\n          child['parent_code'] = parent.code\n          child['disabled'] = false\n          result.push(child)\n        }\n      })\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static combineNodes2 (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      let newParent = Object.assign({}, parent)\n      let newChildNodes = []\n\n      newParent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['disabled'] = false\n          newChildNodes.push(child)\n        }\n      })\n\n      newParent['child_nodes'] = newChildNodes\n      newParent['disabled'] = false\n\n      result.push(newParent)\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static getFilteredNodes (nodes, level) {\n    return nodes.filter(item => {\n      return item.level === level\n    })\n  }\n\n  static getSidebarList (benefitCategoryNodes, planType, planPackage) {\n    return benefitCategoryNodes.reduce((result, item) => {\n      if (item.tree_path[2] === planType && item.tree_path[3] === planPackage) {\n        let newItem = Object.assign({}, item)\n\n        if (planType !== 'BASE') {\n          const baseNode = benefitCategoryNodes.find(baseItem => {\n            return (\n              baseItem.name === newItem.name &&\n              baseItem.code === newItem.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === newItem.tree_path[3] &&\n              baseItem.tree_path[4] === newItem.tree_path[4]\n            )\n          })\n\n          if (baseNode && baseNode.included === false) {\n            newItem['base_disabled'] = true\n          } else {\n            newItem['base_disabled'] = false\n          }\n        }\n\n        result.push(newItem)\n      }\n\n      return result\n    }, [])\n  }\n\n  static getRows (\n    exclusionList,\n    benefitCategoryNodes,\n    benefitTypeNodes,\n    mainBenefitNodes,\n    subBenefitNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    let rows = []\n    if (['EX'].includes(selectedBenefitCategory)) {\n      if (exclusionList.length > 0) {\n        rows = exclusionList.reduce((result, exclusionArray) => {\n          const code = exclusionArray[0].code\n\n          if (code === selectedPlanType) {\n            let exclusion = Object.assign({}, exclusionArray[exclusionArray.length - 1])\n\n            const parent = Object.assign({}, exclusionArray[exclusionArray.length - 2])\n\n            exclusion['parent_name'] = parent.name\n            exclusion['parent_code'] = parent.code\n            exclusion['disabled'] = false\n            exclusion['included'] = false\n\n            const found = benefitTypeNodes.find(item => {\n              return item.id === exclusion.id\n            })\n\n            if (found && found['custom_metadata'] && found['custom_metadata']['is_excluded'] !== undefined) {\n              const metadata = Object.assign({}, found['custom_metadata'])\n              exclusion['included'] = metadata['is_excluded']\n            }\n\n            result.push(exclusion)\n          }\n\n          return result\n        }, [])\n      }\n    } else if (['ID', 'NT'].includes(selectedBenefitCategory)) {\n      const categoryNodes = benefitCategoryNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n\n      rows = this.combineNodes2(categoryNodes, typeNodes)\n    } else if (['EL'].includes(selectedBenefitCategory)) {\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      const subNodes = subBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      rows = this.combineNodes2(benefitNodes, subNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          item.child_nodes.map(child => {\n            const baseNode = subBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === child.name &&\n                baseItem.code === child.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === child.tree_path[3] &&\n                baseItem.tree_path[4] === child.tree_path[4] &&\n                baseItem.tree_path[5] === child.tree_path[5] &&\n                baseItem.tree_path[6] === child.tree_path[6] &&\n                baseItem.tree_path[7] === child.tree_path[7]\n              )\n            })\n\n            if (baseNode && baseNode.included === true) {\n              child['disabled'] = true\n            } else {\n              child['disabled'] = false\n            }\n\n            return child\n          })\n          return item\n        })\n      }\n    } else if (['RBC'].includes(selectedBenefitCategory)) {\n      rows = [...benefitCategoryNodes]\n\n      rows = rows.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedPlanPackage\n      })\n\n      rows = rows.map(item => {\n        item['disabled'] = false\n        return item\n      })\n    } else if (['EM', 'DNT', 'CC', 'EC', 'PV', 'SH', 'ADD', 'SD'].includes(selectedBenefitCategory)) {\n      rows = [...benefitTypeNodes]\n\n      rows = rows.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      if (selectedPlanType !== 'BASE' && selectedBenefitCategory !== 'SH') {\n        rows = rows.map(item => {\n          const baseNode = benefitTypeNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      } else {\n        rows = rows.map(item => {\n          item['disabled'] = false\n          return item\n        })\n      }\n      return rows\n    } else if (['MT', 'APE', 'IP', 'OP', 'OM', 'PPE'].includes(selectedBenefitCategory)) {\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[4] === selectedBenefitCategory\n      })\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      rows = this.combineNodes(typeNodes, benefitNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          const baseNode = mainBenefitNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5] &&\n              baseItem.tree_path[6] === item.tree_path[6]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      }\n    } else {\n      rows = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n    }\n\n    if (selectedBenefitCategory !== 'EX') {\n      rows = rows.filter(item => {\n        if (item['custom_metadata'] && item['custom_metadata']['standard_exclusion'] !== undefined) {\n          return !item['custom_metadata']['standard_exclusion']\n        }\n        return true\n      })\n    }\n\n    return rows\n  }\n\n  static getContractNode (contractNodes) {\n    return contractNodes.find(item => item.code === 'CT')\n  }\n\n  static getCategoryNode (\n    planPackageNodes,\n    benefitCategoryNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    if (['RBC', 'EX'].includes(selectedBenefitCategory)) {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedPlanPackage &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage\n      )\n    } else if (selectedBenefitCategory === 'NT') {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedBenefitCategory\n      )\n    } else {\n      return benefitCategoryNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n      )\n    }\n  }\n\n  static getPlanTypeList (planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes) {\n    const coverageCategories = ['EM', 'SD', 'PV']\n    const riderCategories = ['DNT', 'EC', 'CC', 'SH', 'ADD']\n    // const combinedCategories = [...coverageCategories, ...riderCategories];\n    const combinedNodes = [...mainBenefitNodes, ...benefitTypeNodes, ...subBenefitNodes]\n\n    return planTypeNodes.map(item => {\n      item['count'] = combinedNodes.reduce((result, benefit) => {\n        if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['CV'].includes(benefit.tree_path[3]) &&\n          coverageCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['RI'].includes(benefit.tree_path[3]) &&\n          riderCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included && benefit.tree_path[4] !== 'SH') {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 7 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['EM', 'EC', 'EL'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 8 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['OP'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        }\n        return result\n      }, 0)\n\n      return item\n    })\n  }\n\n  static generatePlanNodes (baseNodes, name, code, tmp_data, basePlanType = 'BASE') {\n    let planNodes = [...baseNodes]\n    let planTypeID = ''\n\n    planNodes = planNodes.filter(item => {\n      return item.level > 2 && item.tree_path[2] === basePlanType\n    })\n\n    let nodeIDMap = []\n\n    planNodes = planNodes.map((item, i) => {\n      let newItem = Object.assign({}, item)\n\n      const oldID = newItem['id']\n      const newID = 'NODE-' + code + '-' + i.toString().padStart(3, '0')\n\n      if (newItem.level > 2 && newItem.tree_path[2] === basePlanType) {\n        newItem.tree_path = Object.assign({}, newItem.tree_path)\n        newItem.tree_path[2] = code\n      }\n\n      if (newItem.level === 3 && newItem.code === basePlanType) {\n        newItem['name'] = name\n        newItem['code'] = code\n        if (!newItem['custom_metadata']) {\n          newItem['custom_metadata'] = {}\n        }\n        if (!newItem['custom_metadata_schema']) {\n          newItem['custom_metadata_schema'] = {}\n        }\n        newItem['custom_metadata'] = Object.assign({}, newItem.custom_metadata)\n        newItem['description'] = 'Specific Plan Type Template'\n        newItem['sort_index'] = 2\n        newItem['custom_metadata']['title'] = 'Benefits for ' + name\n        newItem['custom_metadata']['contract_plan_type'] = tmp_data['contractPlanType']\n          ? tmp_data['contractPlanType']\n          : tmp_data['requestedRate']\n          ? 'HMO'\n          : ''\n        newItem['custom_metadata']['requested_rate'] = tmp_data['requestedRate'] ? tmp_data['requestedRate'] : 0\n        newItem['custom_metadata']['admin_fee'] = tmp_data['adminFee'] ? tmp_data['adminFee'] : 0\n        newItem['custom_metadata']['naf'] = tmp_data['naf'] ? tmp_data['naf'] : 0\n        newItem['custom_metadata']['rsd'] = tmp_data['rsdFee'] ? tmp_data['rsdFee'] : 0\n\n        newItem['custom_metadata']['indicative_principals'] = tmp_data['indicativeNumOfPrincipals']\n          ? tmp_data['indicativeNumOfPrincipals']\n          : 0\n        newItem['custom_metadata']['indicative_dependents'] = tmp_data['indicativeNumOfDependents']\n          ? tmp_data['indicativeNumOfDependents']\n          : 0\n        newItem['custom_metadata_schema'] = {\n          properties: {\n            title: {\n              type: 'string'\n            },\n            contract_plan_type: {\n              type: 'string'\n            },\n            requested_rate: {\n              type: 'number'\n            },\n            admin_fee: {\n              type: 'number'\n            },\n            naf: {\n              type: 'number'\n            },\n            rsd: {\n              type: 'number'\n            },\n            indicative_principals: {\n              type: 'number'\n            },\n            indicative_dependents: {\n              type: 'number'\n            }\n          }\n        }\n\n        planTypeID = newID\n      }\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      nodeIDMap.push(IDSet)\n      newItem['id'] = newID\n      newItem['edited'] = false\n\n      delete newItem.original_children\n      delete newItem.original_id\n\n      return newItem\n    })\n\n    planNodes = planNodes.map(item => {\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n          return result\n        }, [])\n      }\n\n      if (item['limits']) {\n        item['limits'] = [...item['limits']]\n      }\n\n      if (item['custom_metadata'] && item['custom_metadata']['partner_network_list']) {\n        let metadata = Object.assign({}, item['custom_metadata'])\n\n        let newPartnerNetworkList = [...item['custom_metadata']['partner_network_list']]\n\n        newPartnerNetworkList = newPartnerNetworkList.reduce((result, partner) => {\n          let newPartner = Object.assign({}, partner)\n\n          newPartner['parent'] = item['id']\n\n          result.push(newPartner)\n          return result\n        }, [])\n\n        metadata['partner_network_list'] = newPartnerNetworkList\n\n        item['custom_metadata'] = metadata\n      }\n\n      if (item['original_node']) {\n        const found = nodeIDMap.find(set => {\n          return set.id === item['original_node']\n        })\n\n        if (found) {\n          item['original_node'] = found.newID\n        }\n      }\n      return item\n    })\n\n    return { planNodes, planTypeID }\n  }\n\n  static combineBaseBenefitNodes (baseNodes, benefitNodes, addFlag = false) {\n    // Get all the plan types\n    const planTypeNodes = benefitNodes.reduce((result, node) => {\n      if (node.level === 3 && node.code !== 'BASE') {\n        result.push(node)\n      }\n      return result\n    }, [])\n\n    let nodes = [...baseNodes]\n\n    // remove the base eligiblity nodes\n    nodes = nodes.filter(item => {\n      return !([7, 8].includes(item.level) && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL')\n    })\n\n    nodes = nodes.map(item => {\n      if (item.level === 6 && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL') {\n        let newItem = Object.assign({}, item)\n\n        newItem.children = newItem.children.filter(child => !!nodes.find(node => node.id === child))\n        return newItem\n      } else {\n        return item\n      }\n    })\n\n    // Duplicate the base nodes for every non-base plan type\n    nodes = planTypeNodes.reduce((result, planTypeNode) => {\n      const { planNodes, planTypeID } = this.generatePlanNodes(\n        result,\n        planTypeNode.name,\n        planTypeNode.code,\n        planTypeNode\n      )\n\n      const index = result.findIndex(item => item.level === 2 && item.code === 'CT')\n\n      result[index]['children'].push(planTypeID)\n\n      return [...result, ...planNodes]\n    }, nodes)\n\n    // Overlay the benefit nodes array to the base nodes array and return\n    nodes = nodes.map(node => {\n      let newNode = Object.assign({}, node)\n\n      const found = benefitNodes.find(benefit => {\n        if (newNode.level === 8) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6] &&\n            newNode.tree_path[7] === benefit.tree_path[7]\n          )\n        } else if (newNode.level === 7) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6]\n          )\n        } else if (newNode.level === 6) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5]\n          )\n        } else if (newNode.level === 5) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4]\n          )\n        } else if (newNode.level === 4) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3]\n          )\n        } else if (newNode.level === 3) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2]\n          )\n        } else if (newNode.code === 'CT') {\n          return benefit.code === 'CT'\n        } else if (newNode.code === 'MCT') {\n          return benefit.code === 'MCT'\n        } else {\n          return newNode.name === benefit.name && newNode.code === benefit.code && newNode.level === benefit.level\n        }\n      })\n\n      if (found) {\n        const foundNode = Object.assign({}, found)\n        delete foundNode.id\n        delete foundNode.children\n        delete foundNode.node_path\n        delete foundNode.tree_id\n        delete foundNode.tree_path\n\n        newNode = Object.assign({}, newNode, foundNode)\n\n        if (addFlag && newNode.level > 3 && newNode.tree_path[2] !== 'BASE') {\n          newNode['edited'] = true\n        }\n      } else {\n        if (\n          newNode.level > 6 ||\n          (newNode.level === 5 && ['RI', 'CV', 'RB', 'ID'].includes(newNode.tree_path[3])) ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'EX') ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'RI' && newNode.tree_path[4] === 'OM') ||\n          (newNode.level === 6 && ['EM', 'CC', 'EC', 'DNT', 'ADD', 'SH', 'SD', 'PV'].includes(newNode.tree_path[4]))\n        ) {\n          newNode['included'] = false\n        }\n      }\n\n      return newNode\n    })\n\n    nodes.map((node, i) => {\n      if (node.level > 3 && node.tree_path[2] !== 'BASE' && node.tree_path[3] !== 'RB') {\n        const baseIndex = this.getMatchByPlanCode(nodes, nodes[i], 'BASE')\n\n        if (addFlag && (node.tree_path[3] === 'EX' || (node.tree_path[3] === 'RI' && node.tree_path[4] === 'OM'))) {\n          if (\n            baseIndex > -1 &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] === true\n          ) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (addFlag) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        } else {\n          if (baseIndex > -1 && nodes[baseIndex]['included'] && nodes[baseIndex]['included'] === true) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (newNode['included'] === false) {\n              const foundNode = Object.assign({}, nodes[baseIndex])\n              delete foundNode.id\n              delete foundNode.children\n              delete foundNode.original_id\n              delete foundNode.original_children\n              delete foundNode.node_path\n              delete foundNode.tree_id\n              delete foundNode.tree_path\n\n              newNode = Object.assign({}, newNode, foundNode)\n\n              newNode['included'] = true\n            }\n\n            if (addFlag && !newNode['edited']) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        }\n      }\n    })\n\n    let count = 0\n\n    let eligiblityNodes = benefitNodes.filter(benefit => {\n      return [7, 8].includes(benefit.level) && benefit.tree_path[3] === 'TC' && benefit.tree_path[4] === 'EL'\n    })\n\n    eligiblityNodes = eligiblityNodes.sort((node1, node2) => {\n      if (node1.level < node2.level) return -1\n      if (node1.level > node2.level) return 1\n\n      return 0\n    })\n\n    eligiblityNodes.map(benefit => {\n      const newID = 'NODE-LOAD-' + count.toString().padStart(3, '0')\n      const parentLevel = benefit.level - 1\n      const parentCode = benefit.tree_path[benefit.level - 2]\n      const parentIndex = nodes.findIndex(node => {\n        if (benefit.level === 5) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3]\n          )\n        } else if (benefit.level === 6) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4]\n          )\n        } else if (benefit.level === 7) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5]\n          )\n        } else if (benefit.level === 8) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5] &&\n            benefit.tree_path[6] === node.tree_path[6]\n          )\n        }\n        return false\n      })\n\n      let newNode = Object.assign({}, benefit)\n      newNode['children'] = []\n      if (nodes[parentIndex] && nodes[parentIndex] !== undefined) {\n        let newChildren = [...nodes[parentIndex].children]\n        newChildren.push(newID)\n\n        nodes[parentIndex]['children'] = newChildren\n      }\n\n      newNode['included'] = true\n      newNode['id'] = newID\n\n      nodes.push(newNode)\n      count++\n    })\n\n    return nodes\n  }\n\n  static getMatchByPlanCode (nodes, baseNode, planCode) {\n    const planIndex = nodes.findIndex(item => {\n      if (baseNode.level === 8) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6] &&\n          baseNode.tree_path[7] === item.tree_path[7]\n        )\n      } else if (baseNode.level === 7) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6]\n        )\n      } else if (baseNode.level === 6) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5]\n        )\n      } else if (baseNode.level === 5) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4]\n        )\n      } else if (baseNode.level === 4) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3]\n        )\n      } else if (baseNode.level === 3) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2]\n        )\n      } else {\n        return baseNode.name === item.name && baseNode.code === item.code && baseNode.level === item.level\n      }\n    })\n    return planIndex\n  }\n}\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport SideBar from './Components/SideBar/SideBar'\nimport LimitTable from './Components/LimitTable/LimitTable'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n// import { BenefitNode } from 'Utilities/BenefitNode'\nimport { BenefitNode2 } from 'Utilities/BenefitNode2'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { contractType, member, client } = props\n  // Service\n\n  // Local Variables\n  const [selectedPlanType, setSelectedPlanType] = React.useState('BASE')\n  const [selectedPlanPackage, setSelectedPlanPackage] = React.useState('RB')\n  const [selectedBenefitCategory, setSelectedBenefitCategory] = React.useState('RBC')\n\n  const [showAll, setShowAll] = React.useState(true)\n\n  const [benefitRows, setBenefitRows] = React.useState([])\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [contractNodes, setContractNodes] = React.useState([])\n  const [planTypeNodes, setPlanTypeNodes] = React.useState([])\n  const [planPackageNodes, setPlanPackageNodes] = React.useState([])\n  const [benefitCategoryNodes, setBenefitCategoryNodes] = React.useState([])\n  const [benefitTypeNodes, setBenefitTypeNodes] = React.useState([])\n  const [mainBenefitNodes, setMainBenefitNodes] = React.useState([])\n  const [subBenefitNodes, setSubBenefitNodes] = React.useState([])\n\n  const [contractId, setContractId] = React.useState('')\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setContractId('---')\n      if (client.contract.base.length <= 0 || client.contract.benefits.length <= 0) return\n\n      console.log(client)\n\n      const baseNodes = BenefitNode2.convertNodeData(client.contract.base) // temporary handling if no result from endpoint\n      const contractNodes = BenefitNode2.convertNodeData(client.contract.benefits, true) // temporary handling if member have no benefit\n      const nodes = BenefitNode2.combineBaseBenefitNodes(baseNodes, contractNodes)\n\n      const eList = BenefitNode2.createExclusionList(nodes)\n\n      setExclusionList(eList)\n\n      setContractNodes(BenefitNode2.getFilteredNodes(nodes, 2))\n      setPlanTypeNodes(BenefitNode2.getFilteredNodes(nodes, 3))\n      setPlanPackageNodes(BenefitNode2.getFilteredNodes(nodes, 4))\n      setBenefitCategoryNodes(BenefitNode2.getFilteredNodes(nodes, 5))\n      setBenefitTypeNodes(BenefitNode2.getFilteredNodes(nodes, 6))\n      setMainBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 7))\n      setSubBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 8))\n\n      setSelectedPlanType('BASE')\n      setSelectedPlanPackage('RB')\n      setSelectedBenefitCategory('RBC')\n    } else if (contractType === 'member') {\n      if (member.info.contracts) setContractId(member.contracts.slice().pop())\n      // ALGO HERE\n    }\n  }, [contractType, member, client])\n\n  React.useEffect(() => {\n    setBenefitRows(getRows(selectedPlanPackage, selectedBenefitCategory))\n  }, [selectedPlanType, selectedPlanPackage, selectedBenefitCategory])\n\n  const getContractNode = () => {\n    return BenefitNode2.getContractNode(contractNodes)\n  }\n\n  const getCategoryNode = () => {\n    return BenefitNode2.getCategoryNode(\n      planPackageNodes,\n      benefitCategoryNodes,\n      selectedPlanType,\n      selectedPlanPackage,\n      selectedBenefitCategory\n    )\n  }\n\n  const getPlanTypeList = () => {\n    return BenefitNode2.getPlanTypeList(planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes)\n  }\n\n  const getRows = (planPackage, benefitCategory) => {\n    return BenefitNode2.getRows(\n      exclusionList,\n      benefitCategoryNodes,\n      benefitTypeNodes,\n      mainBenefitNodes,\n      subBenefitNodes,\n      selectedPlanType,\n      planPackage,\n      benefitCategory\n    )\n  }\n\n  const getRoomAndBoardList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RB')\n  }\n\n  const getCoverageList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'CV')\n  }\n\n  const getRiderList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RI')\n  }\n\n  const handleItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setSelectedPlanPackage(planPackage)\n    setSelectedBenefitCategory(benefitCategory)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            planTypeList={getPlanTypeList()}\n            contractNode={getContractNode()}\n            categoryNode={getCategoryNode()}\n            roomAndBoardList={getRoomAndBoardList()}\n            coverageList={getCoverageList()}\n            riderList={getRiderList()}\n            onItemClick={handleItemClick}\n          />\n        </div>\n\n        <div className={classes['right-side']}>\n          <Header\n            contractType={contractType}\n            showAll={showAll}\n            benefitType={selectedBenefitCategory}\n            categoryNode={getContractNode()}\n          />\n\n          <LimitTable\n            contractType={contractType}\n            benefitType={selectedBenefitCategory}\n            rows={benefitRows}\n            contractId={contractId}\n            planTypeList={getPlanTypeList()}\n            contractNode={getContractNode()}\n            categoryNode={getCategoryNode()}\n            roomAndBoardList={getRoomAndBoardList()}\n            coverageList={getCoverageList()}\n            riderList={getRiderList()}\n          />\n\n          <Footer\n            contractType={contractType}\n            showAll={showAll}\n            benefitType={selectedBenefitCategory}\n            categoryNode={getContractNode()}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'parent_name', search: true },\n  { name: 'Item', sortField: 'name', search: true }\n]\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { contractType, member, client } = props\n  // Service\n\n  // Local Variables\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlantTypes] = React.useState([])\n\n  const [rows, setRows] = React.useState([])\n\n  const getExclusions = tree => {\n    const benefitsExclusion = tree.filter(element => element.level === 5 && element.tree_path[3] === 'EX')\n\n    let childExclusions = []\n    benefitsExclusion.map(benefit => {\n      benefit.children.forEach(childId => {\n        // const subBenefit = tree.filter(element => element.original_id === childId)[0]\n        const subBenefit = tree.filter(element => element._id === childId && element.custom_metadata.is_excluded)[0]\n        // console.log('test0', tree[0])\n        // console.log('Any subBenefit? ', subBenefit)\n        if (subBenefit) {\n          childExclusions.push({\n            name: subBenefit.name,\n            parent_name: benefit.name,\n            code: subBenefit.code,\n            parent_code: benefit.code,\n            plan_type: benefit.tree_path[2]\n          })\n        }\n      })\n    })\n\n    const subPlan = tree.filter(element => element.level === 3)\n    const planTypes = subPlan.map(plan => plan.code)\n    setPlantTypes(planTypes)\n\n    setExclusionList(childExclusions)\n  }\n\n  React.useEffect(() => {\n    if (contractType === 'member') {\n      getExclusions(member.contract.benefits)\n      setRows(generateRows(selectedPlan))\n    } else if (contractType === 'client') {\n      getExclusions(client.contract.benefits)\n      setRows(generateRows(selectedPlan))\n    }\n  }, [contractType, member, client])\n\n  const queryColumn = (collection, { search, field }) => {\n    // if (collection === 'benefits') {\n    //   clearTimeout(debounce)\n    //   setDebounce(\n    //     setTimeout(() => {\n    //       let searchObj = search\n    //       let category = field\n    //       if (field === 'id') {\n    //         setPartnerId(search)\n    //         if (partnerName || partnerLocation) {\n    //           searchObj = {\n    //             id: search,\n    //             name: partnerName,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'name') {\n    //         setPartnerName(search)\n    //         if (partnerId || partnerLocation) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: search,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'address') {\n    //         setPartnerLocation(search)\n    //         if (partnerId || partnerName) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: partnerName,\n    //             address: search\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       console.log(search, category)\n    //       if (search.length >= 3 || (!search && category === 'and')) {\n    //         benefitservice({\n    //           member_account_no: memberAccountNumber,\n    //           params: {\n    //             limit: benefits.limit,\n    //             page: benefits.page,\n    //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //             search: searchObj,\n    //             category: category\n    //           }\n    //         }).then(res => {\n    //           const { data } = res.data\n    //           setbenefits(state => ({\n    //             ...state,\n    //             data: data.results,\n    //             count: data.count,\n    //             page: 1,\n    //             orderBy: 'name',\n    //             order: true\n    //           }))\n    //         })\n    //       } else fetchAll()\n    //     }, 500)\n    //   )\n    // } else {\n    //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    // }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     ...benefits,\n    //     orderBy,\n    //     order: !benefits.order,\n    //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    //   setDoctors(state => ({ ...state, filtered: sorted }))\n    // }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     category: benefits.category,\n    //     limit: benefits.limit,\n    //     page: benefits.page,\n    //     search: benefits.search,\n    //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //     ...params\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    // }\n  }\n\n  const generateRows = selectedPlan => {\n    let _rows = exclusionList.filter(benefit => benefit.plan_type === selectedPlan)\n    // FILTER ALL\n    // if (largeSearch.trim() !== '') {\n    //   filteredTickets = filteredTickets.filter(col => {\n    //     return (\n    //       col['name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim()) ||\n    //       col['parent_name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim())\n    //     )\n    //   })\n    // }\n    // FILTER COLUMNS\n    // columns.map(column => {\n    //   filteredTickets = filteredTickets.filter(ticket =>\n    //     filters[column.name]\n    //       ? filters[column.name] === '' ||\n    //         (ticket[column.name] &&\n    //           ticket[column.name]\n    //             .toString()\n    //             .toLowerCase()\n    //             .includes(filters[column.name].toLowerCase()))\n    //       : true\n    //   )\n    // })\n    return _rows\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link\n                onClick={() => {\n                  setSelectedPlan(item)\n                  setRows(generateRows(item))\n                }}\n              >\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      // active={benefits.orderBy === headCell.sortField}\n                      // direction={benefits.order ? 'asc' : 'desc'}\n                      onClick={event => {}}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={rows.map((row, index) => (\n              <TableRow key={`ex-${index}`}>\n                <TableCell>{row.parent_name}</TableCell>\n                <TableCell>{row.name}</TableCell>\n              </TableRow>\n            ))}\n            pagination\n            count={0}\n            page={1}\n            limit={5}\n            rowsPerPageOptions={[5, 10, 15]}\n            onChange={args => {}}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search\n              }\n              category = 'and'\n            }\n          }\n          console.log(search, category)\n          if (search.length >= 3 || (!search && category === 'and')) {\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","function extractLoa (data) {\n  return data.map(item => {\n    const init = {\n      claim_number: item.claim_number ? item.claim_number : '',\n      __type:\n        item.ticket_type === 'Outpatient Procedure'\n          ? 'UtilizationOutPatientProcedure'\n          : item.ticket_type === 'Inpatient'\n            ? 'UtilizationInPatient'\n            : item.ticket_type === 'Consultation'\n              ? 'UtilizationOutPatientConsultation'\n              : item.ticket_type === 'Emergency Room'\n                ? 'UtilizationEmergency'\n                : 'UtilizationReimbursemt',\n      type: item.type ? item.type : 'IBNR',\n      grand_total: item.total_amount ? item.total_amount : 0,\n      diagnosis: item.diagnoses ? item.diagnoses : [],\n      doctors: item.professional_fees\n        ? item.professional_fees.map((doctor, index) => ({\n          name: doctor.doctor_name,\n          specialization: doctor.specialization,\n          id: `${index}`\n        }))\n        : [],\n      date_admitted: item.date_issued ? item.date_issued : '',\n      procedures: item.procedures ? item.procedures : [],\n      professional_fees: item.professional_fees ? item.professional_fees : []\n    }\n    return {\n      ...item,\n      __type: init.__type,\n      claim_no: init.claim_number,\n      diagnosis: init.diagnosis,\n      grand_total: init.grand_total,\n      session: 1,\n      date_admitted: init.date_admitted,\n      type: init.type,\n      doctors: init.doctors,\n      procedures: init.procedures,\n      professional_fees: init.professional_fees\n    }\n  })\n}\n\nfunction setDoctors (data) {\n  return data.map(item => {\n    let newDoctor = [{ id: item.partner_doctor_id, name: item.partner_doctor_name }]\n    let _doctors = [...item.doctors]\n    if (typeof newDoctor[0].id !== 'undefined') {\n      _doctors = [..._doctors, ...newDoctor]\n    }\n\n    return {\n      ...item,\n      doctors: _doctors\n    }\n  })\n}\n\nexport { extractLoa, setDoctors }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { extractLoa, setDoctors } from './helper'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setLimitType, resetLimitType } from '../../Store/actions'\n\nconst headCells = [\n  { name: 'Claim ID', sortField: 'claim_number', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedure', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.title)\n\n  const { fetchService, diagnosis, member = {}, memberBenefitLimit = {}, utilizationLoa = {} } = props\n  const [list, setList] = React.useState({\n    rows: [],\n    alter: []\n  })\n\n  const [filters, setFilters] = React.useState({})\n  const [allFilters, setAllFilters] = React.useState({})\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: list.rows,\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (!memberBenefitLimit.length <= 0) {\n        type = memberBenefitLimit[0].type\n        limit = memberBenefitLimit[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          let _utilizationLoa = extractLoa(utilizationLoa)\n\n          let list = setDoctors(_utilizationLoa.concat(data))\n\n          setList(state => ({ ...state, rows: list, alter: list }))\n          setFilteredRows(state => ({ ...state, count: list.length, data: list.slice(0, state.limit) }))\n\n          let ibnr = 0\n          let utilized = 0\n\n          _utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = diagnosis.filter(icd => icd.primary === true)[0] || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { category_code } = data[0] || []\n          primary.category_code = category_code\n\n          fetchService({\n            member_account_no: member.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            // extractation of needed fields\n            _utilizationLoa = extractLoa(_utilizationLoa)\n            let list = setDoctors(_utilizationLoa.concat(data))\n\n            setList(state => ({ ...state, rows: list, alter: list }))\n            setFilteredRows(state => ({ ...state, count: list.length, data: list.slice(0, state.limit) }))\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, memberBenefitLimit, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    let rows = allFilter(list.rows, allFilters)\n    rows = columnFilter(rows, filters)\n    // rows = lodash.sortBy(rows, 'claim_no')\n    setList(state => ({ ...state, alter: rows }))\n    setFilteredRows(state => ({\n      ...state,\n      page: 1,\n      count: rows.length,\n      data: Object.keys(filters).length !== 0 ? lodash.chunk(rows, state.limit)[0] : lodash.take(rows, state.limit)\n    }))\n  }, [filters, allFilters])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (field !== 'all') setFilters(state => ({ ...state, [field]: search }))\n        if (field === 'all') setAllFilters({ [field]: search })\n      }, 500)\n    )\n  }\n\n  const compare = (list, find, comparer = includesAny, fields = []) => {\n    if (Array.isArray(list)) {\n      return list.some(item => {\n        for (const field of fields) {\n          if (comparer(item[field], find)) return true\n        }\n      })\n    } else {\n      if (comparer(list, find)) return true\n    }\n    return false\n  }\n\n  const includesAny = (s1 = '', s2 = '') => {\n    return s1.toLowerCase().includes(s2.toLowerCase())\n  }\n\n  const allFilter = (rows, filters) => {\n    let filteredRows = rows\n    return filteredRows.filter(row => {\n      if (includesAny(row.claim_no, filters.all)) return true\n\n      if (includesAny(row.partner_name, filters.all)) return true\n\n      if (DateFormatter(row.date_admitted) === filters.all) return true\n\n      if (includesAny(row.type, filters.all)) return true\n      // temporary\n      if (includesAny(row.status === 'Open' ? row.status : 'Approved', filters.all)) return true\n\n      if (row.grand_total === parseFloat(filters.all)) return true\n\n      if (row.session === parseFloat(filters.all)) return true\n\n      // console.log(compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis']))\n      if (row.__type === 'UtilizationInPatient') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      }\n    })\n  }\n\n  const columnFilter = (rows, filters) => {\n    // hard coded ugly static search\n    // TODO refactor for dynamic deep comparison\n    let filteredRows = rows\n    for (const filter in filters) if (filters[filter] === '') delete filters[filter]\n    return filteredRows.filter(row => {\n      if (!includesAny(row.claim_no, filters.claim_number)) return false\n\n      // if (!includesAny(row.partner_name, filters.provider)) return false\n\n      if (filters.date && DateFormatter(row.date_admitted) !== filters.date) return false\n\n      if (!includesAny(row.type, filters.type)) return false\n      // temporary\n      if (!includesAny(row.status === 'Open' ? row.status : 'Approved', filters.status)) return false\n\n      if (filters.amount && row.grand_total !== parseFloat(filters.amount)) return false\n\n      if (filters.session && row.session !== parseFloat(filters.session)) return false\n\n      if (row.__type === 'UtilizationInPatient') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      }\n      return true\n    })\n  }\n\n  // TODO\n  // THIS CAN BE BETTER\n  const handleOnPaginate = args => {\n    if (args && args.limit && args.page) {\n      setList(state => ({ ...state, limit: args.limit }))\n      setFilteredRows(state => ({\n        ...state,\n        count: list.alter.length,\n        page: args.page,\n        limit: args.limit,\n        data: lodash.take(list.alter, args.limit)\n      }))\n    } else if (args && args.page) {\n      if (list.alter.length === list.rows.length) {\n        return setFilteredRows(state => ({\n          ...state,\n          page: args.page,\n          data: lodash.chunk(list.rows, state.limit)[args.page - 1]\n        }))\n      }\n      setFilteredRows(state => ({\n        ...state,\n        page: args.page,\n        data: lodash.chunk(list.alter, state.limit)[args.page - 1]\n      }))\n    }\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        <TableCell>\n          <div className={classes.cell}>\n            <span>{row.claim_no}</span>\n            <span className={classes.label}>SWIPE</span>\n            <span>YES</span>\n          </div>\n        </TableCell>\n        <TableCell>\n          {row.diagnosis.map((row, index) => (\n            <div key={`icd-${index}`} className={classes.cell}>\n              <span>{row.diagnosis}</span>\n              <span className={classes.label}>ICD 10 CODE</span>\n              <span>{row.icd10_code}</span>\n            </div>\n          ))}\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            {row.procedures.map((row, index) => (\n              <div key={`procedure-${index}`} className={classes.cell}>\n                <span>{row.procedure_name}</span>\n                <span className={classes.label}>CPT CODE</span>\n                <span>{row.cpt_code}</span>\n              </div>\n            ))}\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            <div className={classes.cell}>\n              <span>{row.partner_name}</span>\n              <span className={classes.label}>MEDICAL DOCTOR</span>\n              {row.doctors.map((row, index) => (\n                <span key={`doctor-${index}`}>{`${row.name},`}</span>\n              ))}\n            </div>\n          </div>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{CurrencyFormatter(row.grand_total)}</span>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{row.session}</span>\n        </TableCell>\n        <TableCell>\n          <span>{DateFormatter(row.date_admitted)}</span>\n        </TableCell>\n        <TableCell>\n          <span>{row.type}</span>\n        </TableCell>\n        <TableCell align='center'>\n          <span>{row.status === 'Open' ? 'Open' : 'Approved'}</span>\n        </TableCell>\n        <TableCell align='center'>\n          <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n        </TableCell>\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={renderRows({ rows: filteredRows.data })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n// import file from './INTELLICARE SPECIMEN CONTRACT_2017.pdf'\n// Styles\nimport classes from './PdfViewer.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nexport default function PdfViewer (props) {\n  const { file, fileName, initialPageNumber = 1, initialScale = 1, download = () => {}, print = () => {} } = props\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [numPages, setNumPages] = React.useState(0)\n\n  const _file = file\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography className={classes['file-name']} align='left'>\n          {fileName}\n        </Typography>\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={classes.control}>\n          <span>\n            <IconButton onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={classes.control}>\n          <span>\n            <IconButton onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.pdf}>\n        <Document\n          file={file}\n          onLoadSuccess={document => {\n            setNumPages(document.numPages)\n          }}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport PdfViewer from 'SharedComponents/PdfViewer/PdfViewer'\n// Styles\n// import classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { fetchService } = props\n  // Variables\n  const { fileName } = props\n  return <PdfViewer file='' fileName='INTELLICARE SPECIMEN CONTRACT_2017.pdf' />\n}\n","import React from 'react'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate } = props\n  // Variables\n  const { claim, permissions, contractType, member, client, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors } = props\n\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benifits-tab' label='BENEFITS'>\n          <Benefits contractType={contractType} member={member} client={client} />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='-exclusions-tab' label='EXCLUSIONS'>\n          <Exclusions contractType={contractType} member={member} client={client} />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            member={member.info}\n            memberBenefitLimit={member.benefit_limit}\n            memberAccountNumber={claim.member_account_number}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          <Contract />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => data => {\n  const schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    // TODO Client Account Number*\n    // TODO Client Account Name*\n\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now'),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .max('now')\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  flag: Joi.boolean().default(false)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onChangeDoctor\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      customer_account_number: '',\n      company_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          customer_account_number: data.customer_account_number,\n          company_name: data.company_name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n      ConfigController.getUserManagementData().then(res => {\n        dispatch(\n          setClaimBaseDetails({\n            value: new Date().toISOString(),\n            field: 'approved_date'\n          })\n        )\n        dispatch(\n          setClaimBaseDetails({\n            value: res.user_id,\n            field: 'approved_id'\n          })\n        )\n        dispatch(\n          setClaimBaseDetails({\n            value: `${res.first_name} ${res.last_name}`,\n            field: 'approved_name'\n          })\n        )\n      })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  showCompany\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        required\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        required\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        required\n                        error={error.medicine_category}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n\n              <div className={classes['tables-container']}>\n                <div className={classes['left-side']} id='left-side-panel'>\n                  {permissions.procedures.read && (\n                    <ProcedureList\n                      id='procedure'\n                      data={claim.procedures}\n                      doValidate={doValidateProcedure}\n                      permissions={permissions.procedures}\n                      showAmountPaidByMember={false}\n                      showPhilhealthField={false}\n                      showAmountNotCovered={false}\n                      showAmountDueFromMember={false}\n                    />\n                  )}\n                  {permissions.hospital_items.read && (\n                    <HospitalItemList\n                      id='hospital-item'\n                      data={claim.hospital_items}\n                      doValidate={doValidateHospitalItem}\n                      permissions={permissions.hospital_items}\n                      showAmountPaidByMember={false}\n                      showPhilhealthRemarks={false}\n                      showAmountNotCovered={false}\n                      showAmountDueFromMember={false}\n                    />\n                  )}\n                  {permissions.professional_fees.read && (\n                    <ProfessionalFeeList\n                      id='professional-fee'\n                      data={claim.professional_fees}\n                      doValidate={doValidateProfessionalFee}\n                      permissions={permissions.professional_fees}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']} id='right-side-panel'>\n                  <div className={classes['wrapper']}>\n                    <div className={classes['sticky']}>\n                      <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={classes['grand-total']}>\n                <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n              </div>\n\n              <ClaimFooter\n                getUsers={getUsers}\n                doValidate={doValidateAll}\n                doEscalate={onEscalate}\n                doReassign={onReassign}\n                doViewAnalysisSheet={onViewAnalysisSheet}\n                doViewLetterOfAdvice={onViewLetterOfAdvice}\n                doReject={onReject}\n                doApprove={onApprove}\n                doSave={onSave}\n                doCancel={onCancel}\n                permissions={permissions.footer}\n                grandTotal={grandTotal}\n                claimType={_type}\n                userManagementService={userManagementService}\n              />\n            </div>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Media\nimport Media from 'Constant/media'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [flag, setFlag] = React.useState({ flag: true })\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      tooth_number: details.tooth_number,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member,\n      flag: true\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes['chart']}>\n                  <img src={Media.dentalChart} alt='dental-chart' />\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : other_fields\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfoComponent from '../../../Components/ReimbursementInfoComponent/ReimbursementInfoComponent'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\n// import ConfigController from 'Controllers/ConfigController2'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {}, onChangePro } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  //\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    console.log('fdsfd')\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        batch_number: data.batch_number\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type === 'InPatient' ? 'InPatient' : '')\n      })\n\n      setBatchNumber(data.batch_number)\n\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    console.log(error)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: moment(event.toISOString())\n                                .startOf('day')\n                                .toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  readOnly={!permissions.base.update}\n                  error={error.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={() => setShowReimbursementModal(true)}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n            isReimbursement\n          />\n        </React.Fragment>\n      )}\n\n      <ReimbursementInfoComponent\n        claim={{ ...claim, batch_number: batchNumber }}\n        show={showReimbursementModal}\n        setShowModal={setShowReimbursementModal}\n        handleOnSave={reimbursement_info =>\n          dispatch(\n            setClaimBaseDetails({\n              value: reimbursement_info,\n              field: 'reimbursement_info'\n            })\n          )\n        }\n        doReject={() => onReject({ goBack: true })}\n      />\n    </div>\n  )\n}\n// doReject={onReject}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\n// import ClaimECU from './Components/ClaimECU/ClaimECU'\n// import ClaimPPE from './Components/ClaimPPE/ClaimPPE'\n// import ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\n// import ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\n// import ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      // case 'ECU':\n      //   return <ClaimECU {...props} />\n\n      // case 'PPE':\n      //   return <ClaimPPE {...props} />\n\n      // case 'Pharmacy':\n      //   return <ClaimPharmacy {...props} />\n\n      // case 'MedicalSupplies':\n      //   return <ClaimMedicalSupplies {...props} />\n\n      // case 'ClinicManagement':\n      //   return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    // TODO\n    /**\n     * Create API request direct to SEER's api\n     * For fetching claims verifier supervisor members\n     */\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n}\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes\n} from './Store/actions'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const contractType = 'client'\n  const [member, setMember] = React.useState({\n    info: {},\n    contract: { benefits: [] },\n    benefit_limit: []\n  })\n\n  const [client, setClient] = React.useState({\n    info: {},\n    contract: { base: [], benefits: [] }\n  })\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member.account_number) {\n        const member_account_no = data.member.account_number\n\n        CustomerCareServices.getMemberUtilizationLoa({ member_account_no }).then(res => {\n          const { data } = res.data\n          setUtilizationLoa(data)\n        })\n\n        CustomerCareServices.getMember({ member_account_no }).then(res => {\n          const { data } = res.data\n          setMember(state => ({ ...state, info: data }))\n\n          if (data) {\n            const member_oid = data._id\n            const contract_oid = data.contracts.slice().pop()\n\n            // FETCH Member Contract from Customer Care\n            if (contractType === 'client') {\n              CustomerCareServices.getBaseBenefitPlan().then(res => {\n                const { data } = res.data\n                setClient(state => ({ ...state, contract: { ...state.contract, base: data } }))\n              })\n\n              CustomerCareServices.getBenefitPlanTree({\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setClient(state => ({ ...state, contract: { ...state.contract, benefits: data } }))\n              })\n            } else {\n              CustomerCareServices.getMemberContract({\n                member_oid,\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setMember(state => ({ ...state, contract: { ...state.contract, base: data } }))\n              })\n\n              CustomerCareServices.getMemberContractBenefit({\n                member_oid,\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setMember(state => ({ ...state, contract: { ...state.contract, benefits: data } }))\n              })\n            }\n\n            // FETCH Member Benefit Limit from Customer Care\n            CustomerCareServices.getMemberBenefitLimit({ member_oid, contract_oid }).then(res => {\n              const { data } = res.data\n              setMember(state => ({ ...state, benefit_limit: data }))\n            })\n          }\n        })\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = args => CustomerCareServices.getMember(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack) props.history.push('/')\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          contractType={contractType}\n          member={member}\n          client={client}\n          utilizationLoa={utilizationLoa}\n          // contractType={contractType}\n          // baseContract={baseContract}\n          // clientContract={clientContract}\n          // memberContract={memberContract}\n          // memberContractBenefit={memberContractBenefit}\n          // memberBenefitLimit={memberBenefitLimit}\n          //  #endregion\n          //  #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getMember={getMember}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          //  #endregion\n          //  #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          //  #endregion\n          //  #region SERVICES\n          userManagementService={UserManagementServices}\n          //  #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","export const initDiscrepancy = payload => {\n  return {\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","export const resetRecon = payload => {\n  return {\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","const initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","const initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","const initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_VIEWER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsAdjudicationServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${row.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    {category === 'payment-request' && 'Request Payment'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard () {\n  const [claims, setClaims] = React.useState({\n    paymentRequests: { count: 0, data: [] },\n    override: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Payment Request\n    Promise.all([\n      PaymentRequestServices.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      PaymentRequestServices.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        paymentRequests: { data: paymentRequestClaims, count: paymentRequestClaimCount }\n      }))\n    })\n\n    // //* Override\n    // Promise.all([\n    //   PaymentRequestServices.getClaims({ category: 'override', range: 'this-week' }),\n    //   PaymentRequestServices.getClaimCount({ category: 'override' })\n    // ]).then(values => {\n    //   const [batchResponse, batchCountResponse] = values\n    //   const myBatches = batchResponse.data.data\n    //   const myBatchCount = batchCountResponse.data.data\n    //   setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    // })\n  }, [])\n\n  const handleOnShowViewList = category => () => {\n    const title = 'For Payment Request'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    PaymentRequestServices.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = category => value => {\n    let _category = category === 'payment-request' ? 'paymentRequests' : ''\n\n    PaymentRequestServices.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [_category]: { ...prevState[_category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.paymentRequests.count, id: 'for-pr-count' }}\n              title='For Payment Request'\n              id='for-payment-request'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('payment-request')}\n                  id='for-pr-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('payment-request')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='for-pr-claim-no'>Claim No.</TableCell>\n                    <TableCell id='for-pr-soa-no'>Bundle/SOA No.</TableCell>\n                    <TableCell id='for-pr-due-date'>Due Date</TableCell>\n                    <TableCell id='for-pr-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.paymentRequests.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                      <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                      <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${item.bundle_number}`}>\n                          <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                            Request Payment\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 5, value: claims.override.count, id: 'override-claim-count' }}\n              title='Override Claim'\n              id='override-claim'\n              viewAllLink={{ to: '/claims?type=override', caption: 'View List' }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Bundle/SOA No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.override.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.soa_no}</TableCell>\n                      <TableCell>{item.claim_no}</TableCell>\n                      <TableCell>{item.due_date}</TableCell>\n                      <TableCell>{item.facility_name}</TableCell>\n                      <TableCell>\n                        <Typography variant='caption' className={`text-link underline`}>\n                          Request Payment\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        message: 'Please select a batch for submission to Treasury Department.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport PaymentRequestPage from './Pages/PaymentRequestPage/PaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/review/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n              {...props}\n              permissions={permissions}\n              ApiService={MedicalConsultantServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'SOA No.', sortField: 'latest.soa.number' },\n  { name: 'Bundle', sortField: 'latest.bundle_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  // const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for the claim number, SOA number, bundle, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{row.soa.number}</TableCell>\n              <TableCell>{row.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/recon/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      ClaimsReconServices.getClaims({\n        category: 'for-recon',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsReconServices.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    ClaimsReconServices.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/recon/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_recon') title = 'For Reconciliation'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    ClaimsReconServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsReconServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_recon.count }}\n              sizes={{ sm: 12 }}\n              title='For Reconciliation'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-recon')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_recon')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>SOA No.</TableCell>\n                    <TableCell>Bundle</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_recon.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{item.soa.number}</TableCell>\n                      <TableCell>{item.bundle_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          View Claim\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                >\n                  View Claim\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='rc-claim-no'>Claim No.</TableCell>\n              <TableCell id='rc-due-date'>Due Date</TableCell>\n              <TableCell id='rc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: 0, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='cv-verifier-name'>Verifier Name</TableCell>\n              <TableCell id='cv-total-batches'>Total Batches</TableCell>\n              <TableCell id='cv-total-claims'>Total Claims</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`cv-verifier-name-${index}`}>{item.verifier_name}</TableCell>\n                <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                <TableCell id={`cv-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnItemClick = claim_number => {\n    props.history.push(`/claims/for-approval/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category: 'for-approval' })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    handleOnItemClick(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('for-approval')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('for-approval')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnItemClick(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    console.log(claims)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: 0, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-account-no'>Account No.</TableCell>\n              <TableCell id='mc-account-name'>Account Name</TableCell>\n              <TableCell id='mc-member-name'>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-account-no-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.facility.name}</TableCell>\n\n                <TableCell id={`mc-member-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: 0, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claims'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='rmc-claim-no'>Claim No.</TableCell>\n              <TableCell id='rmc-account-no'>Account No.</TableCell>\n              <TableCell id='rmc-account-name'>Account Name</TableCell>\n              <TableCell id='rmc-member-name'>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.account_no}</TableCell>\n                <TableCell id={`rmc-account-name-${index}`}>{item.account_name}</TableCell>\n\n                <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ReconciledServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/reconciled`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/reconciled/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ForApprovalServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/for-approval`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/for-approval/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return new Promise(resolve => resolve())\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport ReconciledServices from './ReconciledServices'\nimport ForApprovalServices from './ForApprovalServices'\n\nconst axios = instance('/c/cvs')\n\nclass index {\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n\nindex.ReconciledServices = ReconciledServices\nindex.ForApprovalServices = ForApprovalServices\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nexport default index\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\nimport ReconciledClaimsTile from '../../Components/ReconciledClaimsTile/ReconciledClaimsTile'\nimport ClaimsVerifierTile from '../../Components/ClaimsVerifierTile/ClaimsVerifierTile'\nimport ClaimsForApprovalTile from '../../Components/ClaimsForApprovalTile/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from '../../Components/MedicalCollectiblesTile/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../Components/ReimbursementClaimTile/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <MyClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <SubmittedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n            <ClaimsVerifierTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ClaimsForApprovalTile\n              services={ClaimsVerifierSupervisorServices.ForApprovalServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            {/* <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} sizes={{ sm: 4 }} {...props} /> */}\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                  <TableCell id='cvs-date'>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                    <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n\n            <DashboardTile\n              id='rejected-claims'\n              count={{ color: 3, value: 0, id: 'rejected-claims-count' }}\n              title='Rejected Claims'\n              viewList={\n                <Typography id='rj-view-list' variant='caption' className='bold text-link'>\n                  View List\n                </Typography>\n              }\n              sizes={{ sm: 4 }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='rj-batch-no'>Batch No.</TableCell>\n                    <TableCell id='rj-due-date'>Due Date</TableCell>\n                    <TableCell id='rj-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody />\n              </Table>\n            </DashboardTile>\n\n            <ReconciledClaimsTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ReimbursementClaimTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages\nimport Dashboard from './Pages/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={forAdjudicationPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/reconciled/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n              {...props}\n              permissions={forReconciledPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ReconciledServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/for-approval/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n              {...props}\n              permissions={forApprovalPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ForApprovalServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './BatchEncoder/Routes'\nimport ClaimsDetailsEncoderRoutes from './ClaimsDetailsEncoder/Routes'\nimport ClaimsAnalystRoutes from './ClaimsAnalyst/Routes'\nimport PaymentRequestRoutes from './PaymentRequest/Routes'\nimport MedicalConsultantRoutes from './MedicalConsultant/Routes'\nimport ClaimsReconciliationRoutes from './ClaimsReconciliation/Routes'\nimport ClaimsVerifierSupervisorRoutes from './ClaimsVerifierSupervisor/Routes'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <React.Fragment>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconciliationRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n        </Switch>\n      )}\n    </React.Fragment>\n  )\n}\n","const initialState = []\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SIDEBAR_ITEMS':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default sidebarReducer\n","const pageTitleReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: {},\n  selected: []\n}\nconst breadcrumbsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BREADCRUMBS_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_SELECTED_BREADCRUMBS':\n      return {\n        ...state,\n        selected: [\n          { text: 'Home', to: '/' },\n          ...action.payload.map(_item => {\n            const [item, value] = _item.split(':')\n\n            if (value) {\n              const { text, to } = state.items[item]\n              return {\n                text: text(value),\n                to: to(value)\n              }\n            } else {\n              return state.items[item]\n            }\n          })\n        ]\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default breadcrumbsReducer\n","const pageLoading = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_PAGE_LOADING':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageLoading\n","const initialState = {\n  open: false,\n  severity: '',\n  message: ''\n}\nconst snackbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SNACKBAR':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default snackbarReducer\n","const initialState = {}\nconst pdfReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PDF':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default pdfReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'ROOT') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport sidebarReducer from './sidebarReducer'\nimport pageTitleReducer from './pageTitleReducer'\nimport breadcrumbsReducer from './breadcrumbsReducer'\nimport pageLoadingReducer from './pageLoadingReducer'\nimport snackbarReducer from './snackbarReducer'\nimport pdfReducer from './pdfReducer'\n\nconst reducers = combineReducers({\n  sidebar: sidebarReducer,\n  pageTitle: pageTitleReducer,\n  breadcrumbs: breadcrumbsReducer,\n  pageLoading: pageLoadingReducer,\n  snackbar: snackbarReducer,\n  pdf: pdfReducer\n})\n\nexport default reducers\n","let subscribers = {}\n\nexport default class ProtectedPageScrollEvent {\n  static publish () {\n    for (let key in subscribers) {\n      if (subscribers[key]) subscribers[key]()\n    }\n  }\n\n  static subscribe (name, cb) {\n    setTimeout(() => (subscribers[name] = cb), 10)\n  }\n\n  static unsubscribe (name) {\n    subscribers[name] = undefined\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport CommonServices from 'Services/Api/CommonServices'\nimport { Provider } from 'react-redux'\n\n// Compoents\nimport HeaderComponent from 'SharedComponents/HeaderComponent/HeaderComponent'\nimport { SideBarComponent } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { PageTitleComponent } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsComponent } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingComponent } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { SnackbarComponent } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { PdfViewer2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { IcdCptStatusComponent } from 'SharedComponents/IcdCptStatus/IcdCptStatus'\n\n// Modules\nimport Claims from './Claims'\n\n// Error Page\nimport { ErrorPageInit, ErrorPage } from 'SharedComponents/404/404'\n\n// classes\nimport classes from './Protected.module.scss'\n\n// Store\nimport Store from './Store'\n\n// Services\nimport ProtectedPageScrollEvent from 'Services/ProtectedPageScrollEvent'\n\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nexport default function Protected ({ history }) {\n  const [selectedModule, setSelectedModule] = React.useState('')\n  const [isAauthorized, setIsAuthorized] = React.useState(false)\n  const [containerNode, setContainerNode] = React.useState(null)\n\n  const getMe = async () => {\n    const user_data = await ConfigController2.getUserManagementData()\n\n    if (!user_data) return resetToLogin()\n\n    const { access_token, main_module, main_role, user_id } = user_data\n\n    const module = main_module.toUpperCase()\n\n    window.localStorage.setItem('token', access_token)\n    window.localStorage.setItem('module', module)\n    window.localStorage.setItem('role', main_role)\n    window.localStorage.setItem('user_id', user_id)\n    window.localStorage.setItem('from_login', true)\n\n    setSelectedModule(module)\n    setIsAuthorized(true)\n  }\n\n  React.useEffect(() => {\n    getMe()\n  }, [])\n\n  const routesForModule = () => {\n    switch (selectedModule) {\n      case 'CLAIMS':\n        return <Route path='/' component={Claims} />\n\n      default:\n        break\n    }\n  }\n\n  const resetToLogin = async () => {\n    await ConfigController2.clearUserManagementData()\n\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('me')\n    window.localStorage.removeItem('from_login')\n    window.localStorage.removeItem('api_token')\n    window.localStorage.removeItem('pm_token')\n    window.localStorage.removeItem('user_id')\n    window.localStorage.removeItem('employee_id')\n    window.localStorage.removeItem('first_name')\n    window.localStorage.removeItem('last_name')\n\n    const { href, protocol, origin } = window.location\n    let url = `${origin}/#/login`\n    if (protocol === 'file') url = `${href.split('.html')[0]}.html`\n    window.location.assign(url)\n  }\n\n  const logout = () => {\n    const accessToken = window.localStorage.getItem('token')\n\n    if (!accessToken) return resetToLogin()\n\n    CommonServices.logout({ access_token: accessToken })\n      .then(data => {\n        resetToLogin()\n      })\n      .catch(({ response }) => {\n        try {\n          const { error } = response.data\n          if (error.statusCode === 428) resetToLogin()\n        } catch (err) {\n          resetToLogin()\n        }\n      })\n  }\n\n  const scrollContainer = event => {\n    const { scrollTop } = containerNode\n    containerNode.scrollTo({ top: scrollTop + event.deltaY })\n  }\n\n  return (\n    <React.Fragment>\n      {isAauthorized && (\n        <div className={classes['main-container']}>\n          <Provider store={Store}>\n            <SideBarComponent />\n            <PdfViewer2Component />\n          </Provider>\n\n          <div className={classes['sub-container']}>\n            <HeaderComponent logout={logout} />\n\n            <Switch>\n              <Route path='/404' exact component={ErrorPage} />\n              <Route\n                path='/'\n                render={props => (\n                  <Grid\n                    item\n                    className={classes.content}\n                    onScroll={ProtectedPageScrollEvent.publish}\n                    ref={setContainerNode}\n                  >\n                    <Provider store={Store}>\n                      <SnackbarComponent />\n                      <PageTitleComponent />\n                      <BreadcrumbsComponent />\n                      <LoadingComponent onScrollContainer={scrollContainer} containerNode={containerNode} />\n                    </Provider>\n                    <Switch>\n                      <React.Fragment>{routesForModule()}</React.Fragment>\n                    </Switch>\n                  </Grid>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      )}\n      <ErrorPageInit />\n      <IcdCptStatusComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport 'typeface-roboto'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport './App.scss'\n\nimport FontAwesomeLibrary from './FontAwesomeLibrary'\n\n// Pages\nimport LoginPage from 'Pages/LoginPage/LoginPage'\nimport Protected from 'Pages/Protected/Protected'\n\n// Utilities\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nFontAwesomeLibrary.init()\n\nConfigController2.initializeBaseUrls()\n\nfunction App () {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path='/login' exact component={LoginPage} />\n          <Route path='/' component={Protected} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__piMxu\",\"first-container\":\"ClaimDental_first-container__LmMqT\",\"groups\":\"ClaimDental_groups__2qQWu\",\"input\":\"ClaimDental_input__2SMFL\",\"contract-range\":\"ClaimDental_contract-range__1wxMU\",\"chart\":\"ClaimDental_chart__1dVVV\",\"child-container\":\"ClaimDental_child-container__1kc8d\",\"left-side\":\"ClaimDental_left-side__2rJGi\",\"right-side\":\"ClaimDental_right-side__1qXh4\",\"tables-container\":\"ClaimDental_tables-container__2A37S\",\"wrapper\":\"ClaimDental_wrapper__2ooJP\",\"table\":\"ClaimDental_table__1Tnom\",\"table-header\":\"ClaimDental_table-header__WmMHk\",\"table-description\":\"ClaimDental_table-description__awAYs\",\"add-link\":\"ClaimDental_add-link__3dTLf\",\"row\":\"ClaimDental_row__32w9z\",\"align\":\"ClaimDental_align__1Hx-G\",\"center\":\"ClaimDental_center__3I_Bh\",\"right\":\"ClaimDental_right__3reZO\",\"table-total\":\"ClaimDental_table-total__uCDLB\",\"caption\":\"ClaimDental_caption__26Ik2\",\"amount\":\"ClaimDental_amount__1sb2b\",\"sticky\":\"ClaimDental_sticky__2Stts\",\"grand-total\":\"ClaimDental_grand-total__LWrnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__3Vmeb\",\"groups\":\"BatchDetails_groups__1_QIJ\",\"input\":\"BatchDetails_input__1dPNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__12_y0\",\"first-container\":\"ClaimECU_first-container__2xAv8\",\"groups\":\"ClaimECU_groups__2p1Fe\",\"input\":\"ClaimECU_input__QraMd\",\"child-container\":\"ClaimECU_child-container__1Gdnl\",\"tables-container\":\"ClaimECU_tables-container__30mfe\",\"left-side\":\"ClaimECU_left-side__X_Ryh\",\"wrapper\":\"ClaimECU_wrapper__2-n9O\",\"table\":\"ClaimECU_table__38LSn\",\"table-header\":\"ClaimECU_table-header__2XWNc\",\"table-description\":\"ClaimECU_table-description__1Y5e8\",\"add-link\":\"ClaimECU_add-link__2N8RQ\",\"row\":\"ClaimECU_row__mGpqj\",\"align\":\"ClaimECU_align__18Dal\",\"center\":\"ClaimECU_center__1fK8V\",\"right\":\"ClaimECU_right__32blH\",\"table-total\":\"ClaimECU_table-total__90P4P\",\"caption\":\"ClaimECU_caption__1o9Zj\",\"amount\":\"ClaimECU_amount__2Hhdf\",\"right-side\":\"ClaimECU_right-side__3c5GS\",\"sticky\":\"ClaimECU_sticky__14EYz\",\"grand-total\":\"ClaimECU_grand-total__jxFHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer_app-bar__3f5jD\",\"root\":\"PdfViewer_root__2K-e8\",\"controls\":\"PdfViewer_controls__20Y1N\",\"control\":\"PdfViewer_control__skaaD\",\"disabled\":\"PdfViewer_disabled__2WDYA\",\"pdf\":\"PdfViewer_pdf__2EEvF\",\"page-number\":\"PdfViewer_page-number__19qlt\",\"file-name\":\"PdfViewer_file-name__32XTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__2uI8s\",\"inputs\":\"NewBundlePage_inputs__2C5KM\",\"input\":\"NewBundlePage_input__8z70X\",\"actions\":\"NewBundlePage_actions__1eP66\",\"save\":\"NewBundlePage_save__3IbSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__vCzHt\",\"first-container\":\"ClaimPPE_first-container__YOvn9\",\"groups\":\"ClaimPPE_groups__8UnV7\",\"input\":\"ClaimPPE_input__2OCOp\",\"packages\":\"ClaimPPE_packages__1mnja\",\"child-container\":\"ClaimPPE_child-container__1hHPa\",\"tables-container\":\"ClaimPPE_tables-container__2GdOv\",\"left-side\":\"ClaimPPE_left-side__3AU6f\",\"wrapper\":\"ClaimPPE_wrapper__bZKtb\",\"table\":\"ClaimPPE_table__2twAn\",\"table-header\":\"ClaimPPE_table-header__1lTtb\",\"table-description\":\"ClaimPPE_table-description__3c6yl\",\"add-link\":\"ClaimPPE_add-link__ULei2\",\"row\":\"ClaimPPE_row__2bU8T\",\"align\":\"ClaimPPE_align__3Hzne\",\"center\":\"ClaimPPE_center__id_a_\",\"right\":\"ClaimPPE_right__1EdE_\",\"table-total\":\"ClaimPPE_table-total__3LI2J\",\"caption\":\"ClaimPPE_caption__2owlw\",\"amount\":\"ClaimPPE_amount__3wkC6\",\"right-side\":\"ClaimPPE_right-side__2zQxe\",\"sticky\":\"ClaimPPE_sticky__KlhLw\",\"grand-total\":\"ClaimPPE_grand-total__2c6a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__dmj-f\",\"groups\":\"ProfessionalFeeForm_groups__2HYi5\",\"first-item\":\"ProfessionalFeeForm_first-item__2xz1G\",\"input\":\"ProfessionalFeeForm_input__3T9ZD\",\"buttons\":\"ProfessionalFeeForm_buttons__2lHCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__33_jP\",\"first-container\":\"ClaimAPE_first-container__2GhQb\",\"groups\":\"ClaimAPE_groups__1so6S\",\"input\":\"ClaimAPE_input__3YCJP\",\"contract-range\":\"ClaimAPE_contract-range__3ndpi\",\"child-container\":\"ClaimAPE_child-container__3K1NT\",\"tables-container\":\"ClaimAPE_tables-container__3FZpM\",\"left-side\":\"ClaimAPE_left-side__Dn2r2\",\"wrapper\":\"ClaimAPE_wrapper__1o-j6\",\"table\":\"ClaimAPE_table__1712c\",\"table-header\":\"ClaimAPE_table-header__3Wtai\",\"table-description\":\"ClaimAPE_table-description__3Th5T\",\"add-link\":\"ClaimAPE_add-link__164II\",\"row\":\"ClaimAPE_row__2SFXN\",\"align\":\"ClaimAPE_align__zZw0w\",\"center\":\"ClaimAPE_center__2vDr-\",\"right\":\"ClaimAPE_right__33hqW\",\"table-total\":\"ClaimAPE_table-total__3QUPH\",\"caption\":\"ClaimAPE_caption__3fFSz\",\"amount\":\"ClaimAPE_amount__VNmzU\",\"right-side\":\"ClaimAPE_right-side__1KdqK\",\"sticky\":\"ClaimAPE_sticky__2Gc6m\",\"grand-total\":\"ClaimAPE_grand-total__17ewH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__2m8Lu\",\"first-container\":\"ClaimAPE_first-container__3PWnI\",\"groups\":\"ClaimAPE_groups__vIfIX\",\"input\":\"ClaimAPE_input__farwF\",\"contract-range\":\"ClaimAPE_contract-range__2nau5\",\"child-container\":\"ClaimAPE_child-container__3Htma\",\"left-side\":\"ClaimAPE_left-side__25eyc\",\"right-side\":\"ClaimAPE_right-side__RtqaO\",\"tables-container\":\"ClaimAPE_tables-container__2sIPf\",\"wrapper\":\"ClaimAPE_wrapper__39pqO\",\"table\":\"ClaimAPE_table__h9OzX\",\"table-header\":\"ClaimAPE_table-header__ZlR0k\",\"table-description\":\"ClaimAPE_table-description__3Tdg7\",\"add-link\":\"ClaimAPE_add-link__3Ex_N\",\"row\":\"ClaimAPE_row__3kZSx\",\"align\":\"ClaimAPE_align__1JCc1\",\"center\":\"ClaimAPE_center__3Oe4M\",\"right\":\"ClaimAPE_right__NwB2D\",\"table-total\":\"ClaimAPE_table-total__2thd4\",\"caption\":\"ClaimAPE_caption__3SapE\",\"amount\":\"ClaimAPE_amount__1w3nh\",\"sticky\":\"ClaimAPE_sticky__NJ87e\",\"grand-total\":\"ClaimAPE_grand-total__rC9eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__2X3T0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3SqG4\",\"header-container\":\"ProviderSchedule_header-container__2r94G\",\"header1\":\"ProviderSchedule_header1__1HzhR\",\"title\":\"ProviderSchedule_title__2kBP5\",\"body\":\"ProviderSchedule_body__3cLok\",\"content\":\"ProviderSchedule_content__2bgfD\",\"table\":\"ProviderSchedule_table__1mxLb\",\"groups\":\"ProviderSchedule_groups__3BR0S\",\"partition\":\"ProviderSchedule_partition__2GvSx\",\"action\":\"ProviderSchedule_action__3-dj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__3-pXP\",\"first-container\":\"ClaimClinicManagement_first-container__2A7Vg\",\"groups\":\"ClaimClinicManagement_groups__3IK3C\",\"input\":\"ClaimClinicManagement_input__LASyG\",\"child-container\":\"ClaimClinicManagement_child-container__3vVN_\",\"tables-container\":\"ClaimClinicManagement_tables-container__C0Tks\",\"left-side\":\"ClaimClinicManagement_left-side__3tU8J\",\"wrapper\":\"ClaimClinicManagement_wrapper__1wYq3\",\"table\":\"ClaimClinicManagement_table__3RTGB\",\"table-header\":\"ClaimClinicManagement_table-header__3srgG\",\"table-description\":\"ClaimClinicManagement_table-description__2teCY\",\"add-link\":\"ClaimClinicManagement_add-link__2o3Ds\",\"row\":\"ClaimClinicManagement_row__pYD5k\",\"align\":\"ClaimClinicManagement_align__32npC\",\"center\":\"ClaimClinicManagement_center__66Zig\",\"right\":\"ClaimClinicManagement_right__epIYQ\",\"table-total\":\"ClaimClinicManagement_table-total__2hmFl\",\"caption\":\"ClaimClinicManagement_caption__2hvlp\",\"amount\":\"ClaimClinicManagement_amount__1AjZw\",\"right-side\":\"ClaimClinicManagement_right-side__2zlmc\",\"sticky\":\"ClaimClinicManagement_sticky__3ZbxS\",\"grand-total\":\"ClaimClinicManagement_grand-total__2Yeg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__4parl\",\"first-container\":\"ClaimMedicineAllowance_first-container__r8g7f\",\"groups\":\"ClaimMedicineAllowance_groups__aB3Az\",\"input\":\"ClaimMedicineAllowance_input__K79tw\",\"child-container\":\"ClaimMedicineAllowance_child-container__1SnGP\",\"left-side\":\"ClaimMedicineAllowance_left-side__1b3Wi\",\"right-side\":\"ClaimMedicineAllowance_right-side__3zBkr\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3L0e-\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__35UBn\",\"table\":\"ClaimMedicineAllowance_table__Ul5CP\",\"table-header\":\"ClaimMedicineAllowance_table-header__355yM\",\"table-description\":\"ClaimMedicineAllowance_table-description__3YS1q\",\"add-link\":\"ClaimMedicineAllowance_add-link__2vUUq\",\"row\":\"ClaimMedicineAllowance_row__1tIZ1\",\"align\":\"ClaimMedicineAllowance_align__29eIS\",\"center\":\"ClaimMedicineAllowance_center__2kZIo\",\"right\":\"ClaimMedicineAllowance_right__1_810\",\"table-total\":\"ClaimMedicineAllowance_table-total__3TMUK\",\"caption\":\"ClaimMedicineAllowance_caption__3n1fs\",\"amount\":\"ClaimMedicineAllowance_amount__2bUXu\",\"sticky\":\"ClaimMedicineAllowance_sticky__2shXK\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1NbR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBarComponent_root__3Etcc\",\"menu\":\"SideBarComponent_menu__3zk9I\",\"item\":\"SideBarComponent_item__NPnMw\",\"circle\":\"SideBarComponent_circle__3uyWE\",\"icon\":\"SideBarComponent_icon__2aPgO\",\"text\":\"SideBarComponent_text__2tI7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};"],"sourceRoot":""}