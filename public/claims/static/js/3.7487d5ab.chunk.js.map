{"version":3,"sources":["Utilities/TextFormatter.js","Services/ExtractValidationResult.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","SharedComponents/DatePicker/DatePicker.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Services/Api/ClaimsEncodingServices.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Pages/Protected/Claims/Components/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/ClaimsServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Services/ArrayToCSV.js","Pages/Protected/Claims/Components/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/TransmittalReport/helper/staticHeaderFooter.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js"],"names":["CurrencyFormatter","value","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","DateFormatterByAbbreviation","LargeNumberFormatter","parseFloat","NameFormatter","args","initial","abr","lastName","firstName","middleName","last_name","first_name","middle_name","format1","filter","Boolean","join","format2","extract","_errors","error","details","e","field","path","message","Alert","props","defaultFunction","open","cancelLabel","okLabel","onOk","onCancel","onClose","aria-labelledby","aria-describedby","id","onClick","variant","color","className","autoFocus","DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","React","useState","setFilter","classes","root","wrapper","onChange","event","target","input","selected","action","list","Children","map","child","displayName","useStyles1","makeStyles","theme","flexShrink","marginLeft","spacing","TablePaginationActions","useTheme","page","rowsPerPage","onChangePage","disabled","aria-label","direction","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","body","pagination","limit","rowsPerPageOptions","Fragment","component","Paper","table","footer","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","useStyles","display","alignItems","minWidth","border","focus","borderColor","flex","iconButton","padding","divider","width","height","margin","SearchTextComponent","placeholder","setFocus","onBlur","autoComplete","onFocus","TextFieldCurrency","label","required","currency","readOnly","other","readonly","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","values","module","exports","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","overflow","position","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","order","orderBy","checkAll","sorter","size","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","headCell","key","align","center","numeric","disablePadding","sortDirection","active","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","handleOnClose","p","show","debounce","setDebounce","Dialog","fullWidth","maxWidth","PaperProps","style","DialogTitle","disableTypography","Typography","IconButton","button","DialogContent","dividers","content","search","clearTimeout","setTimeout","stickyHeader","TableCell","sortField","TableSortLabel","sort","name","match","handleColumnFiltering","data","CreatedBundlesTile","services","sizes","items","setItems","initialValue","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","batchResponse","batchCountResponse","results","state","Button","LoadingService","loading","createBundle","res","history","push","prevState","TableHead","item","index","bundle_number","date","due","facility","to","params","_params","_data","row","SubmittedBundlesTile","TaskTrayComponent","showTitle","toArray","cloneElement","_sizes","xs","sm","lg","Grid","container","itemSize","s","TicketListComponent","viewAllLink","FormControl","Select","MenuItem","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","float","AutoComplete","suggestions","_error","setError","trim","currentTarget","contains","relatedTarget","square","suggestion","handleItemClick","DatePicker","disableComponents","tabindex","noMargin","setOpen","selectedDate","setSelectedDate","InputRef","useRef","Date","handleOnFocus","current","handleOnBlur","utils","MomentUtils","TextFieldComponent","ref","icon","TextFieldNumber","formattedValue","BundleDetails","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","length","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","i","term","earliest_term","isNaN","newDate","date_received","add","full_name","ex","md","total_rcs","due_date","soa_number","total_soa_amt","facility_id","facility_name","doctor_id","doctor_name","reassign_notes","multiline","rows","BatchList","batches","onDelete","openDialog","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","batch","setBatch","includes","claim","toLowerCase","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","Checkbox","_index","handleClick","buttonWrapper","deleteMessage","getMessage","DropDown","addNew","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","options","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","keys","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","status","received","soa","amount","getBatches","cancelBundle","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","form","inputs","save","toISOString","NewBundleValidator","ClaimsEncodingServices","claim_number","responseType","Accept","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","transform","dataRows","dataMapping","defaults","console","log","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","addBatchPromises","batchParam","claims","resolveBatchPromise","rejectBatchPromise","a","addClaim","addClaims","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","Object","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","nameParts","member_account_number","member_first_name","member_middle_name","member_last_name","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","file","onComplete","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","readAsBinaryString","Progress","withStyles","borderRadius","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","fileName","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","endAt","find","__index__","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","last","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsUtilLedgerReport","username","total","ar_amount","signatories","CustomerCareServices","account_number","mct_id","where","skip","offset","client_account_no","ClaimsAdjudicationServices","client","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","Download","extension","statics","newLine","c_header","c_footer","_rows","joined","currentValue","blob","Blob","FileSaver","saveAs","class","TransmittalReport","from","setClaims","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","localStorage","getItem","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","ClaimsServices","transmittalReport","_totam_amout","c","total_amount","_ar_amount","total_due_from_member","handleOnPaginate","handleGenerateReport","member","contracts","static_header","static_footer","staticHeaderFooter","ArrayToCSV","column","submit","PdfViewer2Service","service","getTransmittalReportPdf","fontSize","typo","maxHeight","no","left","right","handling","colSpan","SafeAccess","def","delimeter","obj","completeColumns","dataColumns","hideReport","hideHeader","dateRange","refresh","setColumns","handleOnFilter","fetchLedger","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","col","claimIndex","colIndex","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","reports","transmittal","BatchEncoderRoutes","SideBarService","exact","render","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","response","comment","assign","ReassignValidator","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","TextFieldStyle","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","LoadingIndicator","CircularProgress","animation","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","lodash","translateRows","filterData","fetches","responses","colIdx","some","val","cell","handleOnSort","handleColumnFilter","hover","role","tabIndex","renderRows","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","member_name","first_middle","given_name","pop","common","loa_no","member_id","loa_details","room","rate","pro","has_corp_guarantee","remarks","rooms","InPatient","proc","prof","customer_account_number","client_id","company_name","client_name","partner_id","partner_name","MedicineAllowance","other_name","subType","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","reimbursement_type","showReimbursement","showApprovalCode","showContractRange","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","ClaimsAnalysis","memberAccountNumber","setMemberAccountNumber","memberModal","setMemberModal","clientModal","setClientModal","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","handleSetMember","getClients","handleSetClient","ICDTextFields","delete","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Tooltip","Radio","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","icd10","getIcd10Suggestions","IcdCptStorageServices","handleOnConfirmDelete","create","Table","_children","TableHeader","textAlign","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","prop","hasOwnProperty","handleOnChangeCpt","cpt","toString","getCptSuggestions","handleOnChangeDiagnosis","_field","diagnosi","diagnosis_code","diagnosis_description","handleOnChange","tooth_number","reason_charging","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","grand","ProcedureList","handleClickLineDiscrepancy","Set","expand","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","professional_fee","ProfessionalFeeList","ClaimFooter","doReject","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","isReimbursement","doRemove","doViewClaimNotice","doReturn","reimbursement_info","grandTotal","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","user","sortBy","doValidateMiddleware","return_advice","goBack","analysis_sheet","enabled","visible","letter_of_advice","escalate","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","substring","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","hidden","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","Unit","rollover","eligible_availees","days_deployed","eligibility","empty","RB","EM","IP","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","isMember","setRows","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","info","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","_columns","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","_search","onQuery","exc","take","chunk","setPaginate","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","doctors","setDoctors","anySearch","setAnySearch","fetchAll","require","queryColumn","collection","searchObj","address","any","_partners","sorted","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","sub","schedule","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_doctor_name","grand_total","session","date_admitted","date_issued","concat","headCellsComplete","randomRange","random","Utilization","fetchService","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","icd","category_code","_utilizationLoa","startsWith","procedure_name","cpt_code","itemFilter","handleSearchChange","background","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","getUtilizations","getPartners","getDoctors","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","anesthesiologist_id","anesthesiologist_name","contract_year_from","contract_year_to","department","recommendation","medicine_category","reimbursement_category","official_receipt_number","claim_remarks","getValidators","getValidators2","hasPrimary","itemError","not","ClaimInPatient","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","onChangeFacility","onChangePro","onRemove","onReturn","_type","getClaimDetails","hasError","setHasError","allowedFields","setAllowedFields","setlineItemFields","getReason","_allowedFields","_lineItemFields","getRooms","claim_sub","sub_type","doValidateProcedure","ProcedureValidator","diagnosisError","ProcedureDiagnosisValidator","doValidateHospitalItem","HospitalItemValidator","HospitalItemDiagnosisValidator","doValidateProfessionalFee","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","group","groupEnd","base","startOf","constainerStyle","base_errors","MainValidator","doValidateBase","DiagnosisListValidator","invalid","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","setDetails","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","setGrandTotal","totalAmount","sum","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","scrollHeight","behavior","ItemForm","setItem","today","handleOnLookup","handleOnChangeReason","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","onViewClaimNotice","batchNumber","setBatchNumber","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","ClaimAnalysis","fetching","setFetching","setMember","setMemberFetchStatus","setClientFetchStatus","setUtilizationLoa","breadCrumbsList","isManager","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","getMember","getMemberUtilizationLoa","err","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","callback","anaesthesiologist","getAnaesthesiologistSuggestions","inquire","receiver_id","onInquire","employee_id","proUsersLookup","getProSuggestions","removeClaim","returnClaim","createdBundles","specificClaim","utilization","contact","BatchEncoderSupervisorRoutes","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","rowsLength","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","diag","date_admitted_date","now","date_discharged_date","partner_doctor_id","OutPatientProcedure","pshilhealth_amount_paid","OutPatientConsultation","MedicalSupplies","reqApprovalCode","reqLoaNumber","ClaimsEncoding","setApprovalCode","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","procedureICD","procedureDesc","handleOnChangeProcedureForm","baseError","ProcedureFormValidator","DiagnosisValidator","custom","HospitalItemTextFields","HospitalItemTextField","onChangeName","hospitalItemICD","handleOnChangeHospitalForm","HospitalItemFormValidator","professionalFeeICD","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","isAdd","setIsAdd","lineItemFields","doValidateAll","_claimNumber","updateClaim","ToothNumber","DentalProcedureForm","dentalProcedure","DentalProcedureFormValidator","setType","initial_values","resetGrandTotal","ClaimPage","pageTitle","breadCrumbs","getBatchDetails","specificBatch","ClaimsDetailsEncoderRoutes","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","alert","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","date_due","cesFooter","prev_user","getEncoderBatch","assigned","ClaimsDetailsEncoderSupervisorRoutes","BatchePage","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","aria-controls","aria-haspopup","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ClaimsAnalystRoutes","ForPaymentRequestTile","mTitle","paymentRequestClaims","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","PaymentRequestRoutes","SubmittedPaymentRequestPage","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","SubmittedPaymentRequestList","for_review","handleOnReview","review","MedicalConsultantRoutes","ClinicManagement","mockData","months","clientColumns","memberDataColumns","UtilizationReport","setReports","reportType","setReportType","actual","graphData","setGraphData","graphFilter","setGraphFilter","account_no","fetchTable","newData","newChild","percentage","getPercentage","childContainer","utilizationClientTable","RadioGroup","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","tooltip","bottom","month","year","minHeight","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","PRCheckReport","fetchReport","_reports","report","date_requested","check_date","TreasuryTransmittalReport","treasury","pr","ClaimsReconcilationRoutes","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsSupervisorRoutes","ClaimsList","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getBatchAndClaims","getApprovedClaims","batchRes","claimsRes","getClaimsVerifierSupervisors","analystRes","supervisorRes","overrideClaims","initialItem","deactivate","MaintenancePage","setLookup","showAddItem","setShowAddItem","ClaimsMaintainerServices","isActive","activate","initialLookup","storeLookups","updateLookups","handleOnEditItem","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","ClaimsManagerRoutes","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","bundles","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","discrepancyReducer","errorReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","document","store","Store","removeItem","batchEncoderLogic","PaymentRequestSupervisorRoutes","ClaimsReconRoutes","ClaimsVerifierSupervisorRoutes"],"mappings":"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","file":"static/js/3.7487d5ab.chunk.js","sourcesContent":["import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"no-margin\":\"DatePicker_no-margin__2gW7n\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"disabled\":\"DatePicker_disabled__1dIUt\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"header\":\"DataPairs_header__Bkti-\",\"child\":\"DataPairs_child__3_ngq\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3S9k1\",\"total\":\"Footer_total__J2brc\",\"total-row\":\"Footer_total-row__1-a_2\",\"total-cell\":\"Footer_total-cell__1mHdx\",\"all-signatories\":\"Footer_all-signatories__D7Jtv\",\"signatories\":\"Footer_signatories__5ifAW\",\"username\":\"Footer_username__XtPqM\",\"line-note\":\"Footer_line-note__3Yc0m\",\"line-received\":\"Footer_line-received__hTOdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__2Zv5z\",\"header\":\"TransmittalReport_header__3HLGH\",\"typo\":\"TransmittalReport_typo__fEzQn\",\"disabled\":\"TransmittalReport_disabled__c3RPY\",\"content\":\"TransmittalReport_content__3gJmG\",\"filter\":\"TransmittalReport_filter__yA5bA\",\"input\":\"TransmittalReport_input__3LyoB\",\"submit\":\"TransmittalReport_submit__1KdcG\",\"search-header\":\"TransmittalReport_search-header__1szum\",\"search-header-child\":\"TransmittalReport_search-header-child__2rNI2\",\"column\":\"TransmittalReport_column__1Ym0x\",\"body\":\"TransmittalReport_body__Jwdpc\",\"table\":\"TransmittalReport_table__1dZl9\",\"right\":\"TransmittalReport_right__aUA6x\",\"h_amount\":\"TransmittalReport_h_amount__1vDfc\",\"h_ar\":\"TransmittalReport_h_ar__3mcku\",\"h_member\":\"TransmittalReport_h_member__34GFq\",\"h_date\":\"TransmittalReport_h_date__3mIHa\",\"handling\":\"TransmittalReport_handling__3U64z\",\"table-row\":\"TransmittalReport_table-row__1AHwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__i6NTZ\",\"header\":\"ClaimsUtilLedgerReport_header__6XGzc\",\"content\":\"ClaimsUtilLedgerReport_content__l8uG4\",\"filter\":\"ClaimsUtilLedgerReport_filter__JCkmp\",\"input\":\"ClaimsUtilLedgerReport_input__3Z3xr\",\"submit\":\"ClaimsUtilLedgerReport_submit__1QcUA\",\"body\":\"ClaimsUtilLedgerReport_body__M0UX_\",\"table\":\"ClaimsUtilLedgerReport_table__25ckM\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__279cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"LoadingIndicator_loading__3Nv8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"loading\":\"ClientMemberLookup_loading__w2vwH\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"groups\":\"ClaimReimbursement_groups__2NvFs\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"custom\":\"ProcedureForm_custom__kqaea\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"custom\":\"HospitalItemForm_custom__2wc0D\",\"first-item\":\"HospitalItemForm_first-item__AJ09l\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"custom\":\"ProfessionalFeeForm_custom__1XSJ-\",\"first-item\":\"ProfessionalFeeForm_first-item__1_l_l\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"completed_task\":\"Dashboard_completed_task__3VhqT\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__2q08r\",\"header\":\"UtilizationReport_header__UaA2l\",\"content\":\"UtilizationReport_content__2ANkB\",\"filter\":\"UtilizationReport_filter__2oHyd\",\"input\":\"UtilizationReport_input__uAqv6\",\"submit\":\"UtilizationReport_submit__3Xxzg\",\"radio-group\":\"UtilizationReport_radio-group__2GQwc\",\"radio-container\":\"UtilizationReport_radio-container__gsXJO\",\"body\":\"UtilizationReport_body__3hQcQ\",\"table\":\"UtilizationReport_table__2vPmC\",\"graph-reports\":\"UtilizationReport_graph-reports__1tQvo\",\"graph-legend\":\"UtilizationReport_graph-legend__N4sdg\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__tyRHZ\",\"legend-group\":\"UtilizationReport_legend-group__2B7no\",\"legend\":\"UtilizationReport_legend__DGO3_\",\"header-report\":\"UtilizationReport_header-report__3kOEH\",\"report-primary\":\"UtilizationReport_report-primary__3OJS6\",\"title\":\"UtilizationReport_title__2XpUx\",\"report-details\":\"UtilizationReport_report-details__2Gwsz\",\"graph\":\"UtilizationReport_graph__4pr7a\",\"item\":\"UtilizationReport_item__IARh3\",\"header-data\":\"UtilizationReport_header-data__1AGxt\",\"mark\":\"UtilizationReport_mark__1kk59\",\"text\":\"UtilizationReport_text__1Df4L\",\"graph-plot\":\"UtilizationReport_graph-plot__3r_fS\",\"plot-items\":\"UtilizationReport_plot-items__Zxv2v\",\"graph-group\":\"UtilizationReport_graph-group__3MVIL\",\"graph-container\":\"UtilizationReport_graph-container__1eAun\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3x3sF\",\"bar-chart\":\"UtilizationReport_bar-chart__ujAbZ\",\"tooltip\":\"UtilizationReport_tooltip__dfeeV\",\"graph-category\":\"UtilizationReport_graph-category__2lqgG\",\"table-row\":\"UtilizationReport_table-row__1DH5e\",\"memberinfo\":\"UtilizationReport_memberinfo__TuCw6\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__2UcnQ\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__kPN-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__1_Jek\",\"header\":\"PRCheckReport_header__CwPU0\",\"content\":\"PRCheckReport_content__1p50d\",\"filter\":\"PRCheckReport_filter__3YKV6\",\"input\":\"PRCheckReport_input__1ZGg4\",\"submit\":\"PRCheckReport_submit__32n3T\",\"body\":\"PRCheckReport_body__25wTW\",\"table\":\"PRCheckReport_table__2MB3o\",\"table-row\":\"PRCheckReport_table-row__3-j4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__1w4kc\",\"header\":\"TreasuryTransmittalReport_header__IrqK3\",\"content\":\"TreasuryTransmittalReport_content__3UWdu\",\"filter\":\"TreasuryTransmittalReport_filter__tF8dp\",\"input\":\"TreasuryTransmittalReport_input__3DQ6Z\",\"submit\":\"TreasuryTransmittalReport_submit__3pRqC\",\"body\":\"TreasuryTransmittalReport_body__FQUBf\",\"table\":\"TreasuryTransmittalReport_table__2rtjS\",\"table-row\":\"TreasuryTransmittalReport_table-row__1OR-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\"};","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={body(viewList.data)}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      id={`${props.id}-suggestion-${index}`}\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    disableComponents = false,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin = false,\n    ...other\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field ${disableComponents && classes.disabled}`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      disabled={disableComponents}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        id={`${id}-date-button`}\n                        className={classes.button}\n                        disabled={disableComponents}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(-1)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport {\n  resetReturn,\n  setReturnNote\n} from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    setNewBundle(state => ({ ...state, [field]: value }))\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography id='upload-soa-button' variant='subtitle2' className={`bold text-link ${classes.label}`}>\n            + Upload SOA\n          </Typography>\n        </Link>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n                setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n              }\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n              }\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.id}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.full_name}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\n\n/**\n * SOA ETL Controller. \n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController() { }\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT:\n  {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    'RCSNum': SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    'Diagnosis': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    'Procedure': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (!dataRows || !dataMapping || !dataMapping.columns || !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]) throw { error: 'invalid parameters' }\n\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/** \n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n * \n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam }).then(res => {\n\n        // Create promise for each add batch operation (which contains add-claims operation)\n        const addBatchPromises = bundle.batches.map(batch => {\n          const batchParam = { ...batch }\n          delete batchParam.claims\n\n          // Create single promise for add batch\n          const promise = new Promise((resolveBatchPromise, rejectBatchPromise) => {\n\n            // Call create batch API\n            BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n              .then(res => {\n                const { data } = res.data\n                batch.batch_number = data.batch_number\n\n                async function addClaims() {\n                  for (let i = 0; i < batch.claims.length; i++) {\n                    const claim = batch.claims[i]\n                    // Invoke create claim\n                    await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                  }\n                  resolveBatchPromise()\n                }\n\n                // Create claims for batch\n                addClaims()\n\n              })\n              .catch(() => {\n                rejectBatchPromise('Batch creation failed')\n              })\n          })\n\n          return promise\n        })\n\n        // Note: VNI requirement, is to not perform automatic bundle submission \n        //       and consequentially, no automatic claims creation for claims under the\n        //       automatically created batches. That is the function requirement. \n        //       The technical operation however, needs claims to be created but just \n        //       NOT visible as of yet to claims encoders (and up).\n        // // Todo: refactor to wait for all batches to be created before submitting bundle\n        // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n        //   if (successCallback) { successCallback();} \n        //   resolve()\n        //   // batch.claims.forEach(element => {\n        //   //   let claim = element\n        //   // })\n        // }).catch(() => {\n        //   reject('Bundle submission failed')\n        // })\n\n\n        // PromiseUtil.executeInSequence(addBatchPromises)\n        Promise.all(addBatchPromises)\n          .then(() => {\n            console.log('success SOA loading unto API')\n            //alert('success SOA loading unto API')\n            resolve(bundle.bundle_number)\n          })\n\n      }).catch(() => {\n        console.log('failed SOA loading unto API')\n        //alert('failed SOA loading unto API')\n        reject('Bundle creation failed')\n      })\n\n    })\n  });\n\n  return promise\n}\n\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n      })\n\n      outputEntries.push(outputEntry)\n    }\n\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n\n  return outputEntries\n}\n\n/** \n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n * \n * @param prepDataRows output from _transformPreviewDataToPrepData()\n * \n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived).add(30, 'days').format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: \"SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n\",\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (!currentClaim || (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])) {\n\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = memberName.split(',')\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts[1].trim(),\n        member_middle_name: '',\n        member_last_name: nameParts[0].trim(),\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: '',\n\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries  \n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee \n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n \n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n      \n      currentClaim.professional_fees.push({\n        doctor_name: lineItem, doctor_id: \"unknown\", gross_amount: lineAmount,\n        specialization: \"unknown\", vat_amount: 0, amount_paid_by_member: 0,\n        philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item \n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem, item_code: \"unknown\", gross_amount: lineAmount,\n          vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n        // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem, gross_amount: lineAmount,\n          code: \"unknown\", vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\"\n        })\n      }\n    }\n\n  })\n\n  return bundle\n}\n\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 0\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 1\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 2\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 3\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        '__index__': 4\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 5\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 6\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 7\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 8\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 10\n      },\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]:\n        {\n          'IP': 'In Patient',\n          'OPP': 'Out Patient Procedure',\n          'OPC': 'Out Patient Consultation'\n        }\n\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital',\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n\n    onComplete({ headers, results })\n  }\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    setFileLoaded(true)\n\n    console.log(file)\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop filte to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => { return item[key] && item[key].trim().length > 0 })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={setSelectedItems.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.child}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {headers.map((head, index) => (\n          <Typography key={`heade-${index}`} variant='h6'>\n            {head}\n          </Typography>\n        ))}\n      </div>\n      <div className={classes.children}>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: {}\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, facility: { [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setFacilityTemplate(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          setFacilityTemplate(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n        }\n      }\n    } else {\n      setSuggestions(state => ({ ...state, facility: [] }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then((bundle_number) => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <DynamicTable\n          data={data}\n          onRemoveFile={handleOnRemoveFile}\n          onDetectDataRows={dataRows => {\n            setDataRows(dataRows)\n          }}\n        />\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import FileSaver from 'file-saver'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [] }) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  const _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n  const blob = new Blob(_rows, { type: 'data:text/csv;charset=utf-8' })\n  FileSaver.saveAs(blob, `${fileName}.${extension}`)\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', sort: false, align: 'left', class: 'h_no' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', sort: true, align: 'left', class: 'h_date' },\n  { label: 'MEMBER', sortField: 'latest.member.last_name', sort: true, align: 'left', class: 'h_member' },\n  { label: 'AMOUNT', sortField: 'total_amount', sort: false, align: 'right', class: 'h_amount' },\n  { label: 'AR', sortField: 'total_due_from_member', sort: false, align: 'right', class: 'h_ar' }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    const rows = []\n\n    claims.raw.forEach(item => {\n      item.member = `${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`\n      item.date = DateFormatter(item.date)\n      rows.push(Object.values(item))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {item.loa_number}\n                    </TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {DateFormatter(item.date)}\n                    </TableCell>\n                    <TableCell\n                      className={classes.member}\n                      align='left'\n                    >{`${item.member.last_name}, ${item.member.first_name} ${item.member.middle_name}`}</TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_amount <= 0 ? item.total_amount : 0)}\n                    </TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_due_from_member <= 0 ? item.total_due_from_member : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\nconst columns0 = [\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Claim ID', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Client ID', data: 'client_id', search: true, match: 'any' },\n  { label: 'Client Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Contract ID', data: 'contract_id', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admitted', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_discharged', search: true, match: 'date' },\n  { label: 'Date Issued', type: 'date', data: 'date_issued', search: true, match: 'date' },\n  { label: 'Diagnosis Description', data: 'diagnosis', search: true, match: 'any' }\n]\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer (Company) Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Admission (From)', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Admission (To)', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    console.log(claims)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n    })\n  }\n\n  const fetchCSV = () => {\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: claim, field: col.data }))\n          return formatData({ type: col.type, source: claim, field: col.data })\n        })\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['reports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={event =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => fetchLedger()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle' },\n  { id: 'total-batch', name: 'Total Batchs', sortField: 'total_batch' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ]).then(values => {\n      const [batchEncoders, count] = values\n      setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    services.getBatchEncoderWork({ limit: 10, sort: 'name|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getBatchEncoderWork(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={item.id}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${item.user_id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map((item, index) => (\n                <TableCell\n                  key={index}\n                  // id={item.id}\n                >\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.for_recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number}</TableCell>\n                <TableCell>{item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell id={`view-review-${index}`}>\n                  <Link to={`/claims/recon/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View Claim\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ xs: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} sizes={{ sm: 6 }} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} sizes={{ sm: 6 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id=''\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { loading = false, children } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.loading} id='loading-overlay'>\n          <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n        </div>\n      ) : (\n        children\n      )}\n    </React.Fragment>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState(-1)\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].facility_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].facility_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { renameProp } from 'Utilities/RenameProperty'\n\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showContractRange = false,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showCompany && (\n              <React.Fragment>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-customer-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='company-account-number'\n                      label='Customer (Company) Account Number'\n                      value={claim.client_account_number}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                      error={errors.client_account_number}\n                      readOnly={!permissions.update}\n                    />\n                    {permissions.update && (\n                      <div className={classes.search}>\n                        <Button\n                          id='client-account-number-search'\n                          variant='outlined'\n                          className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                          onClick={handleOnClickClientLookup}\n                        >\n                          <SearchIcon />\n                        </Button>\n                      </div>\n                    )}\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-company-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_name\n                    }}\n                  >\n                    <TextField\n                      id='company-name'\n                      label='Company Name'\n                      value={claim.client_account_name}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                      error={errors.client_account_name}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </React.Fragment>\n            )}\n            {showClaimSource && (\n              <div className={classes['input']}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={error.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={error.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                  noMargin\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${error[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    error={error.error && error.items[index]}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ ...procedure })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={procedure.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={procedure.details.amount_not_covered > 0}\n                    disableComponents={procedure.details.amount_not_covered === 0}\n                    value={procedure.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={procedure.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={procedure.details.amount_due_from_member > 0}\n                    disableComponents={procedure.details.amount_due_from_member === 0}\n                    value={procedure.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0, amount_due_from_member = 0 } = item\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) +\n      parseFloat(philhealth_amount_paid) +\n      parseFloat(amount_due_from_member) +\n      parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ ...hospitalItem })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={hospitalItem.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={hospitalItem.details.amount_not_covered > 0}\n                    disableComponents={hospitalItem.details.amount_not_covered === 0}\n                    value={hospitalItem.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={hospitalItem.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-reason-for-charging-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='reason-for-charging-member'\n                    label='Reason for Charging Member'\n                    required={hospitalItem.details.amount_due_from_member > 0}\n                    disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                    value={hospitalItem.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ ...professionalFee })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={professionalFee.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={professionalFee.details.amount_not_covered > 0}\n                    disableComponents={professionalFee.details.amount_not_covered === 0}\n                    value={professionalFee.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={professionalFee.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        professionalFee.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={professionalFee.details.amount_due_from_member > 0}\n                    disableComponents={professionalFee.details.amount_due_from_member === 0}\n                    value={professionalFee.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel,\n    isReimbursement,\n    doRemove,\n    doViewClaimNotice,\n    doReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const handleOnClickReject = () => {\n    if (!doValidateMiddleware()) {\n      if (isReimbursement) doReject()\n      else setRejectModal(true)\n    }\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 0 && (\n          <Button\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && doViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={handleOnClickReject}\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnShowModal()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n        {permissions.close ? (\n          <Button id='cancel' variant='contained' color='secondary' onClick={() => doCancel({ goBack: true })}>\n            Close\n          </Button>\n        ) : (\n          <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n            Cancel\n          </Button>\n        )}\n\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                doEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                doReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && doReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              doReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message || 'Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              doApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            doSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            doCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            doRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography readonly={'true'} id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`)\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`))\n\n      const _keys = Object.keys(rnb.nodes).sort()\n      const _name = _keys[_keys.length - 1]\n      setLastRoomAndBoard(_name)\n      setPlanPackage('RB')\n      setBenefitCategory(_name)\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [anySearch, setAnySearch] = React.useState('')\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    setPartners(state => ({ ...state, search, category: field }))\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'any') {\n            // Workaround for adding support for \"inclusive any\"\n\n            setAnySearch(search)\n\n            let obj = {\n              id: partnerId,\n              name: partnerName,\n              address: partnerLocation\n            }\n\n            let flag = false\n            // Check if the other fields have values and include them in the search\n            Object.entries(obj).forEach(value => {\n              if (value[1] && value[1].length > 1) {\n                if (flag === false) {\n                  searchObj = {\n                    any: search\n                  }\n                  category = 'and'\n                  flag = true\n                }\n                searchObj[value[0]] = value[1]\n              }\n            })\n          }\n          if (search.length >= 3 || (!search && category === 'and')) {\n            setPartners(state => ({ ...state, search: searchObj }))\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      let _partners = () => {\n        let _partners = partners\n        delete _partners.data\n        return _partners\n      }\n\n      let _params = {\n        ..._partners(),\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n        // category: orderBy\n      }\n\n      if (typeof partners.search !== 'string') {\n        _params = {\n          ..._params,\n          category: 'and'\n        }\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_admitted) || DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        type = member.benefit_limits[0].type\n        limit = member.benefit_limits[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({ data: [...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n          primary.category_code = diagnosis_code\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code || '')\n              }\n            })\n\n            const list = mapData({ data: [..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })), ...data.map(i => ({ ...i, status: 'Approved' }))] })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1.5}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors, getMemberContract, getClientContract } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>{'Internal Server Error'}</Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  flag: Joi.boolean().default(false)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  //* Room\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onChangeDoctor,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showPhilhealthRemarks={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [flag, setFlag] = React.useState({ flag: true })\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      tooth_number: details.tooth_number,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member,\n      flag: true\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  showClaimSource\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        required\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        required\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        required\n                        error={error.medicine_category}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  onReturn\n} = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packagers: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n            </div>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showPhilhealthField={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [clientModal, setClientModal] = React.useState(false)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    dispatch(\n      setClaimBaseDetails({\n        value: corporate_account_no,\n        field: 'client_account_number'\n      })\n    )\n    dispatch(\n      setClaimBaseDetails({\n        value: registered_name,\n        field: 'client_account_name'\n      })\n    )\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-number'\n                      label='Client Account Number'\n                      value={claim.client_account_number}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_number'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                    {permissions.base.update && (\n                      <div className={classes.search}>\n                        <Button\n                          id='client-account-number-search'\n                          variant='outlined'\n                          className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                          onClick={handleOnClickClientLookup}\n                        >\n                          <SearchIcon />\n                        </Button>\n\n                        <ClientMemberModal\n                          show={clientModal}\n                          mode={'clients'}\n                          title={'Account Search'}\n                          allSearchText={'Client Account No., Account Name'}\n                          allSearch={claim.client_account_number}\n                          columns={[\n                            {\n                              id: 'corporate_account_no',\n                              label: 'Client Account Number',\n                              value: data => data.corporate_account_no\n                            },\n                            {\n                              id: 'registered_name',\n                              label: 'Client Account Name',\n                              value: data => data.registered_name\n                            },\n                            {\n                              id: 'contract',\n                              label: 'Contract Period',\n                              value: data => data.contract,\n                              match: 'like'\n                            }\n                          ]}\n                          allSearchFields={[\n                            { id: 'corporate_account_no', match: 'like' },\n                            { id: 'registered_name', match: 'like' }\n                          ]}\n                          service={CustomerCareServices.getClients}\n                          onRecordSet={client => {\n                            if (!client) return\n                            setClientModal(false)\n                            handleSetClient(client)\n                          }}\n                          onClose={() => setClientModal(false)}\n                        />\n                      </div>\n                    )}\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-client-account-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.client_account_number\n                    }}\n                  >\n                    <TextField\n                      id='client-account-name'\n                      label='Client Account Name'\n                      value={claim.client_account_name}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'client_account_name'\n                          })\n                        )\n                      }\n                      error={error.client_account_number}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showAmountPaidByMember={false}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  showAmountNotCovered={false}\n                  showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : other_fields\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\n// import ConfigController from 'Controllers/ConfigController2'\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from '../ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from '../HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from '../ProfessionalFeeForm/DiagnosisValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onViewClaimNotice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onRemove,\n    onReturn\n  } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {}, onChangePro } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  //\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type === 'InPatient' ? 'InPatient' : '')\n      })\n\n      setBatchNumber(data.batch_number)\n\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    console.log(error)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: details.diagnosis_description,\n        diagnosis_code: details.diagnosis_code\n      })\n    }\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: moment(event.toISOString())\n                                .startOf('day')\n                                .toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        required\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <DiscrepancyBase\n                id='dp-official-receipt-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.official_receipt_number\n                }}\n              >\n                <div className={classes['input']}>\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doViewClaimNotice={onViewClaimNotice}\n            doReject={() => setShowReimbursementModal(true)}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            doRemove={onRemove}\n            doReturn={onReturn}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const [isMember, setIsMember] = React.useState(true)\n\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        console.log(err)\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          //  #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          //  #endregion\n          //  #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          //  #region SERVICES\n          userManagementService={UserManagementServices}\n          //  #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n// import FieldMapper from '../Components/FieldMapper/FieldMapper'\nimport TransmittalReport from './../Components/TransmittalReport/TransmittalReport'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'Generate Utilization Ledger', to: '/util-ledger' },\n      { label: 'Transmittal Report', to: '/transmittal-report' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  },\n  transmittal: {\n    text: 'Transmittal Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction BatchEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/transmittal-report' exact render={() => <TransmittalReport />} />\n        <Route path='/util-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n      </Switch>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches({ data: openBatches, count: openBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    id={`encode-batch-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnEncode(item.batch_number)}\n                  >\n                    Encode\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' },\n  { id: 'status', name: ' Status', sortField: 'status', match: '' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches({ data: myBatches, count: myBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns.filter(i => i.id !== 'status')}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches({ data: completedBatches, count: completedBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }, test) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    // room_type: room_type,\n    // room_rate: room_rate,\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.text === room_type) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    room_type: loa.room ? loa.room[0].room_type : '',\n    room_rate: loa.room ? loa.room[0].total_amount : '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  const type = ClaimTypes[claim_type].other_name\n\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value && value !== approvalCode) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              required={reqApprovalCode}\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              required={reqLoaNumber}\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={ClaimTypes.Reimbursement.subType}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                required\n                value={claim.client_account_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                error={errors.client_account_name}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              required\n              value={claim.claim_source}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n              error={errors.claim_source}\n            />\n          </div>\n        )}\n      </div>\n      <div className={classes.groups}>\n        {showMemberAccountNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='member-account-number'\n              required\n              label='Member Account No.'\n              value={claim.member_account_number}\n              disabled={disableControls}\n              onChange={event =>\n                onChange({\n                  field: 'member_account_number',\n                  value: event.target.value\n                })\n              }\n              error={errors.member_account_number}\n            />\n            <div className={classes.search}>\n              <Button\n                id='member-account-number-search'\n                variant='outlined'\n                className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                onClick={handleOnClickMemberLookup}\n              >\n                <SearchIcon />\n              </Button>\n            </div>\n          </div>\n        )}\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            required={!!isDental}\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const procedureICD = procedure.details.diagnosis_code\n      const procedureDesc = procedure.details.diagnosis_description\n      const existing = diagnosis.find(item => (item.code === procedureICD) && (item.description === procedureDesc))\n      if (!existing) dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(setProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: procedure.details.diagnosis_description || '',\n        diagnosis_code: procedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={`${classes.groups} ${classes.custom}`}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={procedure.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const hospitalItemICD = hospitalItem.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === hospitalItemICD)\n      if (!existing) dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const baseError = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: hospitalItem.details.diagnosis_description || '',\n        diagnosis_code: hospitalItem.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={`${classes.groups} ${classes.custom}`}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n              }\n              onChangeCode={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n              }\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const professionalFeeICD = professionalFee.details.diagnosis_code\n      const existing = diagnosis.find(item => item.code === professionalFeeICD)\n      if (!existing) dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const validate = () => {\n    const baseError = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: professionalFee.details.diagnosis_description || '',\n        diagnosis_code: professionalFee.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          <div className={`${classes.groups} ${classes.custom}`}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={`${classes.groups} `}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                }\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                }\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'specialization',\n                    value: event.target.value\n                  })\n                }\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestionObject, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestionObject } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestionObject } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const { diagnosis } = props\n  const dispatch = useDispatch()\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const _field = field.split('_')[1]\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({ details: { diagnosis_code: diagnosi.code, diagnosis_description: diagnosi.description } })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const baseError = DentalProcedureFormValidator({\n      description: dentalProcedure.details.description,\n      code: dentalProcedure.details.code.toString(),\n      tooth_number: dentalProcedure.details.tooth_number,\n      gross_amount: dentalProcedure.details.gross_amount,\n      vat_amount: dentalProcedure.details.vat_amount,\n      amount_paid_by_member: dentalProcedure.details.amount_paid_by_member\n    })\n    let diagnosisError = {}\n    if (diagnosis) {\n      diagnosisError = DiagnosisValidator({\n        diagnosis_description: dentalProcedure.details.diagnosis_description || '',\n        diagnosis_code: dentalProcedure.details.diagnosis_code || ''\n      })\n    }\n    const error = { ...baseError.error, ...diagnosisError.error }\n    console.log(error)\n    setErrors(error || {})\n    return !!Object.keys(error).length\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {dentalProcedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={classes.groups}>\n              {diagnosis && (\n                <React.Fragment>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-description'\n                      required\n                      label='ICD10 Description'\n                      items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                      value={dentalProcedure.details.diagnosis_description}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_description',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_description}\n                    />\n                  </div>\n                  <div className={classes.input}>\n                    <DropDown\n                      id='icd10-code'\n                      required\n                      label='ICD10 Code'\n                      items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                      value={dentalProcedure.details.diagnosis_code}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_code',\n                          value: event.target.value\n                        })\n                      }\n                      error={errors.diagnosis_code}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n\n            <div className={classes.groups}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={dentalProcedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={dentalProcedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {dentalProcedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {dentalProcedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [flag] = React.useState({\n    flag: true\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_to: new Date().toISOString(),\n      date_from: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        console.log(data)\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packagers: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\n// import moment from 'moment'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n    const { error = {} } = MainValidator(data)\n    return error\n  }\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push('/')\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport SearchIcon from '@material-ui/icons/Search'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, getClaimDetails, apiService } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      client_account_number: '',\n      client_account_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    dispatch(\n      setClaimBaseDetails({\n        value: corporate_account_no,\n        field: 'client_account_number'\n      })\n    )\n    dispatch(\n      setClaimBaseDetails({\n        value: registered_name,\n        field: 'client_account_name'\n      })\n    )\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data }, true)\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number *'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_number'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n\n                  <ClientMemberModal\n                    show={clientModal}\n                    mode={'clients'}\n                    title={'Account Search'}\n                    allSearchText={'Client Account No., Account Name'}\n                    allSearch={claim.client_account_number}\n                    columns={[\n                      {\n                        id: 'corporate_account_no',\n                        label: 'Client Account Number',\n                        value: data => data.corporate_account_no\n                      },\n                      {\n                        id: 'registered_name',\n                        label: 'Client Account Name',\n                        value: data => data.registered_name\n                      },\n                      {\n                        id: 'contract',\n                        label: 'Contract Period',\n                        value: data => data.contract,\n                        match: 'like'\n                      }\n                    ]}\n                    allSearchFields={[\n                      { id: 'corporate_account_no', match: 'like' },\n                      { id: 'registered_name', match: 'like' }\n                    ]}\n                    service={CustomerCareServices.getClients}\n                    onRecordSet={client => {\n                      if (!client) return\n                      setClientModal(false)\n                      handleSetClient(client)\n                    }}\n                    onClose={() => setClientModal(false)}\n                  />\n                </div>\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name *'\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={() => doViewClaimNotice({ goBack: false })}\n          >\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({...reason, value: '', error: 'Please Input a Valid Reason'})\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({...item, reasons: tempReasons})\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : type === 'Dental' ? Dental : other_fields\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor, onChangePro, apiService, doViewClaimNotice = () => {} } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = { ..._allowedFields, ..._lineItemFields }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields(initial_values))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          batch_number: data.batch_number,\n          claim_remarks: data.claim_remarks\n\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(\n            data.reimbursement_details.type === 'InPatient'\n              ? 'InPatient'\n              : data.reimbursement_details.type === 'Dental'\n                ? 'Dental'\n                : ''\n          )\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({\n      ...data\n    })\n    return error\n  }\n\n  // const validateDiagnosis = () => {\n  //   if (type === 'Dental') {\n  //     return {}\n  //   }\n  //   return DiagnosisListValidator(claim.diagnosis)\n  // }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f] || ''\n\n    if (!data.date_to) {\n      data.date_to = new Date().toISOString()\n    }\n\n    if (isAdd) {\n      apiService.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      apiService.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: new Date().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          reimbursement_type: 'Dental',\n          date_from: new Date().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm diagnosis={claim.diagnosis} />\n                  <ProcedureForm diagnosis={claim.diagnosis} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const { diagnosis = [] } = data\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    services.getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    services.getEncodersBatches({ ..._params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/assigned/${item.id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                      handleOnSearch({ filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsDetailsEncoderSupervisorRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport { Link } from 'react-router-dom'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                    ? `update-claim-${index}`\n                    : category === 'submitted'\n                    ? `print-${index}`\n                    : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from './../Components/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [{ label: 'Generate Utilization Ledger', to: '/reports' }]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reports: {\n    text: 'Reports'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/reports' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewAllLink={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.pending.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discoun_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: false, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: false, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submmited PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.submitted.header.pr_amount)}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount: PHP{' 0.00'}\n                {/* <span id='total-discount-amount'>{CurrencyFormatter(batches.submitted.header.discount_amount)}</span> */}\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'start' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()]).then(\n      values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      }\n    )\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getSubmittedPaymentRequest({ limit: 10, sort: '' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getSubmittedPaymentRequest(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>PR Processor</TableCell>\n              <TableCell>Total Bundle/SOA</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-requests/${item.id}/list`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Recieved', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact render={props => (<SubmittedPaymentRequestPage supervisor {...props} />)} />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from '../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst clientColumns = [\n  { label: 'Type', data: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', data: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', data: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', data: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', data: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '' })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilization'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({client_account_no: reports.search})]).then(res => {\n      const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n      const { data: graph } = graphClientRes.data\n      const { data: utilAmount } = clientUtilRes.data\n      const { data: loaAmount } = clientUtilLoaRes.data\n\n      // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n      setGraph(state => ({ ...state, total: graph.client.name !== 'Client Not found' ? 1000000 : 0, utilized: utilAmount.total_utilization_amount || 0, ibnr: loaAmount.total_ibnr_amount || 0 }))\n      setGraphData(p => ({ ...p, initial: graph.results }))\n      setClient(state => ({ ...state, name: graph.client.name, account_no: graph.client.account_number }))\n      fetchTable()\n    }).catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  React.useEffect(() => {}, [graph])\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={event => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: DateFormatter(event)\n                    }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>Annual Benefit Limit</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? <div className={classes.graph}>\n                <div className={classes.item} style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}>\n                  {''}\n                </div>\n                <div className={classes.item} style={{ background: '#e63946',\n                  width: `${\n                    ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                      ? 0\n                      : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                  }%` }}>\n                  {''}\n                </div>\n              </div> : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.data}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.data}`}\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: DateFormatter(event),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['pr'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasury'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: DateFormatter(event),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Components\nimport UtilizationReport from './../Components/UtilizationReport/UtilizationReport'\nimport PRCheckReport from './../Components/PRCheckReport/PRCheckReport'\nimport TreasuryTransmittalReport from './../Components/TreasuryTransmittalReport/TreasuryTransmittalReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: [\n      { label: 'View PR and Check Details', to: '/pr-reports' },\n      { label: 'View Treasury Transmittal', to: '/treasury-reports' },\n      { label: 'View Account & Member Utilization', to: '/utilization' }\n    ]\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  treasury: {\n    text: 'Treasury Transmittal Reports'\n  },\n  pr: {\n    text: 'PR and Check Report'\n  },\n  utilization: {\n    text: 'Utilization Report'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/pr-reports' exact render={() => <PRCheckReport />} />\n      <Route path='/treasury-reports' exact render={() => <TreasuryTransmittalReport />} />\n      <Route path='/utilization' exact render={() => <UtilizationReport />} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({claim_number, data}) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date_received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                // className={`${classes.search}`}\n                id={`column-filter-${headCell.id}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event =>\n                  handleOnSearch({\n                    field: headCell.sortField,\n                    value: event.target.value,\n                    match: headCell.match\n                  })\n                }\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n  }, [])\n\n  const getSubordinates = params => {\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {verifiers.data &&\n              verifiers.data.map((item, index) => (\n                <TableRow key={`verifier-list-item-${index}`}>\n                  <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                  <TableCell id={`cv-view-user-${index}`}>\n                    <Typography\n                      id={`view-user-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={handleOnReviewUser(item.id)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`fa-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Link to={`/claims/for-approval/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`mc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                {/* added cond on client to support old data */}\n                <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Link to={`/claims/review/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const { results } = claimResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        data: results,\n        count: claimCountResponse.data.data\n      }))\n    })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`rmc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={`rmc-claim-list-${index}`}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name |\n                  ''} ${item.member.last_name}`}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name | ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'] },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET'\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n    getBatchAndClaims({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const getBatchAndClaims = args => {\n    const { batch_number, bundle_number } = args\n    Promise.all([\n      ApiService.getBatch({ bundle_number, batch_number }),\n      ApiService.getApprovedClaims({ bundle_number, batch_number })\n    ]).then(res => {\n      const [batchRes, claimsRes] = res\n\n      const { data: batch } = batchRes.data\n      const { result: claims } = claimsRes.data.data\n\n      setClaimCount(claims.length)\n      setClaim(claims)\n      setDetails(batch)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getBatchAndClaims({ batch_number, bundle_number })\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} />\n          <ClaimList\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' }\n}\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}}\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false\n}\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: {\n        description: item.description,\n        code: item.code\n      },\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (!item.description.trim()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = item => {\n    setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n    setItem({\n      description: item.description,\n      code: item.code,\n      status: item.status,\n      active: item.status === 'Active',\n      deactivate: item.status === 'Inactive'\n    })\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        <div className={classes.wrapper}>\n          <span className={classes['header-text']}>\n            Description:\n          </span>\n          <div className={classes['text-wrapper']}>\n            <TextField\n              id={'description-field'}\n              value={item.description}\n              onChange={event => { setItem({...item, description: event.target.value}) }}\n            />\n          </div>\n          <div className={classes['radio-buttons']}>\n            <div className={classes.activate}>\n              Active:\n              <Radio\n                color='primary'\n                id={'activate'}\n                checked={item.active}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Active',\n                      active: true,\n                      deactivate: false})} />\n            </div>\n            <div className={classes.deactivate}>\n              Deactivate:\n              <Radio\n                color='primary'\n                id={'deactivate'}\n                checked={item.deactivate}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Inactive',\n                      active: false,\n                      deactivate: true})} />\n            </div>\n          </div>\n          <div className={classes['button-wrapper']}>\n            <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n            </Button>\n            <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <React.Fragment>\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                    <TableSortLabel\n                      active={data.orderBy === headCell.sortField}\n                      direction={data.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(headCell.sortField)}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    <TextField\n                      value={data.filter[headCell.sortField].value || ''}\n                      onChange={event => {\n                        const search = event.target.value\n                        setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell key={'action'} id={`sort-action`} />\n              </TableRow>\n            </React.Fragment>\n\n          }\n          body={data && data.data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n              <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n              <TableCell align={'center'}>\n                <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem(item)} >\n                  Edit\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={data && data.count}\n          page={data && data.page}\n          limit={data && data.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnChange}\n        />\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Reports',\n    icon: 'chart-bar',\n    to: '/reports'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction ClaimsManagerRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n    </Switch>\n  )\n}\n\nexport default ClaimsManagerRoutes\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  client: {\n    registered_name: [],\n    corporate_account_no: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && <Route path='/' component={BatchEncoderSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' component={ClaimsDetailsEncoderSupervisorRoutes} />\n          )}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n          {userRole === 'PR_OFFICER_SUPERVISOR' && <Route path='/' component={PaymentRequestSupervisorRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' component={ClaimsManagerRoutes} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n"],"sourceRoot":""}