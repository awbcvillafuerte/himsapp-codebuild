{"version":3,"sources":["SharedComponents/LoadingIndicator/LoadingIndicator.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/Claims/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete2/AutoComplete2.js","SharedComponents/DatePicker2/DatePicker2.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Services/Api/Claims/ClaimsEncodingServices.js","Utilities/PromiseUtil.js","Services/ArrayToCSV.js","Services/Download.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/Claims/ClaimsServices.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","SharedComponents/AutoComplete/AutoComplete.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/Claims/CustomerCareServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/Claims/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/types.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/Chart/Chart.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/Claims/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/Claims/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.js","SharedComponents/FileViewer/FileViewer.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/Claims/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/Claims/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Services/Api/Claims/MedicalConsultantServices.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/Claims/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.js","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.js","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.js","Pages/Protected/Claims/Components/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.js","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.js","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.js","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.js","Pages/Protected/Claims/Components/Test/Test.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js","Utilities/TextFormatter.js","SharedComponents/Table/Table.js","Services/ExtractValidationResult.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete2/AutoComplete2.module.scss","SharedComponents/DatePicker2/DatePicker2.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","SharedComponents/FileViewer/FileViewer.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.module.scss","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.module.scss","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.module.scss","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.module.scss","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.module.scss","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.module.scss","Pages/Protected/Claims/Components/Test/Test.module.scss"],"names":["LoadingIndicator","props","loading","children","Fragment","className","classes","root","id","CircularProgress","animation","size","CustomizedDialogs","columns","searchTextPlaceHolder","viewList","setViewList","onViewListChange","body","fetching","handleOnClose","p","show","count","search","limit","page","filter","React","useState","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","style","height","display","DialogTitle","disableTypography","header","Typography","variant","title","IconButton","aria-label","button","onClick","DialogContent","dividers","content","SearchTextComponent","onChange","e","target","value","clearTimeout","setTimeout","placeholder","TableContainerProps","overflow","position","TableProps","stickyHeader","head","map","headCell","TableCell","key","sortField","TableSortLabel","active","orderBy","direction","order","sort","name","event","args","field","match","handleColumnFiltering","align","colSpan","length","data","rowsPerPageOptions","CreatedBundlesTile","services","sizes","sm","items","setItems","initialValue","setFetching","fetchingViewList","setFetchingViewList","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","finally","color","state","actionHeader","Button","LoadingService","createBundle","res","history","push","onFilterChange","prevState","TableHead","item","index","bundle_number","DateFormatter","date_due","facility_name","to","params","_params","_data","row","displayName","SubmittedBundlesTile","TaskTrayComponent","showTitle","Children","toArray","type","cloneElement","_sizes","xs","lg","Grid","container","wrapper","spacing","itemSize","s","TicketListComponent","viewAllLink","isFilterShown","setFilter","Paper","FormControl","Select","MenuItem","input","list","action","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","float","AutoComplete2","label","required","readOnly","other","error","suggestions","focus","setFocus","_error","setError","trim","handleOnChange","onBlur","currentTarget","contains","relatedTarget","Autocomplete","options","noOptionsText","renderInput","TextField","ref","InputProps","disableUnderline","endAdornment","getOptionLabel","option","onInputChange","onFocus","inputValue","freeSolo","autoSelect","openOnFocus","autoHighlight","DatePicker","format","noMargin","tabindex","disableComponents","InputRef","useRef","selectedDate","setSelectedDate","handleOnFocus","current","handleDateChange","date","utils","MomentUtils","disabled","moment","allowKeyboardControl","helperText","clearable","TextFieldNumber","customInput","InputBase","isNumericString","displayType","allowLeadingZeros","onValueChange","floatValue","isAllowed","formattedValue","autoComplete","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","facility_id","doctor_id","doctor_name","getMedicalPartnerSuggestions","by","lookups","query","getDoctorPartnerSuggestions","i","full_name","handleOnChangeAutosuggest","handleOnChangeMedicalPartner","handleOnChangeDoctorPartner","term","earliest_term","parseInt","isNaN","newDate","date_received","add","md","total_rcs","toISOString","due_date","soa_number","TextFieldCurrency","total_soa_amt","reassign_notes","multiline","rows","headCells","numeric","disablePadding","BatchList","batches","onDelete","openDialog","onCancel","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","selectStatus","batch","setBatch","includes","claim","toLowerCase","parseFloat","selected","indeterminate","undefined","checked","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","EnhancedTable","handleSelectAllClick","checkAll","padding","Checkbox","Boolean","_index","handleClick","buttonWrapper","Alert","message","deleteMessage","getMessage","cancelLabel","okLabel","onOk","DropDown","addNew","text","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestion","resetSuggestion","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","actions","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","max","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","status","received","due","soa","amount","facility","getBatches","cancelBundle","path","handleOnSubmit","submitBundle","getDoctorSuggestions","suggestion","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","_value","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","ClaimsEncodingServices","claim_number","responseType","Accept","claimNo","PromiseUtil","executeInSequence","promises","callback","a","alert","chain","ArrayToCSV","fileName","extension","statics","mimeType","newLine","c_header","c_footer","_rows","joined","currentValue","slice","blob","Blob","ipcRenderer","window","require","reader","FileReader","readAsDataURL","onloadend","base64data","result","pop","send","FileSaver","saveAs","fromBlob","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","RCSNum","Diagnosis","Procedure","downloadTemplate","columnTemplates","console","log","Object","keys","transform","dataRows","dataMapping","defaults","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","batchIndex","batchParam","claims","batchPromise","resolveBatch","rejectBatch","addClaim","addClaims","addBatches","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","memberName","nameParts","parseFullName","member_account_number","member_first_name","first","member_middle_name","middle","member_last_name","last","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","primary","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","IP","OPP","OPC","__index__","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","doctor_full_name","NewBundleValidator","marginLeft","form","inputs","save","file","onComplete","onError","onload","workbook","XLSX","read","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","onerror","ex","readAsBinaryString","Progress","withStyles","borderRadius","backgroundColor","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","icon","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","trimmedItems","setTrimmedItems","setRows","_items","find","handleOnChangeItems","startAt","endAt","table","flex","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","pair","autoFocus","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","d","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","footer","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","others","SafeAccess","def","delimeter","obj","completeColumns","remarks","ClaimsUtilLedgerReport","dataColumns","hideReport","hideHeader","dateRange","refresh","from","Date","setClaims","dateRangeError","setDateRangeError","setColumns","btnDisabled","setBtnDisabled","handleOnPaginate","handleOnFilter","fetchLedger","ClaimsServices","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","disableFuture","submit","DateRangeValidator","col","c","fontSize","typo","maxHeight","claimIndex","colIndex","pagination","AutoComplete","square","hint","handleItemClick","username","total","CurrencyFormatter","ar_amount","signatories","CustomerCareServices","account_number","mct_id","token","localStorage","getItem","baseURL","CLAIMS_URL","process","replace","where","skip","offset","client_account_no","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","Math","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","member_account_no","info","member_id","icd_code","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","exc","lodash","take","chunk","setPaginate","width","background","hover","role","tabIndex","cell","renderRows","getClaimResponse","analyzeRespone","analysis_results","filters","ClaimsReconServices","theme","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","getDefault","month","legend","hoverBorderWidth","hoverBorderColor","Array","inititalDate","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","setDetails","column","isSuggestionClick","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","paymentRequestReport","TextFieldStyle","margin","member_name","handling","date_max","initialClaims","processed","total_received","total_processed","contract_plan","claim_status","user","geography","label2","suffix","other_name","subType","reportPages","transmittal","component","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","contracts","PdfViewer2Service","service","getTransmittalReportPdf","utilizationLedger","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","client_id","reportType","setReportType","chartData","setChartData","totalAmount","setTotalAmount","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","fetchTable","getMember","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","covered_months","_field","getMonth","covered","uniq","getCoveredMonths","err","utilizationClientTable","getMemberUtilizationLoa","response","RadioGroup","Radio","auto","getMembers","members","textAlign","mergeResultsbyMonth","r","parsedData","_merge","dynamic","uniqBy","j","filteredData","u","labels","datasets","formatChart","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","charAt","toUpperCase","substring","hidden","footerComponent","claimsSummaryReport","geopgraphy","_category","lookupsQuery","year","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","grand","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","rawData","setRawData","facility_region","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","fetchCSV","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_count","reimbursement_percent","reimbursement_category","const_types","reimbursmentAgingReport","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","generateSideBar","child","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","first_name","last_name","comment","assign","ReassignValidator","aria-describedby","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","marginTop","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","middle_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","partner_id","rooms","localeCompare","sensitivity","desc","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","company_name","client_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMemberContractPlanType","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","getIcd10Suggestions","synonym","getICDSynonyms","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","_errors","prop","handleOnChangeCpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","cpt","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","ProcedureList","handleClickLineDiscrepancy","Set","expand","center","right","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","main","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","reimbursement_info_analyst","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","discrepancyModal","setDiscrepancyModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","hasNotCovered","setHasNotCovered","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","sortBy","notCovered","hasAmountNotCovered","handleOnShowApprovalMatrix","AuthorityMatrix","approve","other_types","selected_amount","goBack","doValidateMiddleware","left","return_advice","infos","date_released","date_return","rmLogicReturn","analysis_sheet","enabled","visible","letter_of_advice","escalate","handleOnApproval","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","DigitFormatter","Unit","rollover","UpperWord","eligible_availees","days_deployed","eligibility","empty","RB","EM","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","NameFormatter","format2","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","memberFetchMessage","getPartners","getDoctors","getMemberContractUrl","getClientContractUrl","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","base","startOf","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","handleOnClickSave","validateItems","scrollTo","top","scrollHeight","behavior","ItemForm","defaultFunction","setItem","today","handleOnLookup","handleOnChangeReason","hasError","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","batchNumber","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","breadCrumbsList","isManager","icd10","setMemberFetchMessage","setClientFetchStatus","setGrandTotal","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","group","groupEnd","getProSuggestions","proUsersLookup","getAnaesthesiologistSuggestions","anaesthesiologist","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","getReturnAdvice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","inquire","receiver_id","onInquire","employee_id","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","handleRequestSort","rowsLength","allowCheck","allowCheckDisabled","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","initDefault","lineItemFields","setlineItemFields","isAdd","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","isModified","setIsModified","showSaveAlert","setShowSaveAlert","minWidth","UploadedList","uploads","setUploads","getUploads","file_name","fileType","file_type","aria-controls","aria-haspopup","FileViewer","fromUrl","filePath","errorComponent","setType","viewFile","setViewFile","initial_values","_claimNumber","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_dentalProcedure","_procedure","_hospitalItem","_professionalFee","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","discount_rate","pr_amount","submittedHeadCells","PaymentRequestPage","setBundleNumber","prRemarks","setPrRemarks","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","selectedBatches","_batch","getSelectedPending","checkboxColor","cIndex","submitPromise","should_include","submitBatches","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","MedicalConsultantServices","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","rejected","getItemCount","addtl_cond","$ne","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getClaimsVerifierSupervisors","analystRes","supervisorRes","getApprovedClaims","overrideClaims","handling_time_formatted","initialItem","deactivate","handling_time","kpi_columns","MaintenancePage","setLookup","showAddItem","setShowAddItem","setSection","setindex","lookupsAll","ClaimsMaintainerServices","isActive","handleOnSaveItem","initialLookup","storeLookups","updateLookups","handleOnEditItem","handleOnCancelItem","activate","showSeconds","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","AutoCompletes","storage","handleOnChangeAutosuggest2","facilities","DatePickers","DateValidator","pdfjs","GlobalWorkerOptions","workerSrc","version","forwardRef","Slide","MozillaPdf","setUrl","_blob","blobUrl","URL","createObjectURL","_url","encodeURIComponent","blobToBase64","pdfAsDataUri","pdfArray","convertDataURIToBinary","PdfViewer","document","getElementById","contentWindow","PDFViewerApplication","base64Index","base64","atob","rawLength","array","Uint8Array","ArrayBuffer","charCodeAt","iframe","src","MozillaPdfURL","mct","Service","FaultyButton","Error","ErrorProducers","notDefined","boom","setBoom","Test","setStorage","toggle","setToggle","sidebar","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes","numeral","sentence","isValid","DateFormatterByAbbreviation","initial","abr","lastName","firstName","middleName","format1","useStyles1","makeStyles","flexShrink","TablePaginationActions","useTheme","ceil","CustomTable","SelectProps","inputProps","native","ActionsComponent","extract","DashboardTileComponent","currency","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","module","exports","useStyles","paddingLeft","paddingRight","highlight","palette","secondary","lighten","light","dark","spacer","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","sorter","analyst","sortDirection"],"mappings":"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","file":"static/js/3.8a1e5086.chunk.js","sourcesContent":["import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { loading = false, children } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.root}>\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        </div>\n      ) : (\n        children\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body,\n  fetching = false\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({\n      ...p,\n      show: false,\n      count: 0,\n      search: '',\n      limit: 10,\n      page: 1,\n      filter: {}\n    }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={\n            fetching ? (\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <LoadingIndicator loading={fetching} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              body(viewList.data)\n            )\n          }\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'created', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`created-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`submitted-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      setSelectedDate(date)\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={selectedDate}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  helperText={''}\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({\n                ...state,\n                doctorPartner: data.map(i => ({ ...i, name: i.full_name }))\n              }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      onChange({ field, value })\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name', field })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name', field })\n          break\n        default:\n          break\n      }\n    } else {\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(details.date_received)\n      .add(term, 'days')\n      .format('MM/DD/YYYY')\n    onChange({ field: 'facility_id', value: value.id })\n    onChange({ field: 'facility_name', value: value.name })\n    onChange({ field: 'due_date', value: newDate })\n  }\n\n  const handleOnChangeDoctorPartner = ({ value, field }) => {\n    onChange({ field: 'doctor_name', value: value.full_name })\n    onChange({ field: 'doctor_id', value: value.id })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ field: 'total_rcs', value: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ field: 'date_received', value: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ field: 'due_date', value: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ field: 'soa_number', value: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ field: 'total_soa_amt', value: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'id'}\n            loading={fetching['facility_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'name'}\n            loading={fetching['facility_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'id'}\n            loading={fetching['doctor_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'name'}\n            loading={fetching['doctor_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { resetReturn, setReturnNote } from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents,\n  fetching\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setSelectedBatch({ [field]: value }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(setSelectedBatch({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    dispatch(resetSuggestionObject({ field: 'doctor' }))\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          setFetching(state => ({ ...state, [by]: true }))\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ field, value }) => {\n    setBundle(state => ({ ...state, [field]: value }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n            fetching={fetching}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","function PromiseUtil () { }\n\n/**\n * Execute in sequence the list of promises\n *\n * @param {array} tasks list of tasks or promises\n */\nPromiseUtil.executeInSequence = async function (promises, callback) {\n  // return promises.reduce((p, task) => p.then(task), Promise.resolve())\n  // for (const fn of promises) {\n  //     await fn()\n  // }\n  \n  var chain\n  for (let i in promises){\n      alert(i)\n    if (chain) chain = chain.then(promises[i]);\n    if (!chain) chain = promises[i]();\n\n    // TODO: remove\n    break\n  }\n\n  callback()\n}\n\nexport default PromiseUtil\n","import { fromBlob } from 'Services/Download'\n\nexport default function ArrayToCSV (props) {\n  const {\n    fileName = 'CSV',\n    header = [],\n    rows = [],\n    extension = 'csv',\n    statics = [],\n    data = [],\n    mimeType = 'data:text/csv;charset=utf-8'\n  } = props\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  fromBlob({ fileName, extension, content: _rows, mimeType })\n}\n","import FileSaver from 'file-saver'\n\nconst fromBlob = props => {\n  const { fileName = '', content, extension, mimeType = 'application/octet-stream' } = props\n\n  const blob = new Blob(content, { type: mimeType })\n\n  // Trial\n  try {\n    const { ipcRenderer } = window.require('electron')\n\n    const reader = new FileReader()\n    reader.readAsDataURL(blob)\n    reader.onloadend = function () {\n      const data = reader.result\n      const base64data = data.split(';base64,').pop()\n      ipcRenderer.send('open-save-dialog', { data: base64data, fileName })\n    }\n  } catch (error) {\n    FileSaver.saveAs(blob, `${fileName}.${extension}`)\n  }\n}\nconst fromUrl = props => {\n  const { fileName = '', content, extension, mimeType = 'application/octet-stream' } = props\n  FileSaver.saveAs(content, `${fileName}.${extension}`)\n}\n\nexport { fromBlob, fromUrl }\n","// TODO: Uncomment\nimport moment from 'moment'\nimport { parseFullName } from 'parse-full-name'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\nimport PromiseUtil from 'Utilities/PromiseUtil'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n/**\n * SOA ETL Controller.\n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController () {}\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT: {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    RCSNum: SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    Diagnosis: SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    Procedure: SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs download of template for SOA File Import\n *\n * @param columnTemplates template mapping\n */\nSoaEtlController.downloadTemplate = function (columnTemplates = SoaEtlController.COLUMN_TEMPLATES.DEFAULT) {\n  console.log('soa_etl', 'downloadTemplate')\n\n  ArrayToCSV({\n    fileName: 'SOA_import',\n    extension: 'xls',\n    header: Object.keys(columnTemplates),\n    rows: [],\n    mimeType: 'application/vnd.ms-excel'\n  })\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (\n    !dataRows ||\n    !dataMapping ||\n    !dataMapping.columns ||\n    !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n  )\n    throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/**\n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n *\n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam })\n        .then(res => {\n          // Create promise for each add batch operation (which contains add-claims operation)\n          const addBatchPromises = []\n\n          async function addBatches () {\n            for (let batchIndex in bundle.batches) {\n              const batch = bundle.batches[batchIndex]\n              const batchParam = { ...batch }\n              delete batchParam.claims\n\n              let batchPromise = new Promise(function (resolveBatch, rejectBatch) {\n                // Call create batch API\n                BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n                  .then(res => {\n                    const { data } = res.data\n                    batch.batch_number = data.batch_number\n\n                    async function addClaims () {\n                      for (let i = 0; i < batch.claims.length; i++) {\n                        const claim = batch.claims[i]\n                        // Invoke create claim\n                        await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                      }\n                      resolveBatch()\n                    }\n\n                    // Create claims for batch\n                    addClaims()\n                  })\n                  .catch(() => {\n                    rejectBatch('Batch creation failed')\n                  })\n              })\n\n              await batchPromise\n            }\n            resolve(bundle.bundle_number)\n          }\n\n          addBatches()\n\n          // Note: VNI requirement, is to not perform automatic bundle submission\n          //       and consequentially, no automatic claims creation for claims under the\n          //       automatically created batches. That is the function requirement.\n          //       The technical operation however, needs claims to be created but just\n          //       NOT visible as of yet to claims encoders (and up).\n          // // Todo: refactor to wait for all batches to be created before submitting bundle\n          // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n          //   if (successCallback) { successCallback();}\n          //   resolve()\n          //   // batch.claims.forEach(element => {\n          //   //   let claim = element\n          //   // })\n          // }).catch(() => {\n          //   reject('Bundle submission failed')\n          // })\n\n          // console.log(addBatchPromises)\n          // resolve(bundle.bundle_number)\n          //PromiseUtil.executeInSequence(addBatchPromises, () => { resolve(bundle.bundle_number) })\n          // Promise.all(addBatchPromises)\n          //   .then(() => {\n          //     console.log('success SOA loading unto API')\n          //     //alert('success SOA loading unto API')\n          //     resolve(bundle.bundle_number)\n          //   })\n        })\n        .catch(() => {\n          console.log('failed SOA loading unto API')\n          //alert('failed SOA loading unto API')\n          reject('Bundle creation failed')\n        })\n    })\n  })\n\n  return promise\n}\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/**\n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n *\n * @param prepDataRows output from _transformPreviewDataToPrepData()\n *\n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived)\n          .add(30, 'days')\n          .format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: 'SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n',\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (\n      !currentClaim ||\n      (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])\n    ) {\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = parseFullName(memberName)\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts.first,\n        member_middle_name: nameParts.middle,\n        member_last_name: nameParts.last,\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: ''\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries\n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee\n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n\n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n\n      currentClaim.professional_fees.push({\n        doctor_name: lineItem,\n        doctor_id: 'unknown',\n        gross_amount: lineAmount,\n        specialization: 'unknown',\n        vat_amount: 0,\n        amount_paid_by_member: 0,\n        philhealth_amount_paid: 0,\n        philhealth_remarks: '',\n        amount_not_covered: 0,\n        reason: '',\n        amount_due_from_member: 0,\n        reason_for_charging_member: ''\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem,\n          item_code: 'unknown',\n          gross_amount: lineAmount,\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: '',\n          amount_not_covered: 0,\n          reason: '',\n          amount_due_from_member: 0,\n          reason_for_charging_member: ''\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n      // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem,\n          gross_amount: lineAmount,\n          code: 'unknown',\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: ''\n        })\n      }\n    }\n  })\n\n  return bundle\n}\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 0\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 1\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 2\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 3\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        __index__: 4\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 5\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 6\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 7\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 8\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 10\n      }\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {\n          IP: 'In Patient',\n          OPP: 'Out Patient Procedure',\n          OPC: 'Out Patient Consultation'\n        }\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital'\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_full_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`doctor_${by}`]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, doctorPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`doctor_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      setNewBundle(state => ({ ...state, [field]: value }))\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name' })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name' })\n          break\n        default:\n          break\n      }\n    } else {\n      const _value = value || {}\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value: _value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value: _value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value = {}, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(newBundle.date_received).add(term, 'days')\n\n    setNewBundle(state => ({\n      ...state,\n      facility_id: value.id,\n      facility_name: value.name,\n      due_date: newDate,\n      due_date_adjustment: term\n    }))\n    // }\n  }\n\n  const handleOnChangeDoctorPartner = ({ value = {}, field }) => {\n    setNewBundle(state => ({ ...state, doctor_id: value.id, doctor_name: value.full_name }))\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const handleOnDownloadTemplate = () => {\n    LoadingService.loading(true)\n    SoaEtlController.downloadTemplate()\n    LoadingService.loading(false)\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography\n            id='upload-soa-button'\n            variant='subtitle2'\n            className={`bold text-link ${classes.label}`}\n            display='inline'\n          >\n            + Upload SOA\n          </Typography>\n        </Link>\n        <Typography\n          onClick={handleOnDownloadTemplate}\n          id='download-soa-template-button'\n          variant='subtitle2'\n          className={`bold text-link ${classes.label}`}\n          display='inline'\n          style={{ marginLeft: 10 }}\n        >\n          + Download SOA Template\n        </Typography>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              //* e.target is in an asynchronous context (setNewBundle)\n              //* moved e.target.value outside asynchronous context\n              onChange={e => {\n                const { value } = e.target\n                // setNewBundle(state => ({ ...state, soa_number: e.target.value }))\n                setNewBundle(state => ({ ...state, soa_number: value }))\n              }}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'id'}\n              loading={fetching['facility_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'name'}\n              loading={fetching['facility_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'id'}\n              loading={fetching['doctor_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'full_name'}\n              loading={fetching['doctor_full_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete, onError }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n    onComplete({ headers, results })\n  }\n\n  reader.onerror = ex => onError(ex)\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    console.log(file)\n    const validTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel']\n    if (!validTypes.includes(file.type)) return\n\n    setFileLoaded(true)\n\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      },\n      onError: ex => {\n        console.log(ex)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [trimmedItems, setTrimmedItems] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(() => {\n    // Trim the actual passed items\n    const _items = []\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => {\n        return item[key] && item[key].trim().length > 0\n      })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    // Store trimmed items\n    setTrimmedItems(_items)\n\n    // Trigger the callback sending all trimmed items\n    onDetectDataRows(_items)\n  }, [])\n\n  React.useEffect(() => {\n    // Trigger set rows\n    handleOnChangeItems({})\n  }, [trimmedItems])\n\n  // React.useEffect(() => {\n  //   onDetectDataRows(rows)\n  // }, [rows])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n    setRows(trimmedItems.slice(startAt, endAt))\n    // const _items = []\n\n    // const startAt = (page - 1) * limit\n    // const endAt = page * limit\n\n    // for (let index = startAt; index < endAt; index++) {\n    //   const item = trimmedItems[index]\n    //   if (!item) break\n\n    //   const hasValue = Object.keys(item).find(key => {\n    //     return item[key] && item[key].trim().length > 0\n    //   })\n    //   if (hasValue) _items.push({ ...item, __index__: index })\n    // }\n\n    // setRows(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={rows.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={setRows.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.pair}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.header}>\n          {headers.map((head, index) => (\n            <Typography key={`heade-${index}`} variant='h6'>\n              {head}\n            </Typography>\n          ))}\n        </div>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: []\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({ ...state, facility: [] }))\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, facility: data }))\n            })\n            .finally(() => {\n              setFetching((state = { ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      setFacilityTemplate(state => ({ ...state, [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    } else {\n      const _value = value || {}\n      setFacilityTemplate(state => ({ ...state, facility_id: _value.id, facility_name: _value.name }))\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  search\n                })\n              }\n              field={'id'}\n              loading={fetching['facility_id']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  search\n                })\n              }\n              field={'name'}\n              loading={fetching['facility_name']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      console.log('Transform Error', ex)\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex.message || ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport { method } from 'lodash'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static genericURL (params) {\n    const { url, method = 'GET', ...others } = params\n    return axios({\n      url: url,\n      method: method,\n      params: others\n    })\n  }\n\n  static getUploads (params) {\n    return axios({\n      url: '/file',\n      method: 'GET',\n      params\n    })\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  const [btnDisabled, setBtnDisabled] = React.useState(true)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setBtnDisabled(!_claims.length)\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    setBtnDisabled(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n      setBtnDisabled(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={btnDisabled}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${btnDisabled ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.length < 1 ? (\n                    <MenuItem className={classes.hint} disabled>\n                      Enter atleast 3 characters to search.\n                    </MenuItem>\n                  ) : (\n                    suggestions.map((suggestion, index) => (\n                      <MenuItem\n                        id={`${props.id}-suggestion-${index}`}\n                        key={`${props.id}-suggestion-${index}`}\n                        onClick={() => {\n                          setFocus(true)\n                          handleItemClick(index)\n                        }}\n                      >\n                        {suggestion}\n                      </MenuItem>\n                    ))\n                  )}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getMemberContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/member/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/client/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET'\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', data: 'no', sort: false, align: 'left', class: 'h_no', type: 'number' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', data: 'loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', data: 'date', sort: true, align: 'left', class: 'h_date', type: 'date' },\n  { label: 'MEMBER', sortField: 'member_name', data: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  {\n    label: 'AMOUNT',\n    sortField: 'total_amount',\n    data: 'total_amount',\n    sort: false,\n    align: 'right',\n    class: 'h_amount',\n    type: 'currency'\n  },\n  {\n    label: 'AR',\n    sortField: 'total_due_from_member',\n    data: 'total_due_from_member',\n    sort: false,\n    align: 'right',\n    class: 'h_ar',\n    type: 'currency'\n  }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    // const rows = []\n\n    // claims.raw.forEach(item => {\n    //   item.date = DateFormatter(item.date)\n    //   rows.push(Object.values(item))\n    // })\n\n    const rows = claims.raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                        align={col.align}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          const types = ['ABL', 'MBL']\n          for (let i = 0; i < member.benefit_limits.length; i++) {\n            if (types.includes(member.benefit_limits[i].type)) {\n              type = member.benefit_limits[i].type\n              limit = member.benefit_limits[i].limit\n              break\n            }\n          }\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: 'rgba(237, 237, 237, 0.9)',\n  OutPatientProcedure: 'rgba(222, 222, 222, 0.9)',\n  OutPatientConsultation: 'rgba(158, 163, 172, 0.9)',\n  Reimbursement: 'rgba(13, 94, 64, 0.9)',\n  Emergency: 'rgba(250, 180, 53, 0.9)',\n  Dental: 'rgba(128, 52, 173, 0.9)',\n  MedicineAllowance: 'rgba(26, 177, 196, 0.9)',\n  APE: 'rgba(58, 183, 125, 0.9)',\n  ECU: 'rgba(253, 84, 81, 0.9)',\n  Pharmacy: 'rgba(98, 255, 183, 0.9)',\n  PPE: 'rgba(30, 32, 113, 0.9)',\n  MedicalSupplies: 'rgba(230, 168, 228, 0.9)',\n  ClinicManagement: 'rgba(102, 175, 190, 0.9)'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import legend from '../data/legend'\nimport theme from '../style/theme'\n\nconst getDefault = ({ month = [] }) => {\n  const count = month.length\n  const _legend = legend.map(i => ({\n    label: i.description,\n    hoverBorderWidth: 1,\n    hoverBorderColor: '#000',\n    // hidden: type === 'all' ? false : type !== i.description.replace(/ /g, ''),\n    backgroundColor: theme[i.description.replace(/ /g, '')] }))\n\n  return _legend.map(i => ({ ...i, data: Array.from(Array(count), () => 0) }))\n}\n\nexport default getDefault\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nexport default function BundlePage (props) {\n  const { data, options } = props\n  return (\n    <React.Fragment>\n      <Bar data={data} options={options} />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nimport moment from 'moment'\nimport lodash from 'lodash'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n// import ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport getDefault from './config/types'\nimport Chart from './Chart/Chart'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\nconst inititalDate = { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' }\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any', align: 'left' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number', align: 'center' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number', align: 'center' }\n]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: { client_id: '', member_id: '' },\n    range: { client_id: inititalDate, member_id: inititalDate },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n  const [chartData, setChartData] = React.useState({})\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n  const [totalAmount, setTotalAmount] = React.useState(0)\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [suggestion, setSuggestion] = React.useState({\n    client_id: [],\n    member_id: []\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const validate = () => {\n    const field = reportType === 'client' ? 'client_id' : 'member_id'\n    const { error } = DateRangeValidator({\n      date_from: reports.range[field].from,\n      date_to: reports.range[field].to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const getCoveredMonths = ({ data = [] }) => {\n    const _field = reportType === 'client' ? 'client_id' : 'member_id'\n    const from = new Date(reports.range[_field].from).getMonth()\n    const to = new Date(reports.range[_field].to).getMonth()\n    const covered = []\n    const result = data.map(i => i.month - 1)\n\n    for (let i = from; i <= to; i++) {\n      covered.push(i)\n    }\n\n    return lodash.uniq([...covered, ...result]).map(i => months[i])\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'client' && reports.search.client_id === '') return\n    if (reportType === 'member' && reports.search.member_id === '') return\n\n    LoadingService.loading(true)\n    if (reportType === 'member') {\n      getMember(reports.search.member_id)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n    } else {\n      Promise.all([\n        ClaimsServices.utilizationClient({\n          search: reports.search.client_id,\n          range: reports.range.client_id,\n          filter: reports.filter,\n          sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n          page: reports.page,\n          limit: reports.limit,\n          type: graphFilter\n        }),\n        ClaimsReconServices.getClientUtilization({ client_account_no: reports.search.client_id }),\n        CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search.client_id })\n      ])\n        .then(res => {\n          const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n          const { data: graph } = graphClientRes.data\n          const { data: utilAmount } = clientUtilRes.data\n          const { data: loaAmount } = clientUtilLoaRes.data\n          // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n          setGraph(state => ({\n            ...state,\n            total: graph.client.limit.limit,\n            utilized: utilAmount.total_utilization_amount || 0,\n            ibnr: loaAmount.total_ibnr_amount || 0\n          }))\n          // setGraphData(p => ({ ...p, initial: graph.results }))\n          setTotalAmount(graph.grand_total || 0)\n          setClient(state => ({\n            ...state,\n            name: graph.client.name,\n            account_no: graph.client.account_number,\n            limit: graph.client.limit\n          }))\n\n          const covered_months = getCoveredMonths({ data: graph.results })\n          setChartData({ ...graph, covered_months })\n          fetchTable()\n        })\n        .catch(err => console.error(`Error Fetching Data: ${err}`))\n    }\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search.client_id,\n      range: reports.range.client_id,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  // const formatData = ({ type = null, source, field }) => {\n  //   let output = ''\n  //   if (type === 'date') {\n  //     output = DateFormatter(source[field])\n  //   } else if (type === 'array') {\n  //     const [root, property] = field.split('.')\n  //     output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n  //   } else {\n  //     output = source[field] ? source[field] : ''\n  //   }\n\n  //   return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  // }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = ({ value, field, isSuggestionClick }) => {\n    setReports(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          if (value && reportType === 'client') {\n            CustomerCareServices.getClientInfo({ value, field: 'corporate_account_no' }).then(res => {\n              const { data = [] } = res.data\n              const item = []\n              for (const d of data) {\n                item.push(d['corporate_account_no'])\n              }\n              setSuggestion(state => ({ ...state, [field]: item }))\n            })\n          } else if (value && reportType === 'member') {\n            CustomerCareServices.getMembers({\n              where: { [field]: { value: value, match: 'like' } },\n              order: `${field} asc`,\n              limit: 10\n            }).then(res => {\n              const { members = [] } = res.data.data\n              const item = []\n              for (const d of members) {\n                item.push(d[field])\n              }\n              setSuggestion(state => ({ ...state, [field]: item }))\n            })\n          }\n        }, 500)\n      )\n    }\n    setSuggestion(state => ({ ...state, [field]: [] }))\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n      .finally(() => LoadingService.loading(false))\n  }\n\n  const formatChart = data => {\n    const { results = [], covered_months = [] } = data\n    // const _data = getDefault({ month: covered_months, type: graphFilter })\n    const _data = getDefault({ month: covered_months })\n    let mergeResultsbyMonth = []\n\n    for (const r of results) {\n      mergeResultsbyMonth = [...mergeResultsbyMonth, ...r.claims]\n    }\n\n    const parsedData = mergeResultsbyMonth.map(_merge => {\n      for (const i of _data) {\n        if (_merge.claim_type === i.label) {\n          const month = months[_merge.month - 1]\n          i.data[covered_months.indexOf(month)] = _merge.total_amount\n          return { ...i, data: i.data }\n        }\n      }\n    })\n\n    const dynamic = lodash.uniqBy(parsedData, j => j.label)\n    const filteredData = lodash\n      .orderBy(_data\n        .map(i => dynamic\n          .find(u => u.label === i.label) || i), ['label'], ['asc'])\n\n    return {\n      labels: covered_months,\n      datasets: filteredData.filter(i => {\n        if (i.label.replace(/ /g, '') === graphFilter) {\n          return i\n        } else if (graphFilter === 'all') {\n          return filteredData\n        }\n      })\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.auto}>\n              <AutoComplete\n                placeholder={reportType === 'client' ? `Search for Client ID` : `Search for Member ID`}\n                id='account_number'\n                value={reportType === 'client' ? reports.search.client_id : reports.search.member_id}\n                suggestions={reportType === 'client' ? suggestion.client_id : suggestion.member_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleSearchChange({\n                    value,\n                    isSuggestionClick,\n                    field: reportType === 'client' ? 'client_id' : 'member_id'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].from}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], from: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].to}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], to: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['line-graph']}>\n              <div className={classes.container}>\n                <div className={classes['line-container']}>\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`,\n                      background: '#f8b439'\n                    }}\n                  />\n                </div>\n                <div className={classes['line-details']}>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#4fb083' }} />\n                      <Typography variant='button'>UTILIZED</Typography>\n                    </div>\n                    <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                      {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                      <Typography variant='button'>IBNR</Typography>\n                    </div>\n                    <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                      {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#f8b439' }} />\n                      <Typography variant='button'>AVAILABLE</Typography>\n                    </div>\n                    <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                      {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map((data, index) => (\n                    <MenuItem value={data.type} key={index}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map((data, index) => (\n                <div className={classes['legend-group']} key={index}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['chart']}>\n            <Chart\n              data={formatChart(chartData)}\n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n                legend: {\n                  display: false\n                },\n                // tooltips: {\n                //   enabled: true,\n                //   mode: 'single',\n                //   callbacks: {\n                //     label: (tooltipItems, data) => {\n                //       tooltipItems.value = CurrencyFormatter(tooltipItems.value)\n                //       return `${tooltipItems.yLabel}: ${CurrencyFormatter(tooltipItems.value)}`\n                //     }\n                //   }\n                // },\n                // animation: {\n                //   show: {\n                //     x: {\n                //       from: 0\n                //     },\n                //     y: {\n                //       from: 0\n                //     }\n                //   },\n                //   hide: {\n                //     x: {\n                //       to: 0\n                //     },\n                //     y: {\n                //       to: 0\n                //     }\n                //   }\n                // },\n                maintainAspectRatio: false\n              }} />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '570px', overflow: 'auto', position: 'relative', minHeight: '190px' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`} align={headCell.align}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(claim.total_amount)}</TableCell>\n                    <TableCell align='center'>{claim.cases}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_principals}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography>{`Total Amount: ${CurrencyFormatter(totalAmount)}`}</Typography>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{item.member_account_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{`${item.member_name || 'N/A'}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'currency', data: 'total_amount' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', received: 0, processed: 0, total_amount: 0 },\n      { month: 'Febuary', received: 0, processed: 0, total_amount: 0 },\n      { month: 'March', received: 0, processed: 0, total_amount: 0 },\n      { month: 'April', received: 0, processed: 0, total_amount: 0 },\n      { month: 'May', received: 0, processed: 0, total_amount: 0 },\n      { month: 'June', received: 0, processed: 0, total_amount: 0 },\n      { month: 'July', received: 0, processed: 0, total_amount: 0 },\n      { month: 'August', received: 0, processed: 0, total_amount: 0 },\n      { month: 'September', received: 0, processed: 0, total_amount: 0 },\n      { month: 'October', received: 0, processed: 0, total_amount: 0 },\n      { month: 'November', received: 0, processed: 0, total_amount: 0 },\n      { month: 'December', received: 0, processed: 0, total_amount: 0 }\n    ],\n    total_received: 0,\n    total_processed: 0,\n    total_amount: 0\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = 0, total_amount } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed}`, `${total_amount}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align='center'\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_amount}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.receivedTotal}</span>\n            </Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.processedTotal}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: 'ALL', claim_source: 'ALL', contract_plan_type: 'ALL', section: 'ALL', user: 'ALL' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: ['ALL'],\n    claim_source: ['ALL'],\n    contract_plan_type: ['ALL'],\n    section: ['ALL'],\n    user: ['ALL']\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'section',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.count}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.count}</span>\n            </Typography>\n          </div>\n          <div className={classes.average}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.average}</span>\n            </Typography>\n          </div>\n          <div className={classes.work}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.work}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of partially approved',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Partially Approved Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState({})\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, index = '', field, isSuggestionClick }) => {\n    let _category = ''\n\n    if (index) _category = `${category}_${index}`\n    else _category = category.split('-').join('_')\n\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[_category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of returned claims',\n    label2: 'within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: 'beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of returned claims',\n    label2: 'beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Returned Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState([])\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item', align: 'left' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count', align: 'center' },\n  {\n    label: 'Number of Percentage of Reimbursement Claims',\n    type: 'number',\n    data: 'reimbursement_percent',\n    align: 'center',\n    suffix: '%'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { item: 'Reimbursement within TAT', reimbursement_count: 0, reimbursement_percent: 0 },\n      { item: 'Reimbusement above TAT', reimbursement_count: 0, reimbursement_percent: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: 'ALL' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [category]: setTimeout(() => {\n          // use constant (this also used in Reimbursement Claim page)\n          const const_types = ClaimTypes.Reimbursement.subType\n\n          if (value) {\n            const _value = value.toLowerCase()\n            const filtered = const_types\n              .map(i => i.text)\n              .filter(j => {\n                const lower_case = j.toLowerCase()\n\n                return lower_case.includes(_value)\n              })\n\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...filtered] }))\n          } else {\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...const_types.map(i => i.text)] }))\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement_category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`} align={headCell.align}>\n                    {headCell.label}\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.align}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  // { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ])\n      .then(values => {\n        const [batchEncoders, count] = values\n        setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    setFetching(true)\n    services\n      .getBatchEncoderWork({ limit: 10, sort: 'name|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={item.id}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.user_id}>\n                  <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                  <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                  <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                  <TableCell id={`view-work-${index}`}>\n                    <Link to={`/batch-encoder-work/${item.user_id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    setFetching(true)\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count, id: 'claim-for-Reconciliation-count' }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map((item, index) => (\n                  <TableCell\n                    key={index}\n                    // id={item.id}\n                  >\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.for_recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number}</TableCell>\n                  <TableCell>{item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell id={`view-review-${index}`}>\n                    <Link to={`/claims/recon/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from '../instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              LoadingService.loading(false)\n            }\n          }\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return <div className={classes.root}>{children}</div>\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              field={'description'}\n              loading={fetching['description']}\n              onChange={onChangeDescription}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            field={'code'}\n            loading={fetching['code']}\n            onChange={onChangeCode}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                console.log('fetched', data)\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={(value, search) =>\n                        handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                      }\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                      suggestions={suggestions}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={(value, search) =>\n                        handleOnChangeIcd10({ field: 'description', index, value, search })\n                      }\n                      onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt}\n                    field={'description'}\n                    onChange={(value, search) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        search\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt}\n                    field={'code'}\n                    onChange={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem}\n                    field={'name'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem}\n                    field={'item_code'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization}\n                  field={'description'}\n                  loading={fetching['description']}\n                  onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [], reimbursement_info_analyst = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [discrepancyModal, setDiscrepancyModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [hasNotCovered, setHasNotCovered] = React.useState(false)\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  const hasAmountNotCovered = ({\n    dental_procedures = [],\n    procedures = [],\n    hospital_items = [],\n    professional_fees = []\n  }) => {\n    dental_procedures = dental_procedures || []\n    procedures = procedures || []\n    hospital_items = hospital_items || []\n    professional_fees = professional_fees || []\n\n    for (const item of [...dental_procedures, ...procedures, ...hospital_items, ...professional_fees]) {\n      if (item.reason || item.amount_not_covered) return true\n    }\n    return false\n  }\n\n  // Reactive\n  React.useEffect(() => {\n    const notCovered = hasAmountNotCovered(claim)\n    console.log(notCovered)\n    setHasNotCovered(notCovered)\n  }, [claim])\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowApprovalMatrix = ({ skip = false }) => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        setApproveModal({\n          show: true,\n          message:\n            'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n        })\n      } else {\n        if (!skip) {\n          setApproveModal({ show: true, message: 'Are you sure you want to approve the claim?' })\n        } else {\n          onApprove({ goBack: false })\n        }\n      }\n    } else {\n      onApprove({ goBack: false })\n    }\n\n    return true\n  }\n\n  const handleOnApproval = () => {\n    const { diagnosis, procedure, hospital_item, professional_fee, ...others } = discrepancy\n\n    if (\n      Object.keys(diagnosis).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      Object.entries(others).find(([key, value]) => value.length > 0)\n    ) {\n      setDiscrepancyModal(true)\n      return false\n    }\n\n    handleOnShowApprovalMatrix({ skip: false })\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rmLogicReturn = infos => {\n    // no reimbursement_info\n    if (infos.length < 0) return false\n    // multiple reimbursement_info\n    if (infos.length > 1) return true\n\n    // check if reimbursement_info [0] is filler\n    if (infos.length === 1) {\n      const info = infos[0]\n      return !!(info.date_released && info.date_return)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && rmLogicReturn(reimbursement_info) && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={(disabled && permissions.letter_of_advice.enabled) || !hasNotCovered}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnApproval()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={discrepancyModal}\n            message={'There is a highlighted claim item for checking. Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setDiscrepancyModal(false)}\n            onOk={() => {\n              setDiscrepancyModal(false)\n              handleOnShowApprovalMatrix({ skip: true })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component, MozillaPdf } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // const { getMemberContractUrl, getClientContractUrl } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  // const [fileUrl, setFileUrl] = React.useState(null)\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  // React.useEffect(() => {\n  //   let mct = ''\n\n  //   if (isMember) {\n  //     if (!member) return\n  //     mct = member.benefit_tree.MCT.details._id\n  //     setFileUrl(getMemberContractUrl({ mct }))\n  //   } else {\n  //     if (!client) return\n  //     mct = client.benefit_tree.MCT.details._id\n  //     setFileUrl(getClientContractUrl({ mct }))\n  //   }\n  // }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {/* <div className={classes.pdf}>\n          <MozillaPdf fileUrl={fileUrl} />\n        </div> */}\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const {\n    claim,\n    permissions,\n    isMember,\n    member,\n    memberFetchStatus,\n    client,\n    clientFetchStatus,\n    utilizationLoa,\n    memberFetchMessage\n  } = props\n  // Services\n  const {\n    getUtilizations,\n    getPartners,\n    getDoctors,\n    getMemberContract,\n    getClientContract,\n    getMemberContractUrl,\n    getClientContractUrl\n  } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n              getMemberContractUrl={getMemberContractUrl}\n              getClientContractUrl={getClientContractUrl}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox title='Reassignee Notes' messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_id',\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_name',\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_id',\n                          value\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_name',\n                          value\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.from).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const validateItems = ({ items = [] }) => {\n    if (!items.length) {\n      setValidateModal(true)\n    } else setRejectModal(true)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => validateItems({ items: items })}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={validateModal}\n        message='Please add at least one entry/info first before rejecting this claim.'\n        okLabel='Okay'\n        onOk={() => {\n          setValidateModal(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={date => handleOnChange({ field: 'prepared_by', value: date.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_id']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility}\n                    field={'name'}\n                    loading={fetching['facility_name']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n              {/* <UploadedList /> */}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={({ goBack }) => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: false })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  // addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [isMember, setIsMember] = React.useState(true)\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [memberFetchMessage, setMemberFetchMessage] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n  const [grandTotal, setGrandTotal] = React.useState(0)\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n  const REPORT_RETURN_ADVICE = 5\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      // const diagnosis = data.diagnosis || []\n      // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    console.log({ value, field, search })\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchMessage(typeof data.message === 'string' ? data.message : data.message.error.message || '')\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getMemberContractUrl = args => CustomerCareServices.getMemberContractUrl(args)\n\n  const getClientContractUrl = args => CustomerCareServices.getClientContractUrl(args)\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_RETURN_ADVICE:\n          pdf = {\n            name: 'Return Advice',\n            fileName: 'return_advice',\n            service: ApiService.getReturnAdvice({ claimNo: claimNumber })\n          }\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          if (claim_type === 'Reimbursement') getReport(NOTICE)\n          else getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewReturnAdvice = ({ goBack = false }) => {\n    getReport(REPORT_RETURN_ADVICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, type = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, type })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, type }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let validate\n    if (type) validate = validator(Object.keys(field || claim))({ ...data }, true)\n    else validate = validator(Object.keys(field || claim))({ ...data })\n\n    const { error = {} } = validate\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          memberFetchMessage={memberFetchMessage}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getMemberContractUrl={getMemberContractUrl}\n          getClientContractUrl={getClientContractUrl}\n          getReason={getReason}\n          getRooms={getRooms}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewReturnAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setBatches({ data: openBatches, count: openBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Typography\n                      id={`encode-batch-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnEncode(item.batch_number)}\n                    >\n                      Encode\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const myBatches = batchResponse.data.data.results\n        const myBatchCount = batchCountResponse.data.data\n        setBatches({ data: myBatches, count: myBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const completedBatches = batchResponse.data.data.results\n        const completedBatchCount = batchCountResponse.data.data\n        setBatches({ data: completedBatches, count: completedBatchCount })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n                id={`${row.claim_number}-${index}`}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${SafeAccess(row, 'member.first_name', '')} ${SafeAccess(row, 'member.last_name', '')}`}\n                </TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestion, setSuggestion } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              console.log(error)\n              LoadingService.loading(false)\n            }\n          }\n\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestion({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestion({\n          field: 'contract',\n          suggestion: [{ from, to }]\n          // suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={onChangeDescription}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              field={'code'}\n              loading={fetching['code']}\n              onChange={onChangeCode}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestion,\n  setSuggestion,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={(value, search) =>\n                  handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                }\n                onChangeDescription={(value, search) =>\n                  handleOnChangeIcd10({ field: 'description', index, value, search })\n                }\n                onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n                fetching={fetching[index]}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions}\n              field={'description'}\n              onChange={(value, search) => onChangeDescription(value, search)}\n              loading={fetching['description']}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions}\n            field={'code'}\n            onChange={(value, search) => onChangeCode(value, search)}\n            loading={fetching['code']}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [errorss, setErrors] = React.useState({})\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      // setErrors({})\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions}\n              field={'name'}\n              onChange={onChangeName}\n              loading={fetching.name}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            field={'item_code'}\n            onChange={onChangeCode}\n            loading={fetching.item_code}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n              onChangeCode={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n              fetching={fetching}\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    doctor_id: false,\n    doctor_name: false,\n    description: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestion, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestion({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestion } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestion } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='return'\n          className='button-positive'\n          onClick={() => !doValidateMiddleware() && setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-and-close'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const { doValidateAll, onSave, doValidateProcedure, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setDentalProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setDentalProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>APE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>ECU Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              // reqApprovalCode\n              // reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={((value, search) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  )}\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={((value, search) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  )}\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [isModified, setIsModified] = React.useState(false)\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [showSaveAlert, setShowSaveAlert] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = () => {\n    if (!isModified && items.length > 0) doViewClaimNotice({ goBack: false })\n    else setShowSaveAlert(true)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickCancel={handleOnClickCancel}\n                  handleOnClickSave={handleOnClickSave}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive' onClick={handleOnClickPrintNotice}>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={showSaveAlert}\n        message='These records have been updated. Please save this Claim before proceeding with \"Print Notice\".'\n        okLabel='Okay'\n        onOk={() => {\n          setShowSaveAlert(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              {!readOnly && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='cancel'\n                    className='button-negative'\n                    onClick={() => handleOnClickCancel(index)}\n                  >\n                    Cancel\n                  </Button>\n                  {index === 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickSave}\n                      >\n                        Save\n                      </Button>\n                    </React.Fragment>\n                  )}\n                  {index !== 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickUpdate}\n                      >\n                        Update\n                      </Button>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\nconst URL = process.env.REACT_APP_SERVER_API\n// const UPLOADS = 'uploads/test'\n// const mock_data = [\n//   { fileName: 'Sample Contract', fileType: 'PDF', data: `${URL}/${UPLOADS}/Sample Contract.pdf` },\n//   { fileName: 'PDF', fileType: 'PDF', data: `${URL}/${UPLOADS}/pdf.pdf` },\n//   { fileName: 'PNG', fileType: 'PNG', data: `${URL}/${UPLOADS}/png.png` },\n//   { fileName: 'JPG', fileType: 'JPG', data: `${URL}/${UPLOADS}/jpg.jpg` },\n//   { fileName: 'DOC', fileType: 'DOC', data: `${URL}/${UPLOADS}/doc.doc` },\n//   { fileName: 'DOCX', fileType: 'DOCX', data: `${URL}/${UPLOADS}/docx.docx` },\n//   { fileName: 'XLSX', fileType: 'XLSX', data: `${URL}/${UPLOADS}/xlsx.xlsx` },\n//   { fileName: 'MP4', fileType: 'MP4', data: `${URL}/${UPLOADS}/mp4.mp4` }\n// ]\n\nexport default function UploadedList (props) {\n  const { onItemClick = () => {}, field = {} } = props\n  const [uploads, setUploads] = React.useState([])\n\n  React.useEffect(() => {\n    const { index, value } = field\n    ClaimsServices.getUploads({ where: { [index]: value } }).then(res => {\n      const { data } = res.data\n      const _data = data.map(i => ({\n        fileName: i.file_name,\n        fileType: i.file_type,\n        data: `${URL}/uploads/${i.path}`\n        // data: `${URL}/uploads/${i.path}?token=${localStorage.getItem('token') || ''}`\n      }))\n      setUploads(_data)\n    })\n  }, [])\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']}>\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {uploads.length ? uploads.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() =>\n                      onItemClick({\n                        title: item.fileName,\n                        fileName: item.fileName,\n                        fileType: item.fileType.toLowerCase(),\n                        data: item.data\n                      })\n                    }\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            )) : (\n              <TableRow>\n                <TableCell className={classes.handling} colSpan={3}>\n                No files found\n                </TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// https://github.com/plangrid/react-file-viewer\nimport ReactFileViewer from 'react-file-viewer'\n\nimport { fromUrl } from 'Services/Download'\n\n// Styles\nimport classes from './FileViewer.module.scss'\n\nexport default function FileViewer (props) {\n  // Variables\n  const { show = false, title = '', fileName = '', fileType = '', url = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose = () => {} } = props\n  // Local Variables\n\n  const handleDownload = () => {\n    fromUrl({ fileName: fileName, content: url, extension: fileType })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      fullWidth\n      maxWidth='lg'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle className={classes['header-container']} disableTypography>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleDownload}>\n            <CloudDownloadIcon />\n          </IconButton>\n\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <ReactFileViewer\n          fileName={fileName}\n          fileType={fileType}\n          filePath={url}\n          errorComponent={props => <Typography> Unsupported File Type</Typography>}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\nimport FileViewer from 'SharedComponents/FileViewer/FileViewer'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    apiService,\n    doViewClaimNotice = () => {}\n  } = props\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  const [viewFile, setViewFile] = React.useState({\n    show: false,\n    title: 'File Preview',\n    fileName: '',\n    fileType: '',\n    data: ''\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0] ? data[0].rooms : []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    } else initDefault()\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'id'}\n                    loading={fetching['doctor_id']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'full_name'}\n                    loading={fetching['doctor_name']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    disabled={disableControls}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_name']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n              <UploadedList\n                field={{ index: 'tags.properties.claim_number', value: props.match.params ? props.match.params._claimNumber : '' }}\n                onItemClick={data => setViewFile(state => ({ ...state, ...data, show: true }))}\n              />\n              <FileViewer\n                url={viewFile.data}\n                show={viewFile.show}\n                title={viewFile.title}\n                fileName={viewFile.fileName}\n                fileType={viewFile.fileType}\n                onClose={() => setViewFile(state => ({ ...state, show: false }))}\n              />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            isAdd={props.isAdd}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  // addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro,\n  setDropDown\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  // Line Item Form Store\n  const _dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const _procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const _hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const _professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        // const { diagnosis = [] } = data\n        // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* need to refector if to add addt'l default\n  //* this only support facility\n  const initDefault = () => {\n    apiService.getBatch({ batch_number: props.match.params._batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimFacility({ facility_id: data.facility.id, facility_name: data.facility.name }))\n      apiService.lookups({\n        on: 'medical-partner',\n        params: { query: data.facility.id, by: 'id' }})\n        .then(response => {\n          const [facility] = response.data.data\n          const rooms = (facility.rooms || []).map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate || 0\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Return Advice\n  const handleOnViewReturnAdvice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Return Advice',\n      fileName: 'return_advice',\n      service: apiService.getReturnAdvice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (_procedure.show || _dentalProcedure.show) {\n      const error = flag\n        ? doValidateDentalProcedure({ data: _dentalProcedure.details, index: _dentalProcedure.index, flag })\n        : doValidateProcedure({ data: _procedure.details, index: _procedure.index })\n      if (Object.keys(error).length > 0) {\n        procedure = { ...error }\n        if (flag) {\n          dispatch(\n            setDentalProcedure({\n              show: true,\n              mode: 'add',\n              index: _dentalProcedure.index,\n              details: _dentalProcedure.details\n            })\n          )\n        } else {\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'add',\n              index: _procedure.index,\n              details: _procedure.details\n            })\n          )\n        }\n      }\n    } else if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = flag\n          ? doValidateDentalProcedure({ data: value, index, flag })\n          : doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          const params = { show: true, mode: 'edit', index, details: value }\n          flag ? dispatch(setDentalProcedure(params)) : dispatch(setProcedure(params))\n          break\n        }\n      }\n    }\n\n    if (_hospitalItem.show) {\n      const error = doValidateHospitalItem({ data: _hospitalItem.details, index: _hospitalItem.index, flag })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { ...error }\n        const params = { show: true, mode: 'add', index: _hospitalItem.index, details: _hospitalItem.details }\n        dispatch(setHospitalItem(params))\n      }\n    } else if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    if (_professionalFee.show) {\n      const error = doValidateProfessionalFee({ data: _professionalFee.details, index: _professionalFee.index, flag })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { ...error }\n        const params = { show: true, mode: 'add', index: _professionalFee.index, details: _professionalFee.details }\n        dispatch(setProfessionalFee(params))\n      }\n    } else if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code ? `${data.code}` : '',\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, show: true, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, goBack = true }) => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return\n    }\n\n    LoadingService.loading(true)\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    if (props.isAdd) {\n      apiService.addClaim({ batch_number: _batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewReturnAdvice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          initDefault={initDefault}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    setFetching(true)\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/assigned/${item.id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({\n                        ...p,\n                        filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } }\n                      }))\n                      handleOnSearch({\n                        filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } },\n                        page: 1\n                      })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n            <TableRow key={index}>\n              {selectStatus ? (\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    checked={row.checked}\n                    color='default'\n                    onClick={event => handleItemSelect({ index, batch })}\n                  />\n                </TableCell>\n              ) : null}\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell align='center' id={`total-rcs-${index}`}>\n                {row.total_rcs}\n              </TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='fa-claim-no'>Claim No.</TableCell>\n                <TableCell id='fa-due-date'>Due Date</TableCell>\n                <TableCell id='fa-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.open.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Typography\n                      id={`analyze-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnAnalyze(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='mc-claim-no'>Claim No.</TableCell>\n                <TableCell id='mc-due-date'>Due Date</TableCell>\n                <TableCell id='mc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.my.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   handleClickSubmitted(event, claim)\n  // }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='sc-claim-no'>Claim No.</TableCell>\n                <TableCell id='sc-due-date'>Due Date</TableCell>\n                <TableCell id='sc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.submitted.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      id={`print${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={e => handleClickSubmitted(e, item)}\n                    >\n                      <Print />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <IconButton\n                  id={`print${index}`}\n                  aria-label='more'\n                  aria-controls='long-menu'\n                  aria-haspopup='true'\n                  onClick={e => handleClickSubmitted(e, item)}\n                >\n                  <Print />\n                </IconButton>\n              </TableCell>\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   props.history.push(`/claims/${claim_number}/analyze`)\n  // }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='re-claim-no'>Claim No.</TableCell>\n                <TableCell id='re-due-date'>Due Date</TableCell>\n                <TableCell id='re-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.escalated.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`re-update-claim-${index}`}>\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                  </Typography>\n                </Link>\n                {/* } */}\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/utilization-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetching}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from '../instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  {\n    id: 'pending-batch-no',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Batch No.',\n    align: 'left',\n    data: data => data.batch_number\n  },\n  {\n    id: 'pending-claim-type',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Claim Type',\n    align: 'center',\n    data: data => data.type\n  },\n  {\n    id: 'pending-total-rcs',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Total No. of RCS',\n    align: 'center',\n    data: data => `${data.claims.length} / ${data.total_rcs}`\n  },\n  {\n    id: 'pending-billed-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Billed Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.total_amount)\n  },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.discount_amount)\n  },\n  {\n    id: 'pending-discount-rate',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Discount Rate',\n    align: 'right',\n    data: data => `${data.discount_rate}%`\n  },\n  {\n    id: 'pending-pr-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'PR Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.pr_amount)\n  }\n]\nconst submittedHeadCells = pendingHeadCells.map(c => ({ ...c, id: c.id.replace('pending-') }))\n// TODO remove if new is same as this\n// const submittedHeadCells = [\n//   { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n//   { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n//   { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n//   { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n//   {\n//     id: 'submitted-discount-amount',\n//     numeric: true,\n//     center: false,\n//     disablePadding: false,\n//     label: 'Hospital Discount Amount'\n//   }\n// ]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [prRemarks, setPrRemarks] = React.useState('')\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0),\n      discount_rate: i.claims.reduce((acc, claim) => acc + claim.discount_rate, 0),\n      pr_amount: i.claims.reduce((acc, claim) => acc + claim.pr_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n    const discount_amount = data.reduce((acc, batch) => acc + batch.discount_amount, 0)\n    const pr_amount = data.reduce((acc, batch) => acc + batch.pr_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          discount_amount,\n          pr_amount\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n\n      async function submitBatches () {\n        for (let select of selected) {\n          const claims = select.claims.map(claim => {\n            return claim.claim_number\n          })\n\n          let submitPromise = new Promise(function (resolve, reject) {\n            PaymentRequestServices.submit({ bundle_number, data: { claims, remarks: prRemarks } })\n              .then(({ data: res }) => {\n                const data = batches.pending.data.filter((i, index) => {\n                  let should_include = true\n                  for (let s of selected) {\n                    if (s.index === index) {\n                      should_include = false\n                      break\n                    }\n                  }\n                  if (should_include) return i\n                })\n                resetBatches({ type: 'pending', data, bundle })\n                resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n                setPrRemarks('')\n                PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n                  const { data } = res\n                  setBundle(data)\n                  getBatches({ bundle_number, bundle: data })\n                })\n                LoadingService.loading(false)\n                resolve()\n              })\n              .catch(err => {\n                reject(err)\n              })\n          })\n          await submitPromise\n        }\n      }\n      submitBatches()\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.discount_amount\n                )}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => (\n                  <TableRow\n                    onClick={event => handleClick({ index, batches: 'pending' })}\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                    </TableCell>\n                    {pendingHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                  // return (\n                  //   <TableRow\n                  //     onClick={event => handleClick({ index, batches: 'pending' })}\n                  //     role='checkbox'\n                  //     tabIndex={-1}\n                  //     key={`${batch.batch_number}-${index}`}\n                  //   >\n                  //     <TableCell padding='checkbox'>\n                  //       <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                  //     </TableCell>\n                  //     <TableCell align='left' id={`pending-batch-number-${index}`}>\n                  //       {batch.batch_number}\n                  //     </TableCell>\n                  //     <TableCell align='center' id={`pending-claim-type-${index}`}>\n                  //       {batch.type}\n                  //     </TableCell>\n                  //     <TableCell\n                  //       align='center'\n                  //       id={`pending-total-rcs-${index}`}\n                  //     >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                  //     <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.total_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.discount_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-rate-${index}`}>\n                  //       {`${batch.discount_rate}%`}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-pr-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.pr_amount)}\n                  //     </TableCell>\n                  //   </TableRow>\n                  // ) */}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField\n                  multiline\n                  rows={8}\n                  id='pr-remarks'\n                  value={prRemarks}\n                  readOnly={false}\n                  onChange={event => setPrRemarks(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className={classes.buttonWrapper}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={handleOnCancel}\n                id='cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={handleOnSubmit}\n                id='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => (\n                  <TableRow\n                    // hover\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    {submittedHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })} */}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField multiline rows={8} id='saved-pr-remarks' value={bundle.remarks} disabled />\n              </div>\n            </div>\n            <div />\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()])\n      .then(values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest({ limit: 10, sort: '' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>PR Processor</TableCell>\n                <TableCell>Total Bundle/SOA</TableCell>\n                <TableCell>Total Batches</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                  <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-requests/${item.id}/list`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from '../instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({ claim_number, data }) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        const { field, value, match } = args\n        setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    rejected: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED', addtl_cond: { 'latest.__type': { $ne: 'Reimbursement' } } })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, rejected: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.rejected['count'], id: 'rejected-claim-count' }}\n        sizes={sizes}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.rejected.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const getSubordinates = params => {\n    setFetching(true)\n    setFetchingViewList(true)\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n      .finally(value => {\n        setFetching(false)\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={sizes}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {verifiers.data &&\n                verifiers.data.map((item, index) => (\n                  <TableRow key={`verifier-list-item-${index}`}>\n                    <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                    <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                    <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                    <TableCell id={`cv-view-user-${index}`}>\n                      <Typography\n                        id={`view-user-${index}`}\n                        variant='caption'\n                        className={`text-link underline`}\n                        onClick={handleOnReviewUser(item.id)}\n                      >\n                        View\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter,\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={sizes}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const claims = claimResponse.data.data.results\n        const claimsCount = claimCountResponse.data.data\n        setClaims({ data: claims, count: claimsCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetching(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={sizes}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`fa-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`fa-view-claim-${index}`}>\n                    <Link to={`/claims/for-approval/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={sizes}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`mc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  {/* added cond on client to support old data */}\n                  <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                  <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                  <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`mc-view-claim-${index}`}>\n                    <Link to={`/claims/review/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member.name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const { results } = claimResponse.data.data\n        setClaims(prevState => ({\n          ...prevState,\n          data: results,\n          count: claimCountResponse.data.data\n        }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({ category: viewList.category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={sizes}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`rmc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={`rmc-claim-list-${index}`}>\n                  <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                  <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name || ''} ${item.member.last_name}`}</TableCell>\n                  <TableCell id={`rmc-view-claim-${index}`}>\n                    <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name || ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (args) {\n    const { bundle_number, batch_number, params } = args\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n\n    ApiService.getBatch({ bundle_number, batch_number }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n    })\n    console.log('without')\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getClaimsAndCount({ batch_number, bundle_number })\n    })\n  }\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, bundle_number }) => {\n    ApiService.getApprovedClaims({\n      bundle_number,\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaim(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n        LoadingService.loading(false)\n      })\n  }\n\n  React.useEffect(() => {\n    const { batch_number, bundle_number } = props.match.params\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} inputChange={handleSearchChange} />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// timefield lib\nimport TimeField from 'react-advanced-timefield'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/Claims/ClaimsMaintainerServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Constants\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' },\n  handling_timi_kpi: { on: 'handling-time-kpi', field: 'handling-time-kpi' }\n}\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {\n    description: { value: '' },\n    status: { value: '' },\n    section: { value: '' },\n    claim_type: { value: '' },\n    handling_time_formatted: { value: '' }\n  }\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false,\n  claim_type: '',\n  section: '',\n  handling_time: ''\n}\n\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nlet kpi_columns = [\n  { name: 'Section', sortField: 'section', id: 'section', match: 'any' },\n  { name: 'Claim Type', sortField: 'claim_type', id: 'description', match: 'any' },\n  { name: 'Handling Time', sortField: 'handling_time_formatted', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [section, setSection] = React.useState([])\n\n  const [index, setindex] = React.useState()\n\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n    ClaimsServices.lookupsAll({ category: 'section' }).then(res => {\n      const { data = [] } = res.data\n      const _data = data.map(c => ({ text: c.name, value: c.name }))\n      setSection(_data)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: { ...data, field: lookup.field } }).then(\n      ({ data: res }) => {\n        const { results, count } = res.data\n        setData(state => ({ ...state, data: results, count }))\n        setFetching(false)\n      }\n    )\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return lookup && lookup.field && args === lookup.field ? 'active' : ''\n  }\n\n  const onClickHospitalItem = () => {\n    setFetching(true)\n    setLookup(lookups.hospital_items)\n    setData({\n      ...data,\n      header: 'Hospital Item List',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n  const onClickNotCoveredReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_covered)\n    setData({\n      ...data,\n      header: 'Not Covered Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickChargingReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_charging)\n    setData({\n      ...data,\n      header: 'Reasons For Charging Member',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSource = () => {\n    setFetching(true)\n    setLookup(lookups.claims_source)\n    setData({\n      ...data,\n      header: 'Claim Source',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickReturnReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_return)\n    setData({\n      ...data,\n      header: 'Reimbursement Return Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickRejectReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_reject)\n    setData({\n      ...data,\n      header: 'Reimbursement Reject Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickHandlingTimeKpi = () => {\n    setFetching(true)\n    setLookup(lookups.handling_timi_kpi)\n    setData({\n      ...data,\n      count: 0,\n      header: 'Handling Time KPI',\n      filter: {\n        ...data.filter,\n        section: { value: '' },\n        claim_type: { value: '' },\n        handling_time: { value: '' },\n        status: { value: '' }\n      }\n    })\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const validate = () => {\n    if (lookup.field !== 'handling-time-kpi') return !item.description.trim()\n    else return !item.handling_time || item.handling_time === '00:00:00' || !item.section || !item.claim_type\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    let _search = {}\n\n    if (!(lookup.field === 'handling-time-kpi')) {\n      _search = {\n        description: item.description,\n        code: item.code\n      }\n    } else {\n      if (showAddItem.mode === 'add') {\n        _search = {\n          section: item.section,\n          claim_type: item.claim_type\n        }\n      } else {\n        const { section, claim_type, status, handling_time } = data.data[index]\n\n        switch (true) {\n          case section === item.section && claim_type === item.claim_type && status !== item.status:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.status\n            }\n            break\n          case section === item.section && claim_type === item.claim_type && handling_time !== item.handling_time:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.handling_time\n            }\n            break\n          default:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type\n            }\n        }\n      }\n    }\n\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: _search,\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (validate()) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Description details is empty. Please input the description details.',\n        onOk: handleOnOk,\n        okLabel: 'Okay',\n        cancelLabel: ''\n      }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state => ({\n            ...state,\n            open: true,\n            message: 'Description details already exists. Please change the description details encoded.',\n            onOk: handleOnOk,\n            okLabel: 'Okay',\n            cancelLabel: ''\n          }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(\n              res => {\n                setItem(initialItem)\n                setLookup(false)\n                setLookup(initialLookup)\n                setShowAddItem({ ...showAddItem, show: false })\n                LoadingService.loading(false)\n              }\n            )\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({\n              on: lookup.on,\n              data: item,\n              code: item.code,\n              params: { field: lookup.field }\n            }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({ ...showAddItem, show: false })\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = (field = '', item) => {\n    if (field === 'kpi') {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        section: item.section,\n        claim_type: item.claim_type,\n        handling_time: item.handling_time,\n        code: item._id,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    } else {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        description: item.description,\n        code: item.code,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    }\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description || item.section || item.claim_type || item.handling_time) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Are you sure you want to discard your changes?',\n        onOk: () => {\n          setShowAlert(alert => ({ ...alert, open: false }))\n          setShowAddItem(show => ({ ...show, show: false }))\n          setItem(item => ({ ...item, description: '', section: '', claim_type: '', handling_time: '' }))\n        },\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }))\n    } else {\n      setShowAddItem({ ...showAddItem, show: false })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='hospital-item-list'\n          className={`button-positive ${classes[isActive('hospital-item-list')]}`}\n          onClick={onClickHospitalItem}\n        >\n          Hospital Item List\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='not-covered-reason'\n          className={`button-positive ${classes[isActive('covered-reason')]}`}\n          onClick={onClickNotCoveredReason}\n        >\n          Not Covered Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reason-for-charging'\n          className={`button-positive ${classes[isActive('charging-reason')]}`}\n          onClick={onClickChargingReason}\n        >\n          Reason for Charging Member\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('claims-source')]}`}\n          onClick={onClickClaimSource}\n        >\n          Claim Source\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('handling-time-kpi')]}`}\n          onClick={onClickHandlingTimeKpi}\n        >\n          Handling Time KPI\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-return-reason'\n          className={`button-positive ${classes[isActive('return-reason')]}`}\n          onClick={onClickReturnReason}\n        >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-reject-reason'\n          className={`button-positive ${classes[isActive('reject-reason')]}`}\n          onClick={onClickRejectReason}\n        >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-type')]}`}\n          onClick={onClickClaimSubType}\n        >\n          Claim Sub-Type\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`}\n          onClick={onClickClaimSubSubType}\n        >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button\n            disabled={showAddItem.show}\n            variant='contained'\n            color='primary'\n            id='add-item'\n            className='button-positive'\n            onClick={() => setShowAddItem({ ...showAddItem, show: true, mode: 'add' })}\n          >\n            + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && (\n        <div className={classes['add-item-root']}>\n          {!(lookup.field === 'handling-time-kpi') ? (\n            <div className={classes.wrapper}>\n              <span className={classes['header-text']}>Description:</span>\n              <div className={classes['text-wrapper']}>\n                <TextField\n                  id={'description-field'}\n                  value={item.description}\n                  onChange={event => {\n                    setItem({ ...item, description: event.target.value })\n                  }}\n                />\n              </div>\n              <div className={classes['radio-buttons']}>\n                <div className={classes.activate}>\n                  Active:\n                  <Radio\n                    color='primary'\n                    id={'activate'}\n                    checked={item.active}\n                    onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                  />\n                </div>\n                <div className={classes.deactivate}>\n                  Deactivate:\n                  <Radio\n                    color='primary'\n                    id={'deactivate'}\n                    checked={item.deactivate}\n                    onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                  />\n                </div>\n              </div>\n              <div className={classes['button-wrapper']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className={classes.wrapper}>\n                <span className={classes['header-text']}>Section:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='section'\n                    items={section}\n                    value={item.section || ''}\n                    onChange={event => setItem(state => ({ ...state, section: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Claim Type:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='claim-type'\n                    items={claim_types}\n                    value={item.claim_type || ''}\n                    onChange={event => setItem(state => ({ ...state, claim_type: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Handling Time:</span>\n                {/* Trial - feel free to change this time input */}\n                <div className={classes['text-wrapper']}>\n                  <TimeField\n                    id={'description-field'}\n                    value={item.handling_time}\n                    input={<TextField TextFieldStyle={{ padding: '3.5px' }} />}\n                    showSeconds\n                    onChange={(event, time) => setItem(state => ({ ...state, handling_time: time }))}\n                  />\n                </div>\n                <div className={classes['radio-buttons']}>\n                  <div className={classes.activate}>\n                    Active:\n                    <Radio\n                      color='primary'\n                      id={'activate'}\n                      checked={item.active}\n                      onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                    />\n                  </div>\n                  <div className={classes.deactivate}>\n                    Deactivate:\n                    <Radio\n                      color='primary'\n                      id={'deactivate'}\n                      checked={item.deactivate}\n                      onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={classes['button-wrapper-kpi']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {!showAddItem.show && (\n        <div className={classes.table}>\n          <LoadingIndicator loading={fetching}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <React.Fragment>\n                  <TableRow>\n                    {!(lookup.field === 'handling-time-kpi')\n                      ? columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))\n                      : kpi_columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))}\n\n                    <TableCell key={'action'} id={`sort-action`} />\n                  </TableRow>\n                </React.Fragment>\n              }\n              body={\n                data &&\n                data.data.map((item, index) =>\n                  !(lookup.field === 'handling-time-kpi') ? (\n                    <TableRow key={index}>\n                      <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => handleOnEditItem('desc', item)}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <TableRow key={index}>\n                      <TableCell id={`item-section-${index}`}>{item.section}</TableCell>\n                      <TableCell id={`item-claim_type-${index}`}>{item.claim_type}</TableCell>\n                      <TableCell id={`item-handling_time-${index}`}>{item.handling_time_formatted}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => {\n                            handleOnEditItem('kpi', item)\n                            setindex(index)\n                          }}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                )\n              }\n              count={data && data.count}\n              page={data && data.page}\n              limit={data && data.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnChange}\n            />\n          </LoadingIndicator>\n        </div>\n      )}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({ ...alert, open: false }))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport classes from './AutoCompletes.module.scss'\n\nimport AutoCompleteCurrent from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete2 from '../../Components/AutoComplete2/AutoComplete2'\n\nexport default function AutoCompletes (props) {\n  const { storage, errors, debounce, suggestion } = props\n  const { setErrors, onChange, setDebounce, setSuggestion } = props\n  const { service } = props\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    setSuggestion(state => ({ ...state, facilities: [] }))\n    clearTimeout(debounce.facility)\n    setFetching(true)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, facilities: data }))\n            })\n            .finally(() => {\n              setFetching(false)\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // const handleOnChangeAutosuggest = ({ value, field, search }) => {\n  //   setSuggestion(state => ({ ...state, facilities: [] }))\n  //   onChange({ value: value, field })\n\n  //   if (isSuggestionClick) {\n  //     for (let i of suggestion.facilities) {\n  //       if (value === i.id || value === i.name) {\n  //         onChange({ value: i.id, field: 'facility_id' })\n  //         onChange({ value: i.name, field: 'facility_name' })\n  //         return i.rooms\n  //       }\n  //     }\n  //   } else {\n  //     const { 1: by } = field.split('_')\n  //     getFacilitySuggestions({ value, by })\n  //   }\n  // }\n\n  const handleOnChangeAutosuggest2 = ({ value, field, search }) => {\n    if (search) {\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n      onChange({ value, field })\n    } else {\n      const _value = value || {}\n      console.log('AutoSuggest selected value', _value)\n      onChange({ value: _value.id, field: 'facility_id' })\n      onChange({ value: _value.name, field: 'facility_name' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        {/* <div className={classes.input}>\n          <AutoCompleteCurrent\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            label={'Medical Partner ID using Current'}\n            suggestions={suggestion.facilities}\n            value={storage.facility_id}\n          />\n        </div> */}\n        <div className={classes.input}>\n          <AutoComplete2\n            onChange={(value, search) => handleOnChangeAutosuggest2({ field: 'facility_id', value, search })}\n            label={'Medical Partner ID using AutoComplete2'}\n            suggestions={suggestion.facilities}\n            field={'id'}\n            loading={fetching}\n            value={storage.facility_id}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport DatePicker from '../../Components/DatePicker2/DatePicker2'\nimport DatePickerCurrent from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from '../../Validations/DateValidator'\n\nimport classes from './DatePickers.module.scss'\n\nexport default function DatePickers (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='Beta'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <Typography>{DateFormatter(storage.date_from)}</Typography>\n        </div>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst mozillaPdfViewer = 'https://mozilla.github.io/pdf.js/web/viewer.html'\n// const mozillaPdfViewer = 'pdfs'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfView2Component = props => {\n  // Variables\n  const { name, fileName, initialPageNumber = 1, initialScale, enabled } = props\n  // Service\n  const { service } = props\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [searchText, setSearchText] = React.useState('')\n\n  React.useEffect(() => {\n    setFile()\n    setPageNumber(initialPageNumber)\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  const handleOnSearch = event => {\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        console.log('heelo')\n        setSearchText(search)\n      }, 500)\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography id={'pdf-preview-title'} className={classes['file-name']} align='left'>\n          {name}\n        </Typography>\n        <Tooltip title='Search text'>\n          <span>\n            <div className={classes.search}>\n              <SearchTextComponent onChange={handleOnSearch} />\n            </div>\n          </span>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-previous'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber > 1 ? pageNumber - 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                console.log(elem)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-next'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber < numPages ? pageNumber + 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton id={'pdf-preview-zoom-in'} onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.viewport}>\n        <div className={classes.pdf}>\n          <Document\n            file={file}\n            onLoadSuccess={({ numPages }) => {\n              setNumPages(numPages)\n            }}\n          >\n            {[...Array(numPages)]\n              .map((value, index) => index + 1)\n              .map((value, index) => (\n                <div className={classes.page} id={`pdf-page-${value}`} key={`pdf-page-${value}`}>\n                  <Page\n                    pageNumber={value}\n                    scale={scale}\n                    renderMode={'canvas'}\n                    customTextRenderer={textItem =>\n                      textItem.str\n                        .split(searchText)\n                        .reduce(\n                          (strArray, currentValue, currentIndex) =>\n                            currentIndex === 0\n                              ? [...strArray, currentValue]\n                              : [...strArray, <mark key={currentIndex}>{searchText}</mark>, currentValue],\n                          []\n                        )\n                    }\n                  />\n                </div>\n              ))}\n          </Document>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MozillaPdf = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data], { type: 'application/pdf' })\n        const blobUrl = URL.createObjectURL(_blob)\n        const _url = encodeURIComponent(blobUrl)\n\n        // const pdfArray = convertDataURIToBinary('data:application/pdf;base64, ' + _blob)\n\n        // const PdfViewer = document.getElementById('pdfViewer')\n        // if (PdfViewer) {\n        //   PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n        //   setUrl(_url)\n        // }\n\n        blobToBase64(_blob).then(data => {\n          const pdfAsDataUri = 'data:application/pdf;base64,' + data\n          const pdfArray = convertDataURIToBinary(pdfAsDataUri)\n          setUrl(pdfAsDataUri)\n          console.log(pdfAsDataUri)\n          const PdfViewer = document.getElementById('pdfViewer')\n          if (PdfViewer) {\n            PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n            setUrl(_url)\n          }\n        })\n      })\n    }\n  }, [service])\n\n  const convertDataURIToBinary = blob => {\n    const BASE64_MARKER = ';base64,'\n    var base64Index = blob.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n    var base64 = blob.substring(base64Index)\n    var raw = window.atob(base64)\n    var rawLength = raw.length\n    var array = new Uint8Array(new ArrayBuffer(rawLength))\n\n    for (var i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i)\n    }\n    return array\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe\n          // id={'pdf-viewer'}\n          className={classes.iframe}\n          src={`${mozillaPdfViewer}`}\n          width='100%'\n          height='100%'\n        />\n      )}\n    </div>\n  )\n}\n\nconst MozillaPdfURL = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _url = encodeURIComponent(response)\n        setUrl(_url)\n        // }\n      })\n    }\n  }, [service])\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        // id={'pdf-viewer'}\n        className={classes.iframe}\n        src={`${mozillaPdfViewer}?file=${url}`}\n        width='100%'\n        height='100%'\n      />\n    </div>\n  )\n}\n\nconst PdfViewer2Modal = () => {\n  dispatch = useDispatch()\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n  }\n\n  return (\n    <Dialog id={'pdf-preview'} fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton id={'pdf-preview-close'} edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        {PdfView2Component({\n          name,\n          fileName,\n          initialPageNumber,\n          initialScale,\n          service,\n          enabled\n        })}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Service, PdfViewer2Modal, PdfView2Component, MozillaPdf, MozillaPdfURL }\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport Service from 'Services/Api/Claims/CustomerCareServices'\nimport { MozillaPdf, MozillaPdfURL } from '../../Components/PdfViewer2/PdfViewer2'\n\nimport classes from './PdfViewers.module.scss'\n\nexport default function PdfViewer (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const [mct, setMct] = React.useState('5e494813213ab37f5f550b44')\n\n  return (\n    <div className={classes.root}>\n      BASE64 * File limited\n      <MozillaPdf name={'test'} service={Service.getMemberContract({ mct_id: mct })} enabled />\n      URL\n      <MozillaPdfURL name={'test'} service={Service.getMemberContractUrl({ mct_id: mct })} enabled />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Utility\n\nimport classes from './ErrorProducers.module.scss'\n\nconst FaultyButton = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nconst FaultyOperation = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nexport default function ErrorProducers (props) {\n  const { storage, errors, notDefined } = props\n  const { setErrors, onChange } = props\n\n  const [boom, setBoom] = React.useState(false)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() => setBoom(true)}\n            id='save'\n          >\n            Throw Error\n          </Button>\n        </div>\n\n        {boom && (\n          <div className={classes.input}>\n            <FaultyButton />\n          </div>\n        )}\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={() => console.log(notDefined.test)}\n          id='save'\n        >\n          Call Undefined\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport AutoCompletes from './Sections/AutoCompletes/AutoCompletes'\nimport DatePickers from './Sections/DatePickers/DatePickers'\nimport PdfViewers from './Sections/PdfViewers/PdfViewers'\nimport ErrorProducers from './Sections/ErrorProducers/ErrorProducers'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n// import { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\n// const WrappedTextField = props => <ClaimsInputBase {...props} />\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: new Date()\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [toggle, setToggle] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    // BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const onChange = ({ value, field }) => {\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('auto-complete')}\n        >\n          Auto-Complete\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('date-picker')}\n        >\n          Date-Pickers\n        </Button>\n        <Button variant='contained' color='primary' className='button-positive' onClick={() => setToggle('pdf-viewer')}>\n          Pdf-Viewer\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('error-producer')}\n        >\n          Error-Producer\n        </Button>\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title}>\n          <Typography variant='h4'>{toggle.toUpperCase()}</Typography>\n        </div>\n        <div className={classes.wrapper}>\n          {toggle === 'auto-complete' && (\n            <AutoCompletes\n              service={ClaimsAdjudicationServices}\n              errors={errors}\n              storage={storage}\n              debounce={debounce}\n              suggestion={suggestion}\n              setErrors={setErrors}\n              onChange={onChange}\n              setStorage={setStorage}\n              setDebounce={setDebounce}\n              setSuggestion={setSuggestion}\n            />\n          )}\n\n          {toggle === 'date-picker' && (\n            <DatePickers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'pdf-viewer' && (\n            <PdfViewers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'error-producer' && <ErrorProducers errors={errors} storage={storage} setErrors={setErrors} />}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\nimport { dataValue } from 'Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader'\n\nconst initialState = {\n  doctor: [],\n  client: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'REMOVE_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { index, field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].filter((i, _index) => index !== _index)\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\n// const initialState = {\n//   pro: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   facility: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   doctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   anesthesiologist: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   pfDoctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   specialization: {\n//     description: [],\n//     data: []\n//   },\n//   hospitalItem: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   icd10: [],\n//   cpt: {\n//     description: [],\n//     code: [],\n//     data: []\n//   },\n//   contract: {\n//     years: []\n//   }\n// }\n\n// const icd10 = {\n//   given_diagnosis: [],\n//   description: [],\n//   code: [],\n//   data: []\n// }\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    // case 'SET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     let { field, suggestion } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: { ...initialState[field], ...suggestion }\n    //     }\n    //   })()\n\n    // case 'SET_SUGGESTION_ON_ARRAY':\n    //   return (() => {\n    //     let { field, index, by, suggestion, data } = action.payload\n\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           i = { ...i, [by]: suggestion, data }\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// import StackTrace from 'stacktrace-js'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\n// TEST Page\nimport Test from './Components/Test/Test'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n// window.onerror = function (msg, file, line, col, error) {\n//   StackTrace.fromError(error).then(err => {\n//     StackTrace.report(err, `${process.env.REACT_APP_SERVER_API}/c/c/error`, {\n//       type: 'window.onerror',\n//       url: window.location.href,\n//       userId: window.userId,\n//       agent: window.navigator.userAgent,\n//       date: new Date(),\n//       msg: msg\n//     })\n//   })\n// }\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          <Route path='/test' exact component={Test} />\n\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingIndicator_root__1QWbJ\",\"loading\":\"LoadingIndicator_loading__3Nv8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__11iKj\",\"label\":\"AutoComplete2_label__3pWjU\",\"wrapper\":\"AutoComplete2_wrapper__126-b\",\"read-only-value\":\"AutoComplete2_read-only-value__CcS5n\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3jz9Q\",\"form-control\":\"AutoComplete2_form-control__1SPaQ\",\"input\":\"AutoComplete2_input__1qyu3\",\"suggestions\":\"AutoComplete2_suggestions__33g20\",\"hint\":\"AutoComplete2_hint__1Dtzi\",\"focus\":\"AutoComplete2_focus__2pS9H\",\"has-error\":\"AutoComplete2_has-error__lIYZv\",\"error\":\"AutoComplete2_error__xx6tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1xO2P\",\"label\":\"DatePicker2_label__2TSn5\",\"wrapper\":\"DatePicker2_wrapper__1Zm8_\",\"read-only-value\":\"DatePicker2_read-only-value__2H1Jw\",\"text-field\":\"DatePicker2_text-field__a4Jqy\",\"no-margin\":\"DatePicker2_no-margin__2hfWg\",\"input\":\"DatePicker2_input__1BmqV\",\"date-button\":\"DatePicker2_date-button__3AEOq\",\"focus\":\"DatePicker2_focus__3d53X\",\"has-error\":\"DatePicker2_has-error__2wab-\",\"disabled\":\"DatePicker2_disabled__hHKql\",\"error\":\"DatePicker2_error__3f2g3\",\"date\":\"DatePicker2_date__3D12q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"table\":\"DataPairs_table__1nH2P\",\"header\":\"DataPairs_header__Bkti-\",\"pair\":\"DataPairs_pair__2QYar\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"typo\":\"ClaimsUtilLedgerReport_typo__2Javr\",\"disabled\":\"ClaimsUtilLedgerReport_disabled__z8zbA\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"hint\":\"AutoComplete_hint__1J8Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"auto\":\"UtilizationReport_auto__BN3cW\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"chart\":\"UtilizationReport_chart__11CVV\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"line-graph\":\"UtilizationReport_line-graph__3TWay\",\"container\":\"UtilizationReport_container__1tdjp\",\"line-container\":\"UtilizationReport_line-container__3vPZy\",\"item\":\"UtilizationReport_item__MLRbC\",\"line-details\":\"UtilizationReport_line-details__24PJo\",\"label\":\"UtilizationReport_label__1Bnmb\",\"color\":\"UtilizationReport_color__fO6V5\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"footer\":\"UtilizationReport_footer__Rz3yK\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"typo\":\"ReimbursementReport_typo__36kbp\",\"disabled\":\"ReimbursementReport_disabled__1QoJ6\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"handling\":\"ClaimsSummaryReport_handling__25OHB\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"received\":\"ProductivityPerformaceReport_received__3SdAJ\",\"processed\":\"ProductivityPerformaceReport_processed__2ECP_\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"count\":\"PerformanceReport_count__2u4Ue\",\"average\":\"PerformanceReport_average__sBrEV\",\"work\":\"PerformanceReport_work__1YnhR\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"disabled\":\"AgingPartialApprovedReport_disabled__24a81\",\"typo\":\"AgingPartialApprovedReport_typo__3ewzs\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"handling\":\"AgingPartialApprovedReport_handling__3jl7y\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"total15Days\":\"AgingPartialApprovedReport_total15Days__8bxW0\",\"total1Week\":\"AgingPartialApprovedReport_total1Week__SaR2_\",\"total1Month\":\"AgingPartialApprovedReport_total1Month__2zxDm\",\"totalAll\":\"AgingPartialApprovedReport_totalAll__1KEoW\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"disabled\":\"AgingReturnClaimReport_disabled__1aF_t\",\"typo\":\"AgingReturnClaimReport_typo__HVrxs\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"handling\":\"AgingReturnClaimReport_handling__KERnH\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"total15Days\":\"AgingReturnClaimReport_total15Days__3Dg8C\",\"total1Week\":\"AgingReturnClaimReport_total1Week__WroA2\",\"total1Month\":\"AgingReturnClaimReport_total1Month__2Z9vs\",\"totalAll\":\"AgingReturnClaimReport_totalAll__2LXXw\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1LMgs\",\"header\":\"UploadedList_header__2KeVk\",\"header-text\":\"UploadedList_header-text__2VqnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"packages\":\"ClaimAPE_packages__38JZk\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"packages\":\"ClaimECU_packages__1pncE\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1kTdz\",\"header\":\"UploadedList_header__-de1J\",\"header-text\":\"UploadedList_header-text__39rqd\",\"handling\":\"UploadedList_handling__1_Ulf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FileViewer_root__3eOTH\",\"header-container\":\"FileViewer_header-container__3MWL_\",\"header\":\"FileViewer_header__26RQA\",\"title\":\"FileViewer_title__2Ar9A\",\"content\":\"FileViewer_content__1Ozo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"group\":\"PaymentRequestPage_group__JBVfR\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\",\"button-wrapper-kpi\":\"MaintenancePage_button-wrapper-kpi__1hwlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoCompletes_root__GqW9d\",\"row\":\"AutoCompletes_row__hY4Cp\",\"input\":\"AutoCompletes_input__1JWqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__3Z4u_\",\"label\":\"AutoComplete2_label__1UMnf\",\"wrapper\":\"AutoComplete2_wrapper__mUNcc\",\"read-only-value\":\"AutoComplete2_read-only-value__1a9p_\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__37KBN\",\"form-control\":\"AutoComplete2_form-control__2AFVD\",\"input\":\"AutoComplete2_input__15dWt\",\"suggestions\":\"AutoComplete2_suggestions__1OFwm\",\"hint\":\"AutoComplete2_hint__3TRnC\",\"focus\":\"AutoComplete2_focus__3Xz7d\",\"has-error\":\"AutoComplete2_has-error__j-hAu\",\"error\":\"AutoComplete2_error__wPImV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__3pohK\",\"label\":\"DatePicker2_label__kClQ4\",\"wrapper\":\"DatePicker2_wrapper__3ICMR\",\"read-only-value\":\"DatePicker2_read-only-value__2DDSM\",\"text-field\":\"DatePicker2_text-field__Zdavd\",\"no-margin\":\"DatePicker2_no-margin__2ksyg\",\"input\":\"DatePicker2_input__vwvQ-\",\"date-button\":\"DatePicker2_date-button__2avzL\",\"focus\":\"DatePicker2_focus__7xrY-\",\"has-error\":\"DatePicker2_has-error__1Ccy6\",\"disabled\":\"DatePicker2_disabled__3cyux\",\"error\":\"DatePicker2_error__3iYWh\",\"date\":\"DatePicker2_date__3C5ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePickers_root__3JJHS\",\"row\":\"DatePickers_row__2lQ4O\",\"input\":\"DatePickers_input__3mJCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3Nbxo\",\"root\":\"PdfViewer2_root__OnpQ7\",\"controls\":\"PdfViewer2_controls__39uMf\",\"file-name\":\"PdfViewer2_file-name__1gGwZ\",\"search\":\"PdfViewer2_search__3kgG8\",\"control\":\"PdfViewer2_control__34TU3\",\"disabled\":\"PdfViewer2_disabled__Es9Vn\",\"text-field\":\"PdfViewer2_text-field__3xc6o\",\"viewport\":\"PdfViewer2_viewport__1dkcA\",\"pdf\":\"PdfViewer2_pdf__3uFCA\",\"page\":\"PdfViewer2_page__5EQuW\",\"page-number\":\"PdfViewer2_page-number__wuwZN\",\"iframe\":\"PdfViewer2_iframe__2wl51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewers_root__2i2A-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ErrorProducers_root__3mazu\",\"row\":\"ErrorProducers_row__2lI2A\",\"input\":\"ErrorProducers_input__-8Wlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__3x8F1\",\"sidebar\":\"Test_sidebar__p1pYj\",\"content\":\"Test_content__2tpHK\",\"title\":\"Test_title__8pTcD\",\"wrapper\":\"Test_wrapper__1mg0_\"};"],"sourceRoot":""}