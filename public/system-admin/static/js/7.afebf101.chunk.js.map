{"version":3,"sources":["../node_modules/@material-ui/icons/Lock.js","Pages/Account/ActionConsts.ts","Pages/Account/AccountActions.ts","Pages/Account/style.tsx","Pages/Account/Tabs/Account/ViewAccount.tsx","Pages/Account/Tabs/Account/EditAccount.tsx","Pages/Account/Tabs/Account/index.tsx","Pages/Account/accounts.const.ts","Pages/Account/index.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ActionConsts","ResetReducer","SetReducer","AccountActions","payload","type","accountsPageStyles","makeStyles","theme","mainContainer","padding","main","backgroundColor","position","headMain","gridContainer","spacing","paddingBottom","gridContainerNoPadding","sectionTitle","fontSize","fontWeight","color","subSectionTitle","editBtn","width","alignRight","textAlign","bodyContainer","minHeight","sideBarContainer","borderRight","paddingRight","paddingLeft","contentContainer","sideBarLists","margin","listStyle","sideBarLink","display","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","marginTop","marginBottom","border","borderRadius","justifyContent","alignItems","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","top","bottom","breakpoints","up","grow","flexGrow","button","minWidth","buttonTitle","buttonSubTitle","menuList","menuLink","LinkActive","textDecoration","userImage","dialog","dialogAction","dialogContentContainer","container","closeButton","right","palette","grey","dialogTitle","inputTextField","iconEye","labelNote","errorMessage","errorIcon","useStyles","label","opacity","linkAction","circle","background","marginRight","padlock","ViewAccount","props","classes","React","resetModalOpen","setResetModalOpen","resetSuccessModalOpen","setResetSuccessModalOpen","loading","setLoading","unlockModal","setUnlockModal","open","title","message","unlockModalProps","setUnlockModalProps","closeUnlockModalProps","closeUnlockModal","Grid","item","xs","Typography","className","userData","username","main_role","name","main_module","email","group","Link","onClick","hasOwnProperty","roles","length","map","i","keys","style","textTransform","status","reports_to","first_name","last_name","job_title","employee_id","effectivity_date","moment","format","expiry_date","middle_name","department","section","location","ModalComponent","isModalOpen","onClose","buttons","justify","Button","variant","resetPassword","then","response","console","log","unlockUser","_id","res","error","setUserData","catch","err","userAlignRight","input","saveButton","cancelAdd","errorLabel","linkUnlock","EditAccount","setMode","useState","departments","setDepartments","useEffect","fuse","assign","dataTmp","setDataTmp","getDepartments","choices","setModalProps","modalProps","onOkay","forEach","beauty","push","setSelectedPrimaries","setSelectedDepartment","undefined","setEffDate","setExpDate","setSelectedGroup","setSelectedSuperVisor","filter","getUserList","body","setUpserOption","user","getAllRoles","setRoleList","rolesList","rows","primaryRoleChoicesBeautifier","options","getAllGroups","data","setGroupList","choicesBeautifier","newChoices","c","isDefault","module","selectedRoles","r","findIndex","find","setSelectedOtherRoles","selectedPrimary","findIndex2","fetchUserOption","cb","a","where","like","dataChanges","searchResult","userOptionBeautifier","handleCommonFields","e","prop","target","setDataChanges","option","o","handleOnResetPassword","setUpdating","request","handleSubmit","validateEmail","validatingEmail","validationAlgorithm","setCModalProps","cModalProps","onSubmit","submitChanges","handleSubmitWithoutEmailValdiation","expDate","isSameOrBefore","toLowerCase","proceed","isSameOrAfter","group_roles","is_locked","needs_password_update","password","is_online","updateUserDetails","getLastSegment","submit","JSON","stringify","groupList","profile_pic","selectedGroup","seletedPrimaries","selectedDepartment","selectedSuperVisor","userOption","selectedOtherRoles","effDate","isUpdating","errorMessages","setErrorMessages","fieldValidation","setFieldValidation","regex","test","validEmail","setValidEmail","bodyRequest","optionalFields","valid","invalid","entries","payloadObject","includes","preValid","fromEntries","f","fetchUserRoles","primaryRoleChoicesBeautifierSearch","fetchUserOtherRoles","primaryRoleChoicesBeautifierSearchOther","tmpEmail","setValidatingEmail","setTmpEmail","LoadingIndicator","TextField","fullWidth","disabled","id","Dropdown","async","onChange","selected","fetchOption","placeholder","icon","isMulti","closeOnSelect","onBlur","InputProps","endAdornment","InputAdornment","CircularProgress","size","md","lg","defaultValue","toUpperCase","newValue","s","utils","MomentUtils","inputProps","inputVariant","invalidDateMessage","toISOString","minDate","clearable","isCreatable","__isNew__","FloatingFooter","constructor","MsgModal","AccountTab","mode","userIdDb","breadCrumbs","sideBarItems","root","formControl","maxWidth","chips","flexWrap","chip","selectedItems","selectedText","noLabel","preview","outline","centerDrop","centerDropLabels","marginLeft","whiteSpace","overflow","textOverflow","centerDropLabel","colro","editIconContainer","editIcon","imageDropzone","previewPhoto","modal","paper","cancelButton","inputLabel1","Account","classes2","fetchUser","getUserIdDb","setIsFetching","getUserDetails","setPhoto","setUserDetails","handleClose2","Utils","StorageService","setUserIdDb","result","closeUploadModal","setUploadModal","photo","uploadModal","isFetching","role","user_id","userDetails","activeSidebar","setActiveSidebar","accountMode","setAccountMode","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","List","ListItemText","faTimes","multiple","onDrop","event","method","handleAccountPhoto","getRootProps","getInputProps","faFileUpload","File","reader","FileReader","readAsDataURL","onload","split","SubHeader","headingTitle","breadCrumbsArray","pageConst","buttonFunc","buttonName","layoutType","enableButton","IconButton","edge","Avatar","src","alt","SideMenu","items","activeItems","mapStateToProps","state","users","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/7.afebf101.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\n\nexports.default = _default;","export const ActionConsts = {\n\tAccount: {\n\t\tResetReducer: 'Account_ResetReducer',\n\t\tSetReducer: 'Account_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const AccountActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Account.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Account.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const accountsPageStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tbodyContainer: {\n\t\tminHeight: '100vh',\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: theme.spacing(4)\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t\tpaddingLeft: \"25px\"\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t},\n\tuserImage: {\n\t\twidth: theme.spacing(15),\n\t\theight: theme.spacing(15),\n\t}\n}));\n\nexport const changePasswordModalStyle = makeStyles(theme => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px'\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tinputTextField: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\tpaddingRight: 0\n\t},\n\ticonEye: {\n\t\tcolor: '#9EA3AC'\n\t},\n\tlabelNote: {\n\t\tcolor: '#797F92',\n\t\tfontSize: 12\n\t},\n\terrorMessage: {\n\t\tcolor: '#E53935',\n\t\tfontSize: 14\n\t},\n\terrorIcon: {\n\t\tcolor: '#E53935',\n\t}\n\t\n}));","\nimport * as React from 'react';\nimport {\n    Grid,\n    Typography,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { ChangePassword } from './ChangePassword';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { resetPassword, unlockUser } from 'Pages/API/Calls/User';\nimport moment from 'moment'\nimport { LoadingIndicator } from 'Components/UI';\nimport LockIcon from '@material-ui/icons/Lock';\n\n\nconst useStyles = makeStyles(() => ({\n    label: {\n        color: '#3C394A',\n        fontSize: 12,\n        opacity: .6\n    },\n    value: {\n        color: '#3C394A',\n        fontSize: 16,\n        fontWeight: 800\n    },\n    linkAction: {\n        color: '#3AB77D',\n        textDecoration: 'underline',\n        fontSize: 12,\n        cursor: 'pointer'\n    },\n    button: {\n        margin: '0 10px',\n        minHeight: '42px',\n        minWidth: '150px',\n        fontSize: 14\n    },\n    circle: {\n        width: 8,\n        height: 8,\n        background: '#3C394A',\n        borderRadius: '100%',\n        display: 'inline-block',\n        marginRight: 3,\n        marginTop: 5\n    },\n    padlock: {\n        color: '#3AB77D',\n        fontSize: 18,\n        position: 'relative',\n        top: -3,\n        marginRight: 5\n    }\n}));\n\ninterface IViewAccountProps {\n    userData: any\n    userIdDb: string\n    setUserData: (value: any) => void\n}\n\nexport const ViewAccount: React.FC<IViewAccountProps> = (props: IViewAccountProps): JSX.Element => {\n    const classes = useStyles();\n    // const [ChangePasswordModalVisibility, setChangePasswordModalVisibility] = React.useState(false)\n    const [resetModalOpen, setResetModalOpen] = React.useState(false);\n    const [resetSuccessModalOpen, setResetSuccessModalOpen] = React.useState(false);\n    const [loading, setLoading] = React.useState(false)\n    const [unlockModal, setUnlockModal] = React.useState(false)\n    const [unlockModalProps, setUnlockModalProps] = React.useState<any>({\n        open: false,\n        title: '',\n        message: ''\n    })\n    // const [currentDate, setCurrentDate] = React.useState()\n    const openResetModal = () => {\n        setResetModalOpen(true)\n    }\n\n    const closeUnlockModalProps = () => {\n        setUnlockModalProps({...unlockModalProps, open: false})\n    }\n\n    const handleOnResetPassword = () => {\n        setLoading(true)\n        resetPassword(props.userData.username).then(response => {\n            console.log(response);\n            setResetModalOpen(false);\n            setResetSuccessModalOpen(true);\n            setLoading(false);\n        })\n    }\n\n    const openUnlockModal = () => {\n        setUnlockModal(true);\n    }\n\n    const closeUnlockModal = () => {\n        setUnlockModal(false);\n    }\n\n    const unlockOnSubmit = () => {\n        setLoading(true);\n        closeUnlockModal();\n        unlockUser(props.userData._id).then((res) => {\n            if (!res.error) {\n                setUnlockModalProps({\n                    ...unlockModalProps,\n                    open: true,\n                    title: 'Unlock User Success',\n                    message: 'This user has been successfully unlocked.'\n                })\n                props.setUserData(res);\n            } else {\n                setUnlockModalProps({\n                    ...unlockModalProps,\n                    open: true,\n                    title: 'Error',\n                    message: res.error.message\n                })\n            }\n\n            setLoading(false);\n        }).catch((err) => {\n            setLoading(false);\n            setUnlockModalProps({\n                ...unlockModalProps,\n                open: true,\n                title: 'Error',\n                message: err.message\n            })\n        })\n    }\n\n    return (\n        <>\n            {loading ?\n                (<LoadingIndicator />) : null\n            }\n            <Grid container spacing={5}>\n                <Grid item xs={12}>\n                    <Typography><b>ACCOUNT</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>USERNAME</Typography>\n                    <Typography className={classes.value}>{props.userData.username}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>PRIMARY ROLE AND MODULE</Typography>\n                    <Typography className={classes.value}>{props.userData.main_role && props.userData.main_role.name + \" - \" + props.userData.main_module}</Typography>\n                </Grid>\n            </Grid>\n            <Grid container spacing={5}>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>EMAIL</Typography>\n                    <Typography className={classes.value}>{props.userData.email}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>USER GROUP</Typography>\n                    <Typography className={classes.value}>{props.userData.group == null || undefined ? \"N/A\" : props.userData.group.name}</Typography>\n                </Grid>\n            </Grid>\n            <Grid container spacing={5}>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>PASSWORD</Typography>\n                    <Typography className={classes.value}>\n                        <span className={classes.circle}></span><span className={classes.circle}></span><span className={classes.circle}></span>\n                        <span className={classes.circle}></span><span className={classes.circle}></span><span className={classes.circle}></span>\n                    </Typography>\n                    <Link onClick={() => {\n                        openResetModal()\n                    }}>Reset Password</Link>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>ROLES FROM USER GROUPS</Typography>\n                    <Typography className={classes.value}><u>\n                        {\n                            props.userData.hasOwnProperty('group') && props.userData.group.hasOwnProperty('roles') && props.userData.group.roles.length > 0 ?\n                                props.userData.group.roles.map((d, i) =>\n                                    Object.keys(d).length > 0 ?\n                                        `${d.name}${i !== (props.userData.group.roles.length - 1) ? ', ' : ''}`\n                                        : 'N/A'\n                                ) : 'N/A'\n                        }\n                    </u></Typography>\n                </Grid>\n            </Grid>\n            <Grid container spacing={5} >\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>STATUS</Typography>\n                    <Typography className={classes.value} style={{ textTransform: 'capitalize' }}>\n                        <b>{props.userData.status}</b>\n                    </Typography>\n                    {props.userData.status === 'locked' ? <Link onClick={openUnlockModal}><LockIcon className={classes.padlock} />Unlock User</Link> : ''}\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography className={classes.label}>OTHER ROLES</Typography>\n                    <Typography className={classes.value}>\n                        <u>\n                            {\n                                props.userData.hasOwnProperty('roles') ? props.userData.roles.length > 0 ?\n                                    props.userData.roles.map((d, i) =>\n                                        `${d.name}${i !== (props.userData.roles.length - 1) ? ', ' : ''}`\n                                    ) : 'N/A' : 'N/A'\n                            }\n                        </u>\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={5}>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>SUPERVISOR</Typography>\n                    {\n                        props.userData.reports_to ?\n                            <>\n                                <Typography className={classes.value}>{props.userData.reports_to.first_name} {props.userData.reports_to.last_name}</Typography>\n                                <Typography style={{ color: 'rgba(60, 57, 74, 0.7)' }}><small><b>{props.userData.reports_to.job_title ? props.userData.reports_to.job_title : 'N/A'}</b></small></Typography>\n                                <Typography style={{ color: 'rgba(60, 57, 74, 0.7)' }}><small><i>{props.userData.reports_to.employee_id ? props.userData.reports_to.employee_id : 'N/A'}</i></small></Typography>\n                            </>\n                            : <Typography className={classes.value}>N/A</Typography>\n                    }\n                </Grid>\n            </Grid>\n            <Grid container spacing={5} style={{ paddingBottom: 30 }}>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>EFFECTIVITY DATE</Typography>\n                    <Typography className={classes.value}>{props.userData.effectivity_date ? moment(props.userData.effectivity_date).format('MMM DD, YYYY') : 'N/A'}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>EXPIRY DATE (If applicable)</Typography>\n                    <Typography className={classes.value}>{props.userData.expiry_date ? moment(props.userData.expiry_date).format('MMM DD, YYYY') : 'N/A'}</Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={5}>\n                <Grid item xs={12}>\n                    <Typography><b>PROFILE</b></Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>FIRST NAME</Typography>\n                    <Typography className={classes.value}>{props.userData.first_name ? props.userData.first_name : \"N/A\"}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>MIDDLE NAME</Typography>\n                    <Typography className={classes.value}>{props.userData.middle_name ? props.userData.middle_name : \"N/A\"}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>LAST NAME</Typography>\n                    <Typography className={classes.value}>{props.userData.last_name ? props.userData.last_name : \"N/A\"}</Typography>\n                </Grid>\n            </Grid>\n            <Grid container spacing={5}>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>EMPLOYEE ID NUMBER</Typography>\n                    <Typography className={classes.value}>{props.userData.employee_id ? props.userData.employee_id : \"N/A\"}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>DEPARTMENT</Typography>\n                    <Typography className={classes.value}>{props.userData.department ? props.userData.department.name : \"N/A\"}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>JOB POSITION / RANK</Typography>\n                    <Typography className={classes.value}>{props.userData.job_title ? props.userData.job_title : \"N/A\"}</Typography>\n                </Grid>\n            </Grid>\n            <Grid container spacing={5}>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>SECTION</Typography>\n                    <Typography className={classes.value}>{props.userData.section ? props.userData.section : \"N/A\"}</Typography>\n                </Grid>\n                <Grid item xs={3}>\n                    <Typography className={classes.label}>LOCATION</Typography>\n                    <Typography className={classes.value}>{props.userData.location ? props.userData.location : \"N/A\"}</Typography>\n                </Grid>\n            </Grid>\n            {/* BEGIN MODALS */}\n\n\n            <ModalComponent\n                isModalOpen={resetModalOpen}\n                onClose={() => setResetModalOpen(false)}\n                message={'Do you really want to reset the password of this user?'}\n                title={'Reset Password'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setResetModalOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={() => {\n                                    handleOnResetPassword()\n                                }}\n                            >Reset</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            {/* Reset modal */}\n            <ModalComponent\n                isModalOpen={resetSuccessModalOpen}\n                onClose={() => setResetSuccessModalOpen(false)}\n                message={\"New password has been sent to the user's registered email account.\"}\n                title={'Reset Password Success'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={() => {\n                                    setResetSuccessModalOpen(false)\n                                }}\n                            >Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            \n            {/* Unlock modal */}\n            <ModalComponent\n                isModalOpen={unlockModal}\n                onClose={closeUnlockModal}\n                message={`Are you sure you want to grant ${props.userData.first_name} access to the system again?`}\n                title={'Unlock User'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={closeUnlockModal} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={() => {\n                                    unlockOnSubmit()\n                                }}\n                            >Unlock</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            <ModalComponent\n                isModalOpen={unlockModalProps.open}\n                onClose={closeUnlockModalProps}\n                message={unlockModalProps.message}\n                title={unlockModalProps.title}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={closeUnlockModalProps}\n                            >Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}","import React from 'react';\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Link,\n    InputAdornment\n} from '@material-ui/core';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UI } from 'Components';\nimport MomentUtils from '@date-io/moment';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n    getAllRoles,\n    getAllGroups\n} from 'Pages/API/Calls/Roles';\nimport { getUserList, updateUserDetails, resetPassword, getDepartments, unlockUser } from 'Pages/API/Calls/User'\nimport moment from 'moment';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { regex } from 'Components/app.const';\nimport { getLastSegment } from 'Components/app.const'\nimport LockIcon from '@material-ui/icons/Lock';\n\nconst useStyles = makeStyles(() => ({\n    label: {\n        color: '#3C394A',\n        fontSize: 12,\n        opacity: .6,\n        marginBottom: 5\n    },\n    button: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n    userAlignRight: {\n        textAlign: 'right',\n    },\n    input: {\n    },\n    value: {\n        color: '#3C394A',\n        fontSize: 16,\n        fontWeight: 800\n    },\n    linkAction: {\n        color: '#3AB77D',\n        textDecoration: 'underline',\n        fontSize: 12,\n        cursor: 'pointer'\n    },\n    circle: {\n        width: 8,\n        height: 8,\n        background: '#3C394A',\n        borderRadius: '100%',\n        display: 'inline-block',\n        marginRight: 3,\n        marginTop: 5\n    },\n        saveButton: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#fff',\n    },\n    cancelAdd: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#ffffff',\n        marginRight: '20px',\n        backgroundColor: '#3C394A',\n        '&:hover': {\n        backgroundColor: '#302e3c'\n        }\n    },\n    errorLabel: {\n        color: '#E53935',\n        fontSize: '12px'\n    },\n    errorIcon: {\n        color: '#E53935'\n    },\n    padlock: {\n        color: '#3AB77D',\n        fontSize: 18,\n        position: 'relative',\n        top: -3,\n        marginRight: 5\n    },\n    linkUnlock: {\n        marginTop: 10,\n        display: 'block'\n    }\n}));\n\ndeclare global {\n    interface ObjectConstructor {\n      fromEntries(xs: [string|number|symbol, any][]): object\n    }\n}\n\ninterface IProps {\n    userData: any,\n    setMode: (e) => void\n    setUserData: (value: any) => void\n}\n\nexport const EditAccount: React.FC<IProps> = (props: IProps):JSX.Element => {\n    const {\n        userData,\n        setMode,\n        setUserData\n    } = props\n\n    const [departments, setDepartments] = React.useState<any>([\n        {\n          label: '',\n          value: ''\n        }\n    ]);\n\n    React.useEffect(() => {\n\n        let fuse = Object.assign(dataTmp, userData);\n\n        setDataTmp(fuse);\n\n        getDepartments().then((res:any) => {\n            let choices: any = [];\n            if (!res.error) {\n              res.forEach(d => {\n                let beauty = {\n                  label: d.name,\n                  value: d\n                }\n      \n                choices.push(beauty)\n              })\n              setDepartments(choices)\n            } else {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error',\n                    message: res.error.message,\n                    onOkay: () => {setModalProps({...modalProps, open: false})}\n                })\n            }\n          }).catch((err) => {\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error',\n                message: err.message,\n                onOkay: () => {setModalProps({...modalProps, open: false})}\n            })\n        })\n\n        setSelectedPrimaries({\n            label: `${userData.main_role.name} - ${userData.main_module}`,\n            value: userData.main_role\n        })\n\n        setSelectedDepartment({\n            label: userData.department.name,\n            value: userData.department\n        })\n\n        if (userData.hasOwnProperty('effectivity_date') && userData.effectivity_date !== undefined || null) {\n            setEffDate(userData.effectivity_date)\n        }\n\n        if (userData.hasOwnProperty('expiry_date') && userData.expiry_date !== undefined || null) {\n            setExpDate(userData.expiry_date)\n        }\n\n        if (userData.hasOwnProperty('group') && userData.group !== null ) {\n            setSelectedGroup({\n                label: userData.group.name,\n                value: userData.group\n            })\n        }\n\n        if (userData.hasOwnProperty('reports_to') && userData.reports_to) {\n            setSelectedSuperVisor({label: userData.reports_to.first_name, value: userData.reports_to})\n        }\n\n        let filter = {\n            main_module: userData.main_module\n        }\n\n        getUserList(100, 0, filter).then(({body}) => {\n      \n            setUpserOption(\n                body.map(user => {\n                    return {\n                        value: user,\n                        label: user.first_name\n                    }\n              })\n            )\n        }).catch((err) => {\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error',\n                message: err.message,\n                onOkay: () => {setModalProps({...modalProps, open: false})}\n            })\n        })\n\n        getAllRoles(50).then(res => {\n            setRoleList({\n              ...rolesList,\n              rows: primaryRoleChoicesBeautifier(res.body, true),\n              options: primaryRoleChoicesBeautifier(res.body, false)\n            })\n            // console.log(res.body)\n        }).catch((err) => {\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error',\n                message: err.message,\n                onOkay: () => {setModalProps({...modalProps, open: false})}\n            })\n        })\n\n        getAllGroups().then(res => {\n            let data = {\n              body: res.body,\n              label: 'name'\n            }\n      \n            setGroupList(choicesBeautifier(data))\n        }).catch((err) => {\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error',\n                message: err.message,\n                onOkay: () => {setModalProps({...modalProps, open: false})}\n            })\n        })\n\n    }, [])\n\n    const choicesBeautifier = (data: any) => {\n        let newChoices: any = [];\n    \n        if (data.body && data.body.length > 0) {\n            data.body.map(c => {\n                let beauty = {\n                    label: c[data.label],\n                    value: c\n                }\n\n                newChoices.push(beauty);\n            })\n    \n            return newChoices\n        }\n    \n        return []\n    }\n\n    const handleGroup = (selected: any) => {\n        setSelectedGroup(selected)\n        console.log(selected)\n        setDataChanges({\n            ...dataChanges,\n            group: selected.value\n        });\n    }\n\n    const handlePrimaries = (selected: any) => {\n        setSelectedPrimaries(selected)\n        setDataChanges({\n            ...dataChanges,\n            main_module: selected.value.module,\n            main_role: selected.value\n        });\n        \n        let filter = {\n            main_module: selected.value.module\n        }\n\n        getUserList(100, 0, filter).then(({body}) => {\n            setUpserOption(\n                body.map(user => {\n                return {\n                  value: user,\n                  label: user.first_name\n                }\n              })\n            )\n\n            setSelectedSuperVisor('')\n          }).catch(err => console.log(err))\n    }\n\n    const primaryRoleChoicesBeautifier = (choices: any, isDefault?: boolean) => {\n        let newChoices: any = [];\n    \n        if (choices && choices.length > 0) {\n            choices.map(c => {\n              let beauty = {\n                value: c,\n                label: ''\n              }\n              if (!isDefault) {\n                beauty.label = `${c.name} - ${c.hasOwnProperty('module') ? c.module : ''}`\n              } else {\n                beauty.label = c.name\n              }\n      \n              newChoices.push(beauty)\n            })\n\n            if (isDefault) {\n                if (userData.hasOwnProperty('roles') && userData.roles.length > 0) {\n                    let selectedRoles: any = [];\n                    userData.roles.map(r => {\n                        // let ob = {\n                        //     label: r.name,\n                        //     value: r\n                        // }\n    \n                        let findIndex = newChoices.find(d => d.value._id === r._id)\n    \n                        selectedRoles.push(findIndex)\n    \n                        \n                        // newChoices.find(f => {\n                        //     console.log(f.value._id)\n                        // })\n                        \n                    })\n    \n                    setSelectedOtherRoles(selectedRoles)\n                }\n            }\n\n\n            let selectedPrimary: any = [];\n            let findIndex2 = newChoices.find(d => d.value._id === userData.main_role._id)\n\n            selectedPrimary.push(findIndex2)\n\n            setSelectedPrimaries(selectedPrimary)\n\n            return newChoices   \n        }\n    \n        return []\n    }\n\n    const fetchUserOption = async (input, cb) => {\n        let where = {\n          first_name: {\n            like: `${input}.*`,\n            options: 'i'\n          },\n          main_module: dataChanges.main_module\n        }\n    \n        let searchResult = await getUserList(100, 0, where).catch(() => cb([]));\n    \n        if (searchResult) {\n          cb(userOptionBeautifier(searchResult.body));\n        }\n    }\n\n    const onSelectSuperVisor = (selected: any) => {\n        setSelectedSuperVisor(selected)\n\n        setDataChanges({\n            ...dataChanges,\n            reports_to: selected.value\n        });\n    }\n\n    const handleCommonFields = (e, prop) => {\n        setDataTmp({\n            ...dataTmp,\n            [prop]: e.target.value\n        })\n        setDataChanges({\n            ...dataChanges,\n            [prop]: e.target.value\n        });\n    }\n\n    const userOptionBeautifier = (option: any) => {\n        let options = option.map((o: any) =>\n          {\n            return {\n              value: o,\n              label: `${o.hasOwnProperty('first_name') ? o.first_name : ''}\n                      ${o.hasOwnProperty('middle_name') ? o.middle_name : ''}\n                      ${o.hasOwnProperty('last_name') ? o.last_name : ''}`\n            }\n          }\n        )\n    \n        return options\n    }\n\n    const handleExpDate = (e) => {\n        setExpDate(moment(e).toISOString())\n\n        setDataTmp({\n            ...dataChanges,\n            expiry_date: moment(e).toISOString()\n        })\n\n        setDataChanges({\n            ...dataChanges,\n            expiry_date: moment(e).toISOString()\n        })\n    }\n\n    const handleEffDate = (e) => {\n        setEffDate(moment(e).toISOString())\n\n        setDataTmp({\n            ...dataChanges,\n            effectivity_date: moment(e).toISOString()\n        })\n\n        setDataChanges({\n            ...dataChanges,\n            effectivity_date: moment(e).toISOString()\n        })\n    }\n    \n    const handleRoles = (selected) => {\n        setSelectedOtherRoles(selected)\n        console.log(selected)\n        let newValue: any = [];\n    \n        if (selected && selected.length > 0) {\n          selected.map(s => newValue.push(s.value))\n        }\n    \n        setDataTmp({\n          ...dataTmp,\n          roles: newValue,\n        });\n\n        setDataChanges({\n            ...dataChanges,\n            roles: newValue,\n        });\n        \n        // setPersonRole(event.target.value);\n    }\n\n    const handleDepartments = (selected: any) => {\n        setSelectedDepartment(selected);\n\n        if (selected.__isNew__) {\n            setDataChanges({\n                ...dataChanges,\n                department: {\n                    name: selected.value\n                }\n            })\n        } else {\n            setDataChanges({\n                ...dataChanges,\n                department: selected.value\n            })\n        }\n\n        \n    }\n\n    const handleOnResetPassword = async () => {\n        setUpdating(true)\n        setResetModalOpen(false);\n\n        let request = await resetPassword(dataTmp.username)\n            .catch((err) => {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error resetting password',\n                    message: err.message,\n                    onOkay: () => {setModalProps({...modalProps, open: false})}\n                })\n            })\n        \n        if (request) {\n            if (!request.error) {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Reset Password Success',\n                    message: 'New password has been sent to the user\\'s registered email account',\n                    onOkay: () => {setModalProps({...modalProps, open: false})}\n                })\n            } else {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error resetting password',\n                    message: request.error.message,\n                    onOkay: () => {setModalProps({...modalProps, open: false})}\n                })\n            }\n        }\n\n        setUpdating(false)\n    }\n\n    const handleSubmit = async () => {\n        let data = {\n            ...userData,\n            ...dataChanges\n        };\n\n        validateEmail(true);\n\n        if (!validatingEmail) {\n            if (validationAlgorithm(data)) {\n                setCModalProps({\n                    ...cModalProps,\n                    open: true,\n                    title: 'Confirm Changes',\n                    message: 'Are you sure you want to update your account details?',\n                    onClose: () => {setCModalProps({...cModalProps, open: false})},\n                    onSubmit: submitChanges\n                })\n            }\n        } \n    }\n\n    const handleSubmitWithoutEmailValdiation = async () => {\n        let data = {\n            ...userData,\n            ...dataChanges\n        };\n\n        if (validationAlgorithm(data)) {\n            setCModalProps({\n                ...cModalProps,\n                open: true,\n                title: 'Confirm Changes',\n                message: 'Are you sure you want to update your account details?',\n                onClose: () => {setCModalProps({...cModalProps, open: false})},\n                onSubmit: submitChanges\n            })\n        }\n    }\n\n    const showDeactivate = () => {\n        setCModalProps({\n            ...cModalProps,\n            open: true,\n            title: 'Deactivate User',\n            message: 'Would you like to continue deactivating this user?',\n            onClose: () => {setCModalProps({...cModalProps, open: false})},\n            onSubmit: () => {\n                proceed()\n            }\n        })\n    }\n\n    const showActivate = () => {\n        setCModalProps({\n            ...cModalProps,\n            open: true,\n            title: 'Activate User',\n            message: 'Would you like to continue activating this user?',\n            onClose: () => {setCModalProps({...cModalProps, open: false})},\n            onSubmit: () => {\n                proceed()\n            }\n        })\n    }\n\n    const submitChanges = () => {\n        if (moment(expDate).isSameOrBefore() && userData.status.toLowerCase() !== 'deactivated') {\n            showDeactivate();\n        } else if (\n            (moment(expDate).isSameOrAfter() && userData.status.toLowerCase() !== 'active') ||\n            (expDate === null && userData.status.toLowerCase() !== 'active')\n        ) {\n            if (userData.status.toLowerCase() === 'awaiting activation') {\n                proceed();\n            } else {\n                showActivate();\n            }\n        } else {\n            // alert(\"proceed\")\n            proceed();\n        }\n    }\n\n    const proceed = async () => {\n        setCModalProps({\n            ...cModalProps,\n            open: false\n        })\n        setUpdating(true);\n        let data = {\n            ...userData,\n            ...dataChanges\n        };\n        data.status = data.status.toLowerCase();\n        if (data.hasOwnProperty('group_roles')) {\n            delete data.group_roles\n        }\n\n        if (!data.expiry_date) {\n            delete data.expiry_date\n        }\n\n        if (!data.section || data.section === null) {\n            delete data.section\n        }\n\n        if (!data.roles || data.roles === null) {\n            data.roles = [] \n        }\n\n        delete data.username\n        delete data._id\n        delete data.is_locked\n        delete data.needs_password_update\n        delete data.password\n        delete data.is_online\n\n        let submit = await updateUserDetails(getLastSegment(), data)\n        .catch((err) => {\n            console.log(err)\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error saving changes',\n                message: err.message,\n                onOkay: () => {\n                    setModalProps({\n                        ...modalProps,\n                        open: false\n                    })\n                }\n            })\n        })\n\n        if (submit) {\n            if (submit && !submit.error) {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Changes Saved',\n                    message: 'Your changes to your account have been saved successfully.',\n                    onOkay: () => {setMode('view')}\n                })\n                setUserData(submit);\n            } else {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error saving changes',\n                    message: submit.error.message,\n                    onOkay: () => {\n                        setModalProps({\n                            ...modalProps,\n                            open: false\n                        })\n                    }\n                })\n            }\n        }\n\n        setUpdating(false);\n        console.log(JSON.stringify(data));\n    }\n\n    const closeUnlockModalProps = () => {\n        setUnlockModalProps({...unlockModalProps, open: false})\n    }\n\n    const openUnlockModal = () => {\n        setUnlockModal(true);\n    }\n\n    const closeUnlockModal = () => {\n        setUnlockModal(false);\n    }\n\n    const unlockOnSubmit = () => {\n        setUpdating(true);\n        closeUnlockModal();\n        unlockUser(props.userData._id).then((res) => {\n            if (!res.error) {\n                setUnlockModalProps({\n                    ...unlockModalProps,\n                    open: true,\n                    title: 'Unlock User Success',\n                    message: 'This user has been successfully unlocked.'\n                })\n                setUserData(res)\n            } else {\n                setUnlockModalProps({\n                    ...unlockModalProps,\n                    open: true,\n                    title: 'Error',\n                    message: res.error.message\n                })\n            }\n\n            setUpdating(false);\n        }).catch((err) => {\n            setUpdating(false);\n            setUnlockModalProps({\n                ...unlockModalProps,\n                open: true,\n                title: 'Error',\n                message: err.message\n            })\n        })\n    }\n\n    const [rolesList, setRoleList] = React.useState<any>({\n        rows: [],\n        options: []\n    });\n\n    const [groupList, setGroupList] = React.useState<any>();\n\n    const [dataChanges, setDataChanges] = React.useState<any>({});\n    const [dataTmp, setDataTmp] = React.useState<any>({\n        first_name: \"\",\n        middle_name: \"\",\n        last_name: \"\",\n        group: null,\n        email: \"\",\n        employee_id: \"\",\n        department: \"\",\n        job_title: \"\",\n        location: \"\",\n        section: \"\",\n        username: \"\",\n        main_module: \"\",\n        main_role: \"\",\n        effectivity_date: '',\n        expiry_date:'',\n        roles: null,\n        profile_pic: \"\",\n        reports_to: ''\n    })\n    const [selectedGroup, setSelectedGroup] = React.useState<any>({});\n    const [seletedPrimaries, setSelectedPrimaries] = React.useState<any>({});\n    const [selectedDepartment, setSelectedDepartment] = React.useState<any>({});\n    const [selectedSuperVisor, setSelectedSuperVisor] = React.useState<any>('');\n    const [userOption, setUpserOption] = React.useState<any>();\n    const [selectedOtherRoles, setSelectedOtherRoles] = React.useState<any>([]);\n    const [cModalProps, setCModalProps] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        onClose: () => {},\n        onSubmit: () => {}\n    });\n\n    const [modalProps, setModalProps] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        onOkay: () => {}\n    });\n\n    const [effDate, setEffDate] = React.useState<any>('');\n    const [expDate, setExpDate] = React.useState<any>('');\n    const [isUpdating, setUpdating] = React.useState<boolean>(false);\n    const [resetModalOpen, setResetModalOpen] = React.useState(false);\n    const [errorMessages, setErrorMessages] = React.useState<any>({\n        first_name: '',\n        middle_name: '',\n        last_name: '',\n        email: '',\n        employee_id: '',\n        department: '',\n        job_title: '',\n        location: '',\n        username: '',\n        main_module: '',\n        effectivity_date: '',\n        main_role: '',\n        roles: ''\n    });\n    const [fieldValidation, setFieldValidation] = React.useState<any>({\n        first_name: null,\n        middle_name: null,\n        last_name: null,\n        email: null,\n        employee_id: null,\n        department: null,\n        job_title: null,\n        location: null,\n        username: null,\n        main_module: null,\n        effectivity_date: null,\n        main_role: null,\n        roles: null\n    });\n\n    const [validEmail, setValidEmail] = React.useState(\n        regex.email.test(userData.email)\n    );\n\n    const [unlockModal, setUnlockModal] = React.useState(false)\n    const [unlockModalProps, setUnlockModalProps] = React.useState<any>({\n        open: false,\n        title: '',\n        message: ''\n    })\n\n\n    const validationAlgorithm = (bodyRequest) => { \n        // let preValidObject = {}\n        let optionalFields = ['section', 'group', 'profile_pic', 'reports_to', 'expiry_date', 'is_active', 'is_locked', 'retry_count', 'roles'];\n        let valid: any = [];\n        let invalid: any = [];\n        \n        let payloadArray = Object.entries(bodyRequest);\n    \n        payloadArray.forEach((payloadObject: any) => {\n          if (!optionalFields.includes(payloadObject[0])) {\n            if (payloadObject[1]) {\n                if (payloadObject[0] === 'email') {\n                    if (validEmail) {\n                        payloadObject[1] = true\n                        valid.push(payloadObject);\n                    } else {\n                        payloadObject[1] = false\n                        invalid.push(payloadObject);\n                    }\n                } else {\n                    payloadObject[1] = true\n                    valid.push(payloadObject);\n                }\n            } else {\n                payloadObject[1] = false\n                invalid.push(payloadObject);\n            }\n          }\n        })\n    \n        let preValid: any = Object.assign(Object.fromEntries(valid), Object.fromEntries(invalid));\n    \n        setFieldValidation(preValid);\n\n        console.log(preValid);\n        setErrorMessages({\n          first_name: !preValid.first_name ? 'Invalid Input' : '',\n          middle_name: !preValid.middle_name ? 'Invalid Input' : '',\n          last_name: !preValid.last_name ? 'Invalid Input' : '',\n          employee_id: !preValid.employee_id ? errorMessages.employee_id === '' ? 'Invalid Input' : errorMessages.employee_id : '',\n          department: !preValid.department ? 'Invalid Input' : '',\n          job_title: !preValid.job_title ? 'Invalid Input' : '',\n          email: !preValid.email ? errorMessages.email  === '' ? 'Invalid Input' : errorMessages.email : '',\n          location: !preValid.location ? 'Invalid Input' : '',\n          effectivity_date: !preValid.effectivity_date ? 'Invalid Input' : '',\n          main_module: !preValid.main_module ? 'Select a Primary Role and Module' : '',\n          main_role: !preValid.main_role ? 'Select a Primary Role and Module' : '',\n        })\n\n        \n\n        for(var f in preValid)\n        if(!preValid[f]) return false;\n            \n        return true;\n    }\n\n    const fetchUserRoles = async (input, cb) => {\n\n        let searchResult = await getAllRoles(100, input).catch(() => cb([]))\n            .catch((err) => {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error',\n                    message: err.message,\n                    onOkay: () => {setModalProps({...modalProps, open: false})}\n                })\n            } )\n    \n        if (searchResult) {\n          cb(\n            primaryRoleChoicesBeautifierSearch(searchResult.body, false)\n          );\n        }\n    }\n\n    const primaryRoleChoicesBeautifierSearch = (choices: any, isDefault?: boolean) => {\n        let newChoices: any = [];\n    \n        if (choices && choices.length > 0) {\n          choices.map(c => {\n            let beauty = {\n              value: c,\n              label: ''\n            }\n            if (!isDefault) {\n              beauty.label = `${c.name} - ${c.hasOwnProperty('module') ? c.module : ''}`\n            } else {\n              beauty.label = c.name\n            }\n    \n            newChoices.push(beauty)\n          })\n          return newChoices\n        }\n    \n        return []\n    }\n\n    const fetchUserOtherRoles = async (input, cb) => {\n\n        let searchResult = await getAllRoles(100, input).catch(() => cb([]));\n    \n        if (searchResult) {\n          cb(\n            primaryRoleChoicesBeautifierSearchOther(searchResult.body, true)\n          );\n        }\n    }\n\n    const primaryRoleChoicesBeautifierSearchOther = (choices: any, isDefault?: boolean) => {\n        let newChoices: any = [];\n    \n        if (choices && choices.length > 0) {\n          choices.map(c => {\n            let beauty = {\n              value: c,\n              label: ''\n            }\n            if (!isDefault) {\n              beauty.label = `${c.name} - ${c.hasOwnProperty('module') ? c.module : ''}`\n            } else {\n              beauty.label = c.name\n            }\n    \n            newChoices.push(beauty)\n          })\n          return newChoices\n        }\n    \n        return []\n    }\n\n    const validateEmail = async (proceed?: boolean) => {    \n        let where = {\n            email: dataTmp.email\n        }\n\n        if (dataTmp.email !== '' && dataTmp.email && dataTmp.email !== tmpEmail) {\n            setValidatingEmail(true);\n            if (!regex.email.test(dataTmp.email)) {\n              setValidEmail(false)\n              setErrorMessages({\n                ...errorMessages,\n                email: 'Invalid email'\n              })\n              setFieldValidation({\n                ...fieldValidation,\n                email: false\n              })\n            } else {\n                let searchResult = await getUserList(1, 0, where).catch(() => {\n                setValidEmail(true)\n                setErrorMessages({\n                  ...errorMessages,\n                  email: ''\n                })\n                setFieldValidation({\n                  ...fieldValidation,\n                  email: true\n                })\n                \n                if (proceed) {\n                    handleSubmitWithoutEmailValdiation();\n                }\n            })\n                if (searchResult && searchResult.body[0].email !== userData.email) {\n                    setValidEmail(false)\n                    setErrorMessages({\n                        ...errorMessages,\n                        email: 'Already Exist'\n                    })\n                    setFieldValidation({\n                        ...fieldValidation,\n                        email: false\n                    })                }\n            }\n\n            setTmpEmail(dataTmp.email)\n            setValidatingEmail(false)\n        }\n\n\n    }\n\n    const [tmpEmail, setTmpEmail] = React.useState<string>('')\n    const [validatingEmail, setValidatingEmail] = React.useState<boolean>(false)\n\n    const classes = useStyles();\n    return (\n        <>\n        { isUpdating && <UI.LoadingIndicator /> }\n            <div style={{marginBottom: 80}}>\n                <Grid container spacing={5}>\n                    <Grid item xs={12}>\n                        <Typography><b>Edit Account Details</b></Typography>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Username</Typography>\n                        <TextField type=\"text\"\n                            className={classes.input}\n                            value={userData.username}\n                            fullWidth\n                            disabled\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Typography className={classes.label}>Primary Role and Module</Typography>\n                        {/* <UI.Dropdown\n                            placeholder=\"Select One\"\n                            icon={true}\n                            isMulti={false}\n                            closeOnSelect={true}\n                            value={seletedPrimaries}\n                            onChange={handlePrimaries}\n                            choices={rolesList.options} /> */}\n\n                        <UI.Dropdown\n                            async={true}\n                            onChange={handlePrimaries}\n                            fetchOption={fetchUserRoles}\n                            placeholder=\"Search One\"\n                            icon={false}\n                            isMulti={false}\n                            closeOnSelect={true}\n                            value={seletedPrimaries}\n                            choices={rolesList.options} />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={5}>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Email</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.email !== null ? !fieldValidation.email : fieldValidation.email}\n                            onBlur={() => validateEmail()}\n                            onChange = {(e) => handleCommonFields(e, 'email')}\n                            className={classes.input}\n                            value={dataTmp.email}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\"\n                            InputProps={{\n                                endAdornment: <InputAdornment position=\"start\"> {validatingEmail ? <CircularProgress size={20} /> : ''}</InputAdornment>,\n                            }}  />\n\n                        <Grid container>\n                            {\n                            fieldValidation.email !== null && fieldValidation.email === false  ?\n                                <>\n                                <Grid item xs={10} md={10} lg={10}>\n                                    <span className={classes.errorLabel}>{errorMessages.email}</span>\n                                </Grid>\n                                <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                    <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                </Grid>\n                                </>\n                            : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Typography className={classes.label}>User Group</Typography>\n                        <UI.Dropdown\n                            placeholder=\"Select One\"\n                            defaultValue={groupList ? groupList[2] : ''}\n                            icon={true}\n                            isMulti={false}\n                            closeOnSelect={true}\n                            onChange={handleGroup}\n                            value={selectedGroup}\n                            choices={groupList} />\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={5}>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Password</Typography>\n                        <Typography className={classes.value}>\n                            <span className={classes.circle}></span><span className={classes.circle}></span><span className={classes.circle}></span>\n                            <span className={classes.circle}></span><span className={classes.circle}></span><span className={classes.circle}></span>\n                        </Typography>\n                        <Link onClick={() => {\n                                setResetModalOpen(true)\n                            }}>Reset Password</Link>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Typography className={classes.label}>Roles from User Group</Typography>\n                        <Typography className={classes.value}><u>\n                            {\n                                Object.keys(selectedGroup).length > 0 && selectedGroup.value.hasOwnProperty('roles') && selectedGroup.value.roles.length > 0 ?\n                                selectedGroup.value.roles.map((d, i) => \n                                    Object.keys(d).length > 0 ?\n                                    `${d.name}${i !== (selectedGroup.value.roles.length - 1)  ? ', ' : ''}`    \n                                    : 'N/A'\n                                ) : 'N/A'\n                            }\n                        </u></Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={5}>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Status</Typography>\n                        <TextField type=\"text\"\n                            className={classes.input}\n                            value={userData.hasOwnProperty('status') && userData.status.toUpperCase()}\n                            fullWidth\n                            disabled\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n                        {userData.status === 'locked' ? <Link onClick={openUnlockModal} className={classes.linkUnlock}><LockIcon className={classes.padlock} />Unlock User</Link> : ''}\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Typography className={classes.label}>Other Roles</Typography>\n                        {/* <UI.Dropdown\n                            placeholder=\"Search Role\"\n                            icon={false}\n                            isMulti={true}\n                            closeOnSelect={false}\n                            onChange={handleRoles}\n                            value={selectedOtherRoles}\n                            choices={rolesList.rows} /> */}\n\n                        <UI.Dropdown\n                            async={true}\n                            onChange={handleRoles}\n                            fetchOption={fetchUserOtherRoles}\n                            placeholder=\"Search Role\"\n                            icon={true}\n                            isMulti={true}\n                            closeOnSelect={false}\n                            value={selectedOtherRoles}\n                            choices={rolesList.rows} />\n                    </Grid>\n                </Grid>\n\n\n                <Grid container spacing={5}>\n                    <Grid item xs={5}>\n                    <Typography className={classes.label}>Supervisor Name</Typography>\n                        <UI.Dropdown\n                            disabled={\n                            userData.main_module && userData.main_role &&\n                            userData.main_module !== '' && userData.main_role !== '' ? false : true\n                            }\n                            async={true}\n                            onChange={onSelectSuperVisor}\n                            fetchOption={fetchUserOption}\n                            placeholder=\"Search User\"\n                            icon={false}\n                            isMulti={false}\n                            closeOnSelect={true}\n                            value={selectedSuperVisor}\n                            choices={userOption} />\n                    </Grid>\n                </Grid>\n\n\n                <Grid container spacing={5}>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Effectivity Date</Typography>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <KeyboardDatePicker\n                                variant=\"dialog\"\n                                inputProps={{\n                                    disabled: true\n                                }}\n                                format=\"MMMM DD, YYYY\"\n                                inputVariant=\"outlined\"\n                                value={effDate}\n                                invalidDateMessage=\"\"\n                                onChange={handleEffDate}\n                                style={{ width: \"100%\" }}\n                                />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <Typography className={classes.label}>Expiry Date</Typography>\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\n                            <KeyboardDatePicker\n                                minDate={effDate}\n                                variant=\"dialog\"\n                                clearable\n                                inputProps={{\n                                    disabled: true\n                                }}\n                                format=\"MMMM DD, YYYY\"\n                                inputVariant=\"outlined\"\n                                value={expDate}\n                                invalidDateMessage=\"\"\n                                onChange={handleExpDate}\n                                style={{ width: \"100%\" }}\n                                />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} style={{marginTop: 40, marginBottom: 20}}>\n                    <Typography><b>Edit Profile</b></Typography>\n                </Grid>\n\n                <Grid container spacing={5}>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>First Name</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.first_name !== null ? !fieldValidation.first_name : fieldValidation.first_name}\n                            onChange={(e) => handleCommonFields(e, 'first_name')}\n                            className={classes.input}\n                            value={dataTmp.first_name}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n        \n                        <Grid container>\n                            {\n                                fieldValidation.first_name !== null && fieldValidation.first_name === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.first_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Middle Name</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.middle_name !== null ? !fieldValidation.middle_name : fieldValidation.middle_name}\n                            onChange={(e) => handleCommonFields(e, 'middle_name')}\n                            className={classes.input}\n                            value={dataTmp.middle_name}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n\n                        <Grid container>\n                            {\n                                fieldValidation.middle_name !== null && fieldValidation.middle_name === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.middle_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Last Name</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.last_name !== null ? !fieldValidation.last_name : fieldValidation.last_name}\n                            onChange={(e) => handleCommonFields(e, 'last_name')}\n                            className={classes.input}\n                            value={dataTmp.last_name}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n                        \n                        <Grid container>\n                            {\n                                fieldValidation.last_name !== null && fieldValidation.last_name === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.last_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n\n                <Grid container spacing={5}>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Employee ID</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.employee_id !== null ? !fieldValidation.employee_id : fieldValidation.employee_id}\n                            onChange={(e) => handleCommonFields(e, 'employee_id')}\n                            className={classes.input}\n                            value={dataTmp.employee_id}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n\n                        <Grid container>\n                            {\n                                fieldValidation.employee_id !== null && fieldValidation.employee_id === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.employee_id}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Department</Typography>\n                         <UI.Dropdown\n                            error={fieldValidation.department !== null && fieldValidation.department !== null ? !fieldValidation.department : fieldValidation.department}\n                            placeholder=\"Select One\"\n                            icon={true}\n                            isMulti={false}\n                            closeOnSelect={true}\n                            isCreatable={true}\n                            value={selectedDepartment}\n                            onChange={handleDepartments}\n                            choices={departments} />\n                        \n                        <Grid container>\n                            {\n                                fieldValidation.department !== null && fieldValidation.department === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.department}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Job Position/Rank</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.job_title !== null ? !fieldValidation.job_title : fieldValidation.job_title}\n                            onChange={(e) => handleCommonFields(e, 'job_title')}\n                            className={classes.input}\n                            value={dataTmp.job_title}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n\n                        <Grid container>\n                            {\n                                fieldValidation.job_title !== null && fieldValidation.job_title === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.job_title}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n\n\n                <Grid container spacing={5}>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Section</Typography>\n                        <TextField type=\"text\"\n                            onChange={(e) => handleCommonFields(e, 'section')}\n                            className={classes.input}\n                            value={dataTmp.section}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography className={classes.label}>Location</Typography>\n                        <TextField type=\"text\"\n                            error={fieldValidation.location !== null ? !fieldValidation.location : fieldValidation.location}\n                            onChange={(e) => handleCommonFields(e, 'location')}\n                            className={classes.input}\n                            value={dataTmp.location}\n                            fullWidth\n                            id=\"outline-username\"\n                            variant=\"outlined\" />\n\n                        <Grid container>\n                            {\n                                fieldValidation.location !== null && fieldValidation.location === false  ?\n                                    <>\n                                    <Grid item xs={10} md={10} lg={10}>\n                                        <span className={classes.errorLabel}>{errorMessages.location}</span>\n                                    </Grid>\n                                    <Grid item xs={2} md={2} lg={2} style={{textAlign: 'right'}}>\n                                        <ErrorIcon fontSize='small' className={classes.errorIcon} />\n                                    </Grid>\n                                    </>\n                                : ''\n                            }\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n\n                <UI.FloatingFooter>\n                    <Grid item xs={12} className={classes.userAlignRight}>\n                        <Button\n                            onClick={() => {setMode('view')}}\n                            className={classes.cancelAdd}\n                            variant=\"contained\" color=\"primary\">\n                        Cancel\n                        </Button>\n                        <Button\n                            disabled={Object.keys(dataChanges).length > 0 && dataChanges.constructor === Object || userData.profile_pic !== dataTmp.profile_pic ? false : true}\n                            onClick={handleSubmit}\n                            className={classes.saveButton}\n                            variant=\"contained\" color=\"primary\">\n                        Save Changes\n                        </Button>\n                    </Grid>\n                </UI.FloatingFooter>\n\n                {/* Modals */}\n\n                <ModalComponent\n                    isModalOpen={cModalProps.open}\n                    onClose={cModalProps.onClose}\n                    message={cModalProps.message}\n                    title={cModalProps.title}\n                    buttons={\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <Grid item xs={6}>\n                                <Button onClick={cModalProps.onClose} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button onClick={cModalProps.onSubmit} className={classes.button} variant={'contained'} color={'primary'}>Save</Button>\n                            </Grid>\n                        </Grid>\n                    }\n                />\n                <UI.MsgModal\n                    isModalOpen={modalProps.open}\n                    title={modalProps.title}\n                    message={modalProps.message}\n                    onClose={modalProps.onOkay}\n                />\n                <ModalComponent\n                    isModalOpen={resetModalOpen}\n                    onClose={() => setResetModalOpen(false)}\n                    message={'Do you really want to reset the password of this user?'}\n                    title={'Reset Password'}\n                    buttons={\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <Grid item xs={6}>\n                                <Button onClick={() => { setResetModalOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    className={classes.button}\n                                    variant={'contained'}\n                                    color={'primary'}\n                                    onClick={() => {\n                                        handleOnResetPassword()\n                                    }}\n                                >Reset</Button>\n                            </Grid>\n                        </Grid>\n                    }\n                />\n\n            <ModalComponent\n                isModalOpen={unlockModal}\n                onClose={closeUnlockModal}\n                message={`Are you sure you want to grant ${props.userData.first_name} access to the system again?`}\n                title={'Unlock User'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={closeUnlockModal} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={() => {\n                                    unlockOnSubmit()\n                                }}\n                            >Unlock</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            <ModalComponent\n                isModalOpen={unlockModalProps.open}\n                onClose={closeUnlockModalProps}\n                message={unlockModalProps.message}\n                title={unlockModalProps.title}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}\n                                onClick={closeUnlockModalProps}\n                            >Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport { ViewAccount } from './ViewAccount';\nimport { EditAccount } from './EditAccount';\n\ninterface IProps {\n    mode: string\n    userData: any\n    setMode: (e) => void\n    userIdDb: string\n    setUserData: (value: any) => void\n}\n\nexport const AccountTab: React.FC<IProps> = (props: IProps):JSX.Element => {\n    const {\n        userData,\n        mode,\n        setMode,\n        userIdDb,\n        setUserData\n    } = props;\n\n    return (\n        <>\n            {\n                mode === 'view' ?\n                    <ViewAccount\n                        setUserData={setUserData}\n                        userData = {userData}\n                        userIdDb = {userIdDb} /> \n                : mode === 'edit' ?\n                    <EditAccount\n                        setUserData={setUserData}\n                        setMode={setMode}\n                        userData = {userData}/> \n                : ''\n            }\n        </>\n    )\n}","const breadCrumbs = [\n    'ACCOUNT'\n];\n\nconst sideBarItems = [\n    {\n        name: 'Account',\n        // label: 'POLICY'\n    },\n    {\n        name: 'Activity Logs',\n        disabled: true\n        // label: 'GROUPIE'\n    },\n    {\n        name: 'Audit Logs',\n        disabled: true\n        // label: 'GROUPIE'\n    },\n];\n\nconst departments = [\n    {\n      value: 'Department 1',\n      label: 'Department 1',\n    },\n    {\n      value: 'Department 2',\n      label: 'Department 2',\n    },\n    {\n      value: 'Department 3',\n      label: 'Department 3',\n    },\n    {\n      value: 'Department 4',\n      label: 'Department 4',\n    },\n];\n\nexport {\n    breadCrumbs,\n    sideBarItems,\n    departments\n}","import React from 'react'\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { Store } from 'Components/Stores/IStore';\n// RELATIVE IMPORTS \nimport { AccountActions } from './AccountActions';\nimport { IAccount } from './IAccount';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { getLastSegment } from 'Components/app.const'\nimport { getUserDetails } from 'Pages/API/Calls/User';\nimport { accountsPageStyles } from './style'\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n    Grid,\n    // Button,\n    IconButton,\n    Avatar,\n    Modal,\n    Link,\n    List,\n    Fade,\n    ListItemText,\n    Button,\n    Backdrop\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Dropzone from 'react-dropzone'\nimport { faFileUpload, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { AccountTab } from './Tabs/Account';\nimport * as pageConst from './accounts.const'\nimport { Utils } from '@hims/core';\nimport { UI } from 'Components'\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        padding: '32px 24px 25px',\n    },\n    main: {\n        backgroundColor: '#F5F7FB',\n        padding: '32px 24px',\n        paddingBottom: '40px'\n    },\n    headMain: {\n\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n    },\n    item: {\n        padding: '10px, 24px 25px',\n    },\n    label: {\n        marginBottom: \"10px\"\n    },\n    input: {\n        marginBottom: \"2px\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px',\n        margin: '5px',\n        display: 'inline-block',\n    },\n    selectedText: {\n        paddingRight: '5px'\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n    inputLabel: {\n        color: '#272e4c',\n        fontSize: '12px',\n        marginBottom: '5px',\n        marginTop: '20px'\n    },\n    preview: {\n        width: '83px',\n        height: '83px',\n        border: '1px solid #707070 ',\n        position: 'relative',\n        backgroundColor: '#ffffff',\n        borderRadius: '100%',\n        padding: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:focus': {\n            outline: 0\n        }\n    },\n    dropzone: {\n        width: '296px',\n        height: '107px',\n        backgroundColor: '#E6E8EE',\n        borderRadius: '5px',\n        border: '2px dashed #1E20714D',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '25px'\n    },\n    centerDrop: {\n        display: 'flex',\n    },\n    centerDropLabels: {\n        marginLeft: '10px',\n        maxWidth: '140px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    centerDropLabel: {\n        display: 'block',\n        colro: '#272E4C',\n        fontSize: 12,\n        marginTop: -2\n    },\n    errorLabel: {\n        color: '#E53935',\n        fontSize: '12px'\n    },\n    editIconContainer: {\n        position: 'absolute',\n        right: '-3px',\n        bottom: '0px',\n        background: '#3AB77D',\n        borderRadius: '100%',\n        width: 24,\n        height: 24,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n    },\n    editIcon: {\n        color: '#ffffff',\n        width: 13,\n        height: 13\n    },\n    imageDropzone: {\n        width: '18px',\n        height: '24px',\n    },\n    previewPhoto: {\n        width: '83px',\n        height: '83px',\n        borderRadius: '100%'\n    },\n    saveButton: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#fff',\n    },\n    cancelAdd: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#ffffff',\n        marginRight: '20px',\n        backgroundColor: '#3C394A',\n        '&:hover': {\n            backgroundColor: '#302e3c'\n        }\n    },\n    closeButton: {\n        color: '#272E4C',\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        '&hover': {\n            fontSize: '0.875rem',\n        }\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        padding: theme.spacing(2, 4, 3),\n        '&:focus': {\n            outline: 0\n        }\n    },\n    cancelButton: {\n        width: '135px',\n        fontSize: '14px',\n    },\n    userAlignRight: {\n        textAlign: 'right',\n    },\n    inputLabel1: {\n        color: '#272e4c',\n        fontSize: '15px',\n        marginBottom: '20px',\n        marginTop: '35px'\n    },\n    errorIcon: {\n        color: '#E53935'\n    }\n}));\n\nexport const Account: React.FC = (): JSX.Element => {\n    const classes = accountsPageStyles();\n    const classes2 = useStyles();\n    React.useEffect(() => {\n        fetchUser();\n        getUserIdDb();\n    }, [])\n\n    const fetchUser = async () => {\n        setIsFetching(true)\n        let user = await getUserDetails(getLastSegment())\n            .catch((err) => {\n                setModalProps({\n                    ...modalProps,\n                    open: true,\n                    title: 'Error',\n                    message: err.message\n                })\n            })\n\n        if (user) {\n            setPhoto(user.body.profile_pic)\n            setUserDetails(user.body);\n        }\n        setIsFetching(false)\n    }\n\n    const handleClose2 = () => {\n        setModalProps({\n            ...modalProps,\n            open: false\n        })\n    };\n\n    const getUserIdDb = () => {\n        Utils.StorageService('user_data', 'user_id').then(response => {\n            setUserIdDb(response.result);\n            console.log('reponse', response, 'wew')\n        })\n    }\n\n    const editRole = () => {\n        setAccountMode('edit');\n    }\n\n    const activeSideBarItem = (item) => {\n        setActiveSidebar(item);\n    }\n\n    const handleAccountPhoto = (event: any) => {\n        const validFiles = ['image/jpeg', 'image/jpg,', 'image/png'];\n\n        if (validFiles.includes(event[0].type)) {\n            setPhoto(event[0]);\n        } else {\n            setModalProps({\n                ...modalProps,\n                open: true,\n                title: 'Error selecting image',\n                message: 'Invalid file extension.',\n                method: handleClose2\n            })\n        }\n    };\n\n    const closeUploadModal = () => {\n        setUploadModal(false)\n        setPhoto(null)\n    }\n\n    const handleUpload = () => {\n        let reader = new FileReader();\n        reader.readAsDataURL(photo);\n        reader.onload = () => {\n            setUserDetails({\n                ...userDetails,\n                profile_pic: (reader.result as string).split(',')[1]\n            })\n            closeUploadModal();\n        };\n    }\n\n\n    // DECLARE STATES\n    const [photo, setPhoto] = React.useState<any>();\n    const [uploadModal, setUploadModal] = React.useState(false);\n    const [userIdDb, setUserIdDb] = React.useState('');\n    const [isFetching, setIsFetching] = React.useState(false);\n    const [userDetails, setUserDetails] = React.useState<IAccount.userDetails>({\n        department: '',\n        email: '',\n        employee_id: '',\n        first_name: '',\n        group: {},\n        is_locked: false,\n        job_title: '',\n        last_name: '',\n        location: '',\n        main_module: '',\n        main_role: '',\n        middle_name: '',\n        position: '',\n        profile_pic: '',\n        role: [],\n        section: '',\n        status: '',\n        user_id: '',\n        username: '',\n        _id: '',\n    });\n\n    const [activeSidebar, setActiveSidebar] = React.useState<any>();\n    const [accountMode, setAccountMode] = React.useState<string>('view');\n    const [modalProps, setModalProps] = React.useState<any>({\n        open: false,\n        title: '',\n        message: '',\n        onOkay: () => { setModalProps({ ...modalProps, open: false }) }\n    })\n\n    const editIconContainer = {\n        position: 'absolute',\n        right: '15px',\n        bottom: '15px',\n        background: '#3AB77D',\n        borderRadius: '100%',\n        width: 24,\n        height: 24,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer'\n    }\n\n    return (\n        <>\n            {isFetching && <UI.LoadingIndicator />}\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={uploadModal}\n                className={classes2.modal}\n                onClose={closeUploadModal}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}>\n                <Fade in={uploadModal}>\n                    <div className={classes2.paper}>\n                        <List>\n                            <ListItemText>\n                                <Link\n                                    className={classes2.closeButton}\n                                    onClick={closeUploadModal}\n                                >\n                                    <FontAwesomeIcon icon={faTimes} />\n                                </Link>\n                            </ListItemText>\n                        </List>\n                        <p id=\"transition-modal-title\"\n                            style={{ fontSize: \"20px\" }}>\n                            <b>Upload Picture</b>\n                        </p>\n                        <Dropzone\n                            multiple={false}\n                            onDrop={(event) => {\n                                // const base64 = getBase64(event)\n                                handleAccountPhoto(event)\n                            }}>\n                            {({ getRootProps, getInputProps }) => (\n                                <section {...getRootProps({ className: `dropzone ${classes.dropzone}` })}>\n                                    <div >\n                                        <input {...getInputProps()}\n                                        />\n                                        <div className={classes2.centerDrop}>\n                                            <FontAwesomeIcon\n                                                style={{ opacity: 0.56 }}\n                                                icon={faFileUpload}\n                                                color='#272E4C'\n                                                size='2x' />\n                                            <div className={classes2.centerDropLabels}>\n                                                {\n                                                    photo && photo instanceof File ? photo.name :\n                                                        <>\n                                                            <span className={classes2.centerDropLabel}>Drag or drop file.</span>\n                                                            <span className={classes2.centerDropLabel}>.jpg or .png</span>\n                                                        </>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </section>\n                            )}\n                        </Dropzone>\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                                <Button\n                                    className={classes2.cancelButton}\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={closeUploadModal}>\n                                    Cancel\n                        </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    // onClick={handleOpen2}\n                                    onClick={handleUpload}\n                                    className={classes2.saveButton}\n                                    variant=\"contained\"\n                                    color=\"primary\">\n                                    Upload\n                      </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Fade>\n            </Modal>\n\n            <SubHeader\n                headingTitle={userDetails.username}\n                breadCrumbsArray={pageConst.breadCrumbs}\n                buttonFunc={editRole}\n                buttonName={'Edit Account'}\n                layoutType={'layout_1'}\n                enableButton={accountMode === 'edit' ? false : true} />\n\n            <Grid\n                className={classes.bodyContainer}\n                container\n                xs={12}>\n                <Grid\n                    item\n                    xs={3}\n                    lg={2}\n                    className={classes.sideBarContainer}>\n                    <IconButton edge=\"end\" onClick={() => { }}>\n                        <Avatar\n                            className={classes.userImage}\n                            src={userDetails.profile_pic !== 'DEFAULT_PIC' ? `data:image/jpeg;base64,${userDetails.profile_pic}` : 'user.jpg'}\n                            alt=\"avatar\" />\n                        {\n                            accountMode === 'edit' &&\n                            <span\n                                onClick={() => setUploadModal(true)}\n                                //@ts-ignore\n                                style={editIconContainer}>\n                                <CreateIcon style={{\n                                    color: '#ffffff',\n                                    width: 13,\n                                    height: 13\n                                }} />\n                            </span>\n                        }\n                    </IconButton>\n                    <SideMenu\n                        items={pageConst.sideBarItems}\n                        activeItems={activeSideBarItem}\n                    ></SideMenu>\n                </Grid>\n                <Grid item xs={9} lg={10} className={classes.contentContainer}>\n                    <AccountTab\n                        setMode={setAccountMode}\n                        userIdDb={userIdDb}\n                        userData={userDetails}\n                        setUserData={setUserDetails}\n                        mode={accountMode} />\n                </Grid>\n                {activeSidebar}\n            </Grid>\n\n            <UI.MsgModal\n                isModalOpen={modalProps.open}\n                title={modalProps.title}\n                message={modalProps.message}\n                onClose={modalProps.onOkay}\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = (state: Store) => state.users;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    Map: bindActionCreators(AccountActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };"],"sourceRoot":""}