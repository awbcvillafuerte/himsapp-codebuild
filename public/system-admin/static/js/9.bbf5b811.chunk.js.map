{"version":3,"sources":["../node_modules/@material-ui/icons/Visibility.js","Pages/Accounts/ActionConsts.ts","Pages/Accounts/AccountsActions.ts","Pages/Accounts/style.tsx","Pages/Accounts/Components/ChangePassword.tsx","Pages/Accounts/Components/Account.tsx","Pages/Accounts/Components/AddRoleBody.tsx","Pages/Accounts/Components/GroupsAndUsers.tsx","Pages/Accounts/AccountsPage.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ActionConsts","ResetReducer","SetReducer","AccountsActions","payload","type","accountsPageStyles","makeStyles","theme","mainContainer","padding","main","backgroundColor","position","headMain","gridContainer","spacing","paddingBottom","gridContainerNoPadding","sectionTitle","fontSize","fontWeight","color","subSectionTitle","editBtn","width","alignRight","textAlign","sideBarContainer","borderRight","paddingRight","contentContainer","paddingLeft","sideBarLists","margin","listStyle","sideBarLink","display","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","height","marginTop","marginBottom","border","borderRadius","justifyContent","alignItems","flexDirection","inputLabel","keyboardDatePicker","checkbox","radio","appBar","top","bottom","breakpoints","up","grow","flexGrow","button","minHeight","minWidth","buttonTitle","buttonSubTitle","menuList","menuLink","LinkActive","textDecoration","changePasswordModalStyle","dialog","dialogAction","dialogContentContainer","container","closeButton","right","palette","grey","dialogTitle","inputTextField","iconEye","labelNote","errorMessage","errorIcon","ChangePassword","props","visible","onClose","userId","classes","handleTextFieldChange","e","prop","target","setPasswordValues","passwordValues","resetPasswordValues","oldPassword","newPassword","confirmPassword","setOerror","oError","error","setNerror","nError","setCerror","cError","validatePasswordValue","password","length","confirmNewPassword","newP1","newP2","React","useState","message","title","modalDone","setModalDone","Dialog","open","aria-labelledby","maxWidth","className","Grid","justify","direction","item","xs","DialogTitle","disableTypography","id","Box","IconButton","aria-label","onClick","DialogContent","errorMsg","label","onChange","note","DialogActions","Button","variant","constructParams","old_password","new_password","confirm_password","changePassword","then","data","console","log","status","catch","err","MsgModal","isModalOpen","visibile","TextFieldWithEyeIcon","options","setType","InputLabel","htmlFor","OutlinedInput","labelWidth","endAdornment","InputAdornment","style","useStyles","saveButton","cancelButton","marginRight","background","userAlignRight","Account","styles","userName","setUsername","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","employeeIdNumber","setEmployeeIdNumber","department","setDepartment","jobPosition","setJobPosition","section","setSection","location","setLocation","email","setEmail","setPassword","setStatus","effectivityDate","setEffectivityDate","primaryRoleAndModule","setPrimaryRoleAndModule","userGroups","setUserGroups","rolesFromUserGroups","setRolesFromUserGroups","otherRoles","setOtherRoles","expiryDate","setExpiryDate","setUserId","tempRole","newDetails","getUserDetails","window","href","substring","lastIndexOf","body","username","first_name","middle_name","last_name","employee_id","job_position","is_locked","effectivity_date","main_role","main_module","user_groups","roles","user_id","i","role","push","name","join","expiry_date","mode","defaultSelectOption","inputTypes","fieldInputType","setFieldInputType","handleFieldInputTypeChange","event","ChangePasswordModalVisibility","setChangePasswordModalVisibility","openChangePasswordModal","onSaveChanges","Typography","Link","disabled","views","Date","format","inputVariant","menuItems","invalidFields","includes","selectedItems","xIcon","AddRoleBody","handleOnSearch","list","arr","state","setState","handleRemoveItem","index","splice","handleOnSaveItems","onSave","comboArray","this","buttonsContainer","selectedContainer","selectedText","ReactSearch","searchLabel","onSearch","comboBoxMode","comboListsArray","map","icon","faTimesCircle","GroupsAndUsers","rows","viewOnly","activeItem","setActiveItem","activeClass","setActiveClass","showBlock","setShowBlock","isModalRemoveOpen","setIsModalRemoveOpen","classNames","handleMenuClick","placeholder","ReactTable","group_id","group","users_in_group","columns","columnExtensions","columnName","wordWrapEnabled","align","sortingStateColumnExtensions","sortingEnabled","onDeleteRow","row","user_account","last_activity_date","handleClose","items","ModalComponent","buttons","AccountsPage","setViewOnly","loading","setLoading","setMode","isModalConfirmExitOpen","setIsModalConfirmExitOpen","isModalConfirmSaveOpen","setIsModalConfirmSaveOpen","handleModalConfirmationClose","SubHeader","headingTitle","breadCrumbsArray","buttonFunc","buttonName","layoutType","enableButton","SideMenu","activeItems","mapStateToProps","accounts","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"wHAEA,IAAIA,EAAyB,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASN,EAAuB,EAAQ,IAIxCO,GAAW,EAFMP,EAAuB,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,sNACD,cAEJN,EAAQE,QAAUE,G,2ECjBLG,EACF,CACTC,aAAc,wBACdC,WAAY,uBCSDC,EACP,SAACC,GAAD,MAAkB,CACtBA,UACAC,KAAML,EAAsBE,a,0ECbjBI,EAAqBC,YAAW,SAAAC,GAAK,MAAK,CACtDC,cAAe,CACdC,QAAS,kBAEVC,KAAM,CACLC,gBAAiB,UACjBF,QAAS,YACTG,SAAU,YAEXC,SAAU,GAGVC,cAAe,CACdL,QAASF,EAAMQ,QAAQ,GACvBC,cAAe,QAEhBC,uBAAwB,CACvBR,QAASF,EAAMQ,QAAQ,IAExBG,aAAc,CACbC,SAAU,GACVC,WAAY,IACZC,MAAO,WAERC,gBAAiB,CAChBH,SAAU,GACVC,WAAY,IACZC,MAAO,WAERE,QAAS,CACRC,MAAO,QACPL,SAAU,OACVE,MAAO,QAERI,WAAY,CACXC,UAAW,SAEZC,iBAAkB,CACjBC,YAAa,iBACbC,aAAc,QAEfC,iBAAkB,CACjBC,YAAa,QAEdC,aAAc,CACbvB,QAAS,EACTwB,OAAQ,EACRC,UAAW,QAEZC,YAAa,CACZd,MAAO,UACPY,OAAQ,WACRG,QAAS,SAEVC,gBAAiB,CAChBlB,SAAU,GACVC,WAAY,IACZC,MAAO,WAERiB,iBAAkB,CACjBC,KAAM,QAEPC,4BAA6B,CAC5BrB,SAAU,GACVC,WAAY,IACZC,MAAO,sBACPoB,OAAQ,WAETC,+BAAgC,CAC/BvB,SAAU,GACVC,WAAY,IACZC,MAAO,wBACPoB,OAAQ,WAETE,SAAU,CACTnB,MAAO,QACPoB,OAAQ,OACRC,UAAW,OACXC,aAAc,OACdC,OAAQ,oCACRC,aAAc,MACdrC,gBAAiB,UACjBU,MAAO,UACPe,QAAS,OACTa,eAAgB,SAChBC,WAAY,SACZC,cAAe,UAEhBC,WAAY,CACX/B,MAAO,UACPF,SAAU,OACV2B,aAAc,OAEfO,mBAAoB,CACnBR,UAAW,OACXC,aAAc,OACdtB,MAAO,SAER8B,SAAU,CACT,gBAAiB,CAChBjC,MAAO,YAGTkC,MAAO,CACN,gBAAiB,CAChBlC,MAAO,YAGTmC,OAAO,aACNC,IAAK,OACLC,OAAQ,EACRX,OAAQ,oBACRpC,gBAAiB,0BAChBJ,EAAMoD,YAAYC,GAAG,MAAQ,CAC7BpC,MAAO,sBAGTqC,KAAM,CACLC,SAAU,GAEXC,OAAQ,CACP9B,OAAQ,SACR+B,UAAW,OACXC,SAAU,SAEXC,YAAa,CACZ9C,WAAY,IACZD,SAAU,IAEXgD,eAAgB,CACf/C,WAAY,IACZD,SAAU,GAEXiD,SAAU,CACThC,QAAS,eACT3B,QAAS,oBAEV4D,SAAU,CACThD,MAAO,UACPe,QAAS,QACTjB,SAAU,SACV,UAAW,CACVE,MAAO,YAGTiD,WAAY,CACXjD,MAAO,UACPD,WAAY,OACZmD,eAAgB,gBAILC,EAA2BlE,YAAW,SAAAC,GAAK,MAAK,CAC5DkE,OAAQ,GACRC,aAAc,CACb5B,aAAcvC,EAAMQ,QAAQ,GACtB8B,UAAWtC,EAAMQ,QAAQ,GACzBkC,eAAe,UAEtB0B,uBAAwB,CACjBnD,MAAO,QAEdoD,UAAW,CACJ/C,aAAa,OACbE,YAAY,OACZP,MAAO,SAEdqD,YAAa,CACNjE,SAAU,WACVkE,MAAOvE,EAAMQ,QAAQ,GACrB0C,IAAKlD,EAAMQ,QAAQ,GACnBM,MAAOd,EAAMwE,QAAQC,KAAK,MAEjCC,YAAa,CACNpC,UAAWtC,EAAMQ,QAAQ,GAEzBI,SAAU,OACVE,MAAO,UACbD,WAAY,KAEb2C,OAAQ,CACP9B,OAAQ,SACR+B,UAAW,OACXC,SAAU,SAEXb,WAAY,CACX/B,MAAO,UACPF,SAAU,OACV2B,aAAc,OAEfoC,eAAgB,CACf1D,MAAO,OACPqB,UAAWtC,EAAMQ,QAAQ,GACzB+B,aAAcvC,EAAMQ,QAAQ,GAC5Bc,aAAc,GAEfsD,QAAS,CACR9D,MAAO,WAER+D,UAAW,CACV/D,MAAO,UACPF,SAAU,IAEXkE,aAAc,CACbhE,MAAO,UACPF,SAAU,IAEXmE,UAAW,CACVjE,MAAO,c,mtBCvKF,IAAMkE,EACU,SAACC,GAA+B,IAS3CC,EAGAD,EAHAC,QACAC,EAEAF,EAFAE,QACAC,EACAH,EADAG,OAEEC,EAAUpB,IAGVqB,EAAwB,SAACC,EAAGC,GAAU,IAChCtG,EAAUqG,EAAEE,OAAZvG,MAERwG,EAAkB,EAAD,GAAMC,EAAN,eAAuBH,EAAOtG,MAI7C0G,EAAsB,WACxBF,EAAkB,CACdG,YAAa,GACbC,YAAa,GACbC,gBAAiB,KAErBC,EAAU,EAAD,GACFC,EADE,CAELC,OAAO,KAEXC,EAAU,EAAD,GACFC,EADE,CAELF,OAAO,KAEXG,EAAU,EAAD,GACFC,EADE,CAELJ,OAAO,KAGXf,KAiEEoB,EAAwB,SAACC,GAG3B,QAAIA,EAASC,OAFK,IAShBC,EAAqB,SAACC,EAAeC,GACvC,MAAe,KAAVD,GAA0B,KAAVC,GAAkBD,IAAUC,GAtHN,EA6HHC,IAAMC,SAAS,CACvDjB,YAAa,GACbC,YAAa,GACbC,gBAAiB,KAhI0B,mBA6HxCJ,EA7HwC,KA6HxBD,EA7HwB,OAkInBmB,IAAMC,SAAc,CAC5CC,QAAS,GACTb,OAAO,IApIoC,mBAkIxCD,EAlIwC,KAkIhCD,EAlIgC,OAsInBa,IAAMC,SAAc,CAC5CC,QAAS,GACTb,OAAO,IAxIoC,mBAsIxCE,EAtIwC,KAsIhCD,EAtIgC,OA0InBU,IAAMC,SAAc,CAC5CC,QAAS,GACTb,OAAO,IA5IoC,mBA0IxCI,EA1IwC,KA0IhCD,EA1IgC,OA+IbQ,IAAMC,SAAc,CAClDC,QAAS,GACTC,MAAO,GACP9B,SAAS,IAlJkC,mBA+IxC+B,EA/IwC,KA+I7BC,EA/I6B,KA6J/C,OACI,oCACI,kBAACC,EAAA,EAAD,CACIC,KAAMlC,EACNC,QAASS,EACTyB,kBAAgB,oBAChBC,SAAS,KACTC,UAAWlC,EAAQnB,QAEnB,kBAACsD,EAAA,EAAD,CACInD,WAAS,EACTkD,UAAWlC,EAAQhB,UACnBoD,QAAQ,aACR9E,WAAW,aACX+E,UAAU,UACV,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACT,kBAACC,EAAA,EAAD,CACIN,UAAWlC,EAAQX,YACnBoD,mBAAmB,EACnBC,GAAG,qBACH,kBAACC,EAAA,EAAD,CAAKnH,WAAY,KAAjB,mBACA,kBAACoH,EAAA,EAAD,CACIC,aAAW,QACXX,UAAWlC,EAAQf,YACnB6D,QAASvC,GACT,kBAAC,IAAD,SAIZ,kBAAC4B,EAAA,EAAD,CACIG,MAAI,EACJC,IAAE,EACFL,UAAWlC,EAAQjB,wBACnB,kBAACgE,EAAA,EAAD,KACI,kBAACZ,EAAA,EAAD,CACInD,WAAS,EACT7D,QAAS,EACTiH,QAAQ,gBACR9E,WAAW,cACX,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC,EAAD,CACIG,GAAG,cACH7B,MAAOD,EAAOC,MACdmC,SAAUpC,EAAOc,QACjBuB,MAAM,0BACNpJ,MAAOyG,EAAeE,YACtB0C,SAAUjD,EACVD,QAASA,KAEjB,kBAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC,EAAD,CACIG,GAAG,cACH7B,MAAOE,EAAOF,MACdmC,SAAUjC,EAAOW,QACjBuB,MAAM,0BACNE,KAAK,qCACLtJ,MAAOyG,EAAeG,YACtByC,SAAUjD,EACVD,QAASA,KAEjB,kBAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC,EAAD,CACIG,GAAG,kBACH7B,MAAOI,EAAOJ,MACdmC,SAAU/B,EAAOS,QACjBuB,MAAM,4BACNpJ,MAAOyG,EAAeI,gBACtBwC,SAAUjD,EACVD,QAASA,OAIzB,kBAACoD,EAAA,EAAD,CAAelB,UAAWlC,EAAQlB,cAC9B,kBAACqD,EAAA,EAAD,CACInD,WAAS,EACToD,QAAQ,SACR9E,WAAW,UACX,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACc,EAAA,EAAD,CACIP,QAASvC,EACT2B,UAAWlC,EAAQ7B,OACnBmF,QAAS,WACT7H,MAAO,aAJX,WAMJ,kBAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACc,EAAA,EAAD,CACIP,QAtMhB,WAAM,IAEdtC,EAA8CF,EAA9CE,YAAaC,EAAiCH,EAAjCG,YAAaC,EAAoBJ,EAApBI,gBAsBlC,GAnBKQ,EAAsBV,GACtBG,EAAU,CAAEe,QAAS,GAAIb,OAAO,IADIF,EAAU,CAAEe,QAAS,gBAAiBb,OAAO,IAGjFK,EAAsBT,GAEvBK,EAAU,CAAEY,QAAS,GAAIb,OAAO,IAFKC,EAAU,CAAEY,QAAS,gBAAiBb,OAAO,IAKjFK,EAAsBR,GAEnBW,EAAmBZ,EAAaC,IAChCI,EAAU,CAAEY,QAAS,GAAIb,OAAO,IAChCG,EAAU,CAAEU,QAAS,GAAIb,OAAO,MAEhCC,EAAU,EAAD,GAAMC,EAAN,CAAcF,OAAO,KAC9BG,EAAU,CAAEU,QAAS,8BAA0Bb,OAAO,KAPjBG,EAAU,CAAEU,QAAS,gBAAiBb,OAAO,IAWtFK,EAAsBV,IAAgBU,EAAsBT,IACzDS,EAAsBR,IAAoBW,EAAmBZ,EAAaC,GAAkB,CAC/F,IAAI6C,EAAkB,CAClBC,aAAchD,EACdiD,aAAchD,EACdiD,iBAAkBhD,GAGtBiD,YAAeJ,EAAiBxD,GAAQ6D,KAAK,SAACC,GAC1CC,QAAQC,IAAIF,GACQ,MAAhBA,EAAKG,OACLnC,EAAa,CACTF,MAAO,0BACPD,QAAS,+CACT7B,SAAS,IAGbgC,EAAa,CACTF,MAAO,QACPD,QAAS,4DACT7B,SAAS,MAGlBoE,MAAM,SAACC,GACNrC,EAAa,CACTF,MAAO,QACPD,QAASwC,EAAIxC,QACb7B,SAAS,QAoJWqC,UAAWlC,EAAQ7B,OACnBmF,QAAS,YACT7H,MAAO,WAJX,gBAYxB,kBAAC,IAAG0I,SAAJ,CACIC,YAAaxC,EAAU/B,QACvBC,QA3GY,WACpB+B,EAAa,CACTH,QAAS,GACTC,MAAO,GACP0C,UAAU,KAwGN1C,MAAOC,EAAUD,MACjBD,QAASE,EAAUF,YAQjC4C,EAAiD,SAACC,GAA0C,IAE1FvE,EAQAuE,EARAvE,QACAiD,EAOAsB,EAPAtB,MACAC,EAMAqB,EANArB,SACArJ,EAKA0K,EALA1K,MACAsJ,EAIAoB,EAJApB,KACAT,EAGA6B,EAHA7B,GACA7B,EAEA0D,EAFA1D,MACAmC,EACAuB,EADAvB,SATyF,EAYrExB,IAAMC,SAAiB,YAZ8C,mBAYtFjH,EAZsF,KAYhFgK,EAZgF,KAsB7F,OACI,oCACI,kBAACC,EAAA,EAAD,CACIvC,UAAWlC,EAAQxC,WACnBkH,QAAQ,WAAWzB,GACvB,0BAAMf,UAAWlC,EAAQR,WAAY2D,GAAQA,GAC7C,kBAACwB,EAAA,EAAD,CACIjC,GAAIA,EACJ7B,MAAOA,EACPrG,KAAMA,EACN0I,SAAU,SAAChD,GAAD,OAAOgD,EAAShD,EAAGwC,IAC7B7I,MAAOA,EACPqI,UAAWlC,EAAQV,eACnBsF,WAAY,EAEZC,aACI,kBAACC,EAAA,EAAD,CAAgB9J,SAAS,OACrB,kBAAC4H,EAAA,EAAD,CACIC,aAAW,6BACXC,QA3BQ,WAExB0B,EADS,aAAThK,EACQ,OAEA,cAwBkB,SAATA,EAAkB,kBAAC,IAAD,CAAY0H,UAAWlC,EAAQT,UAAc,kBAAC,IAAD,CAAe2C,UAAWlC,EAAQT,cAK9GsB,GACA,kBAACsB,EAAA,EAAD,CAAMnD,WAAS,GACX,kBAACmD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,0BAAML,UAAWlC,EAAQP,cAAeuD,IAE5C,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGwC,MAAO,CAAEjJ,UAAW,UAClC,kBAAC,IAAD,CAAWoG,UAAWlC,EAAQN,UAAWnE,SAAS,cCxVpEyJ,EAAYtK,YAAW,iBAAO,CAChCuK,WAAY,CACRrJ,MAAO,QACPL,SAAU,OACVE,MAAO,QAEXyJ,aAAc,CACVtJ,MAAO,QACPL,SAAU,OACV4J,YAAa,OACb1J,MAAO,OACP2J,WAAY,WAEhBC,eAAgB,CACZvJ,UAAW,YAeNwJ,EAAoC,SAAC1F,GAC9C,IAAM2F,EAASP,IADsE,EAuBrDvD,mBAAS,IAvB4C,mBAuB9E+D,EAvB8E,KAuBpEC,EAvBoE,OAwBnDhE,mBAAS,IAxB0C,mBAwB9EiE,EAxB8E,KAwBnEC,EAxBmE,OAyBjDlE,mBAAS,IAzBwC,mBAyB9EmE,EAzB8E,KAyBlEC,EAzBkE,OA0BrDpE,mBAAS,IA1B4C,mBA0B9EqE,EA1B8E,KA0BpEC,EA1BoE,OA2BrCtE,mBAAS,IA3B4B,mBA2B9EuE,EA3B8E,KA2B5DC,EA3B4D,OA4BjDxE,mBAAS,IA5BwC,mBA4B9EyE,EA5B8E,KA4BlEC,EA5BkE,OA6B/C1E,mBAAS,IA7BsC,mBA6B9E2E,EA7B8E,KA6BjEC,EA7BiE,OA8BvD5E,mBAAS,IA9B8C,mBA8B9E6E,EA9B8E,KA8BrEC,EA9BqE,OA+BrD9E,mBAAS,IA/B4C,mBA+B9E+E,EA/B8E,KA+BpEC,EA/BoE,OAgC3DhF,mBAAS,IAhCkD,mBAgC9EiF,EAhC8E,KAgCvEC,EAhCuE,QAiCrDlF,mBAAS,IAjC4C,qBAiC9EN,GAjC8E,MAiCpEyF,GAjCoE,SAkCzDnF,mBAAS,IAlCgD,qBAkC9EuC,GAlC8E,MAkCtE6C,GAlCsE,SAmCvCpF,mBAAS,IAnC8B,qBAmC9EqF,GAnC8E,MAmC7DC,GAnC6D,SAoC7BtF,mBAAS,IApCoB,qBAoC9EuF,GApC8E,MAoCxDC,GApCwD,SAqCjDxF,mBAAS,IArCwC,qBAqC9EyF,GArC8E,MAqClEC,GArCkE,SAsC/B1F,mBAAS,IAtCsB,qBAsC9E2F,GAtC8E,MAsCzDC,GAtCyD,SAuCjD5F,mBAAS,IAvCwC,qBAuC9E6F,GAvC8E,MAuClEC,GAvCkE,SAwCjD9F,mBAAS,IAxCwC,qBAwC9E+F,GAxC8E,MAwClEC,GAxCkE,SAyCzDhG,mBAAS,IAzCgD,qBAyC9E1B,GAzC8E,MAyCtE2H,GAzCsE,MA0C/EC,GAAgB,GAKhBC,GAAkB,GAExBpG,YAAgB,WACZqG,YALOC,OAAOtB,SAASuB,KAAKC,UAAUF,OAAOtB,SAASuB,KAAKE,YAAY,KAAO,IAOzErE,KAAK,SAACC,GACH4B,EAAY5B,EAAKqE,KAAKC,UACtBxC,EAAa9B,EAAKqE,KAAKE,YACvBvC,EAAchC,EAAKqE,KAAKG,aACxBtC,EAAYlC,EAAKqE,KAAKI,WACtBrC,EAAoBpC,EAAKqE,KAAKK,aAC9BpC,EAActC,EAAKqE,KAAKhC,YACxBG,EAAexC,EAAKqE,KAAKM,cACzBjC,EAAW1C,EAAKqE,KAAK5B,SACrBG,EAAY5C,EAAKqE,KAAK1B,UACtBG,EAAS9C,EAAKqE,KAAKxB,OACnBE,GAAY,SACZC,GAAUhD,EAAKqE,KAAKO,UAAY,SAAW,YAC3C1B,GAAmBlD,EAAKqE,KAAKQ,kBAC7BzB,GAAwBpD,EAAKqE,KAAKS,UAAY,MAAQ9E,EAAKqE,KAAKU,aAChEzB,GAAuC,MAAzBtD,EAAKqE,KAAKW,YAAmC,MAAQhF,EAAKgF,aACxExB,GAA0C,MAAnBxD,EAAKqE,KAAKY,MAA6B,MAAQjF,EAAKqE,KAAKY,OAChFpB,GAAU7D,EAAKqE,KAAKa,SACpB,IAAK,IAAIC,EAAI,EAAGA,EAAInF,EAAKqE,KAAKe,KAAK7H,OAAQ4H,IACvCrB,GAASuB,KAAKrF,EAAKqE,KAAKe,KAAKD,GAAGG,MAGpC5B,GAAcI,GAASyB,KAAK,OAC5B3B,GAAc5D,EAAKqE,KAAKmB,eAoB3BpF,MAAM,SAAApD,GAEH,OADAiD,QAAQC,IAAI,UAAWlD,GAChBA,KAGhB,IApGkF,IAsG7Eb,GAAkBJ,EAAlBI,QAASsJ,GAAS1J,EAAT0J,KAIXC,GAAsB,CAAEJ,KAAM,4BAA6BtP,MAAO,6BA1Ga,GA4GhE4H,mBAAS,CAC1B8H,GACA,CAAEJ,KAAM,aAActP,MAAO,gBAF1B2P,GA5G8E,wBAkHzC/H,mBAAS,IAlHgC,qBAkH9EgI,GAlH8E,MAkH9DC,GAlH8D,MAoH/EC,GAA6B,SAC/BC,GAEAF,GAAkBE,EAAMxJ,OAAOvG,QAvHkD,GAoKX2H,YAAwB,GApKb,qBAoK9EqI,GApK8E,MAoK/CC,GApK+C,MA6K/EC,GAA0B,WAC5BD,IAAiC,IAG/BE,GAAgB,WAsBlBpC,GAAWsB,KAAK,CACZf,SAAU3C,EACV4C,WAAY1C,EACZ2C,YAAazC,EACb0C,UAAWxC,EACXyC,YAAavC,EACbE,WAAYA,EACZsC,aAAcpC,EACdE,QAASA,EACTE,SAAUA,EACVE,MAAOA,EACPvF,SAAUA,GACVsH,UAAWzE,GACX0E,iBAAkB5B,GAClB6B,UAAW3B,GACX4B,YAAa5B,GACb6B,YAAa3B,GACb+B,KAAM3B,GACN+B,YAAa7B,KAEjB1D,QAAQC,IAAI6D,KA4VhB,OACI,gCACI,gBAACzF,EAAA,EAAD,CAAMnD,WAAS,EAACuD,GAAI,GAAIpH,QAAS,GAEhB,SAATmO,GA3VR,gCACI,gBAACnH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAAC0H,EAAA,EAAD,KAAY,sCAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIzE,KAEpB,gBAACrD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,2BACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIjD,MAIpB,gBAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,SACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIvD,KAGpB,gBAACvE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAACuF,EAAA,EAAD,KAAY,yBAAG,yBAAI/C,OAEvB,gBAAC/E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAACuF,EAAA,EAAD,KAAa9I,KAEjB,gBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,0BACA,gBAACuF,EAAA,EAAD,KAAY,yBAAG,yBAAI7C,OAEvB,gBAACjF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,UACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIjG,KACdA,GAAoC,KAA3B,gBAACkG,EAAA,EAAD,qBAEf,gBAAC/H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAACuF,EAAA,EAAD,KAAY,yBAAG,yBAAI3C,OAEvB,gBAACnF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,oBACA,gBAACuF,EAAA,EAAD,KAAY,yBAAInD,MAapB,gBAAC3E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,+BACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIzC,MAapB,gBAACrF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAAC0H,EAAA,EAAD,KAAY,sCAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,cACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIvE,KAEpB,gBAACvD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIrE,KAEpB,gBAACzD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,aACA,gBAACuF,EAAA,EAAD,KAAY,yBAAInE,KAEpB,gBAAC3D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,sBACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIjE,KAEpB,gBAAC7D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,cACA,gBAACuF,EAAA,EAAD,KAAY,yBAAI/D,KACb,gBAAC/D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAClB,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,uBACA,gBAACuF,EAAA,EAAD,KAAY,yBAAI7D,KAEpB,gBAACjE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,WACA,gBAACuF,EAAA,EAAD,KAAY,yBAAI3D,KAEpB,gBAACnE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAACuF,EAAA,EAAD,KAAY,yBAAIzD,MAqPH,SAAT8C,GAtLZ,gCACI,gBAACnH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAAC0H,EAAA,EAAD,KAAY,sCAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAAC,iBAAD,CACIxB,SAAU,SAAChD,GACP4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrB4L,EAAYvF,EAAEE,OAAOvG,QAEzBA,MAAO2L,KAEf,gBAACrD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,2BACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBoN,GAAwB/G,EAAEE,OAAOvG,QAEjCA,MAAOmN,MAIf,gBAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,SACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrB8M,EAASzG,EAAEE,OAAOvG,QAElBA,MAAO6M,KAGf,gBAACvE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBsN,GAAcjH,EAAEE,OAAOvG,QAEvBA,MAAOqN,MAEf,gBAAC/E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAAC,iBAAD,CAAgByF,UAAQ,EAACtQ,MAAM,UAC/B,gBAACqQ,EAAA,EAAD,CACIpH,QAASiH,IADb,mBAEA,gBAAC,EAAD,CACIhK,OAAQA,GACRF,QAASgK,GACT/J,QAAS,WAAQgK,IAAiC,OAE1D,gBAAC3H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,0BACA,gBAACuF,EAAA,EAAD,KAAY,yBAAG,yBAAI7C,OAEvB,gBAACjF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAY0F,UAAQ,EAACjI,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAA5D,UACA,gBAAC,iBAAD,CAAgByF,UAAQ,EAACtQ,MAAOmK,MAEpC,gBAAC7B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrB0N,GAAcrH,EAAEE,OAAOvG,QAEvBA,MAAOyN,MAEf,gBAACnF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,oBACA,gBAAC,IAAD,CACI0F,MAAO,CAAC,OAAQ,OAAQ,SACxBvQ,MAAO,IAAIwQ,KACXC,OAAQ,eACRvF,MAAO,CAAEnJ,MAAO,OAAQqB,UAAW,IACnCiG,SAAU,SAAChD,GACP4D,QAAQC,IAAI7D,IAEhBqK,aAAc,cAItB,gBAACpI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAAC,IAAD,CACI0F,MAAO,CAAC,OAAQ,OAAQ,SACxBvQ,MAAO,IAAIwQ,KACXtF,MAAO,CAAEnJ,MAAO,OAAQqB,UAAW,IACnCqN,OAAQ,eACRpH,SAAU,SAAChD,GACP4D,QAAQC,IAAI7D,IAEhBqK,aAAc,cAItB,gBAACpI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,KACf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAAC0H,EAAA,EAAD,KAAY,2CAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,cACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrB8L,EAAazF,EAAEE,OAAOvG,QAEtBA,MAAO6L,KAEf,gBAACvD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBgM,EAAc3F,EAAEE,OAAOvG,QAEvBA,MAAO+L,KAEf,gBAACzD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,aACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBkM,EAAY7F,EAAEE,OAAOvG,QAErBA,MAAOiM,KAEf,gBAAC3D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,sBACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBoM,EAAoB/F,EAAEE,OAAOvG,QAE7BA,MAAOmM,KAEf,gBAAC7D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,cACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBsM,EAAcjG,EAAEE,OAAOvG,QAEvBA,MAAOqM,KACR,gBAAC/D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAClB,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,uBACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrBwM,EAAenG,EAAEE,OAAOvG,QAExBA,MAAOuM,KAEf,gBAACjE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,WACA,gBAAC,iBAAD,CAAgBxB,SAAU,SAAChD,GACvB4D,QAAQC,IAAI7D,EAAEE,OAAOvG,OACrB0M,EAAWrG,EAAEE,OAAOvG,QAEpBA,MAAOyM,KAEf,gBAACnE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,YACA,gBAAC,cAAD,CACIhC,GAAG,oBACH8H,UAAWhB,GACX3P,MAAO0P,GAAoB1P,MAC3BgH,MAAOjB,EAAM6K,eAAiB7K,EAAM6K,cAAcC,SAAS,4BACjC,KAAnBjB,GACPvG,SAAUyG,GACV/N,MAAM,UAGd,gBAAC,iBAAD,KACI,gBAACuG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIL,UAAWqD,EAAOF,gBACjC,gBAAChC,EAAA,EAAD,CAAQP,QAAS,WAAQgB,QAAQC,IAAI,WAAa7B,UAAWqD,EAAOL,aAAc5B,QAAQ,YAAY7H,MAAM,aAA5G,UACA,gBAAC4H,EAAA,EAAD,CAAQP,QAASkH,GAAe9H,UAAWqD,EAAON,WAAY3B,QAAQ,YAAY7H,MAAM,WAAxF,mBAeS,QAAT6N,GA/OZ,gCACI,gBAACnH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,UACA,gBAACuF,EAAA,EAAD,KAAY,6CACZ,gBAACC,EAAA,EAAD,uBAEJ,gBAAC/H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,WACA,gBAACuF,EAAA,EAAD,KAAY,mCAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,eAEA,gBAAC,iBAAD,OAEJ,gBAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,aACA,gBAAC,iBAAD,OAEJ,gBAACvC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAEf,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,oBACA,gBAAC,IAAD,CACI0F,MAAO,CAAC,OAAQ,OAAQ,SACxBvQ,MAAO,IAAIwQ,KACXC,OAAQ,eACRvF,MAAO,CAAEnJ,MAAO,OAAQqB,UAAW,IACnCiG,SAAU,SAAChD,GACP4D,QAAQC,IAAI7D,IAEhBqK,aAAc,cAItB,gBAACpI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACkC,EAAA,EAAD,CAAYvC,UAAWlC,GAAQxC,WAAYkH,QAAQ,WAAnD,+BACA,gBAAC,IAAD,CACI0F,MAAO,CAAC,OAAQ,OAAQ,SACxBvQ,MAAO,IAAIwQ,KACXtF,MAAO,CAAEnJ,MAAO,OAAQqB,UAAW,IACnCqN,OAAQ,eACRpH,SAAU,SAAChD,GACP4D,QAAQC,IAAI7D,IAEhBqK,aAAc,eAoMd,Q,iGCzmBlBvF,GAAYtK,YAAW,iBAAO,CAChCiQ,cAAe,CACXvN,aAAc,GACd7B,SAAU,GACVR,gBAAiB,UACjBF,QAAS,YAEb+P,MAAO,CACHrP,SAAU,OAGlBuI,QAAQC,IAAIiB,IAYL,IAAM6F,GAAb,YACI,WAAYjL,GAAQ,IAAD,8BACf,4CAAMA,KAwBVkL,eAAiB,SAACC,GACd,IAAIC,EAAM,EAAKC,MAAMN,cACrBK,EAAI9B,KAAK6B,GACT,EAAKG,SAAS,CACVP,cAAeK,IAEnBlH,QAAQC,IAAIiH,IA/BG,EAkCnBG,iBAAmB,SAACC,GAChB,IAAIJ,EAAM,EAAKC,MAAMN,cACrBK,EAAIK,OAAOD,EAAO,GAClB,EAAKF,SAAS,CACVP,cAAeK,KAtCJ,EA0CnBM,kBAAoB,WAChB,EAAK1L,MAAM2L,OAAO,EAAKN,MAAMN,gBAzC7B,EAAKM,MAAQ,CACTN,cAAe,GACfa,WAAY,IAJD,EADvB,iFAYQC,KAAKP,SAAS,CACVM,WAAY,CACR,CACIrC,KAAM,sBACNtP,MAAO,QAEX,CACIsP,KAAM,UACNtP,MAAO,cApB3B,+BA+CkC,IAAD,OACnBmG,EAAU,CACZ0L,iBAAkB,CACd7Q,QAAS,OAEb8Q,kBAAmB,CACf9Q,QAAS,aAEb8P,cAAe,CACXvN,aAAc,GACd7B,SAAU,GACVR,gBAAiB,UACjBF,QAAS,WACTwB,OAAQ,MACRG,QAAS,gBAEboP,aAAc,CACV3P,aAAc,OAElBgJ,WAAY,CACRrJ,MAAO,QACPL,SAAU,OACVE,MAAO,QAEXyJ,aAAc,CACVtJ,MAAO,QACPL,SAAU,SAIlB,OACI,gCACI,gBAACsQ,EAAA,EAAD,CACIC,YAAa,sBACbC,SAAUN,KAAKX,eACfkB,cAAc,EACdC,gBAAiBR,KAAKR,MAAMO,aAEhC,uBAAKzG,MAAO/E,EAAQ2L,mBAChB,2BACI,gDAEFF,KAAKR,MAAMN,cAAcuB,IAAI,SAAC5J,EAAK8I,GAAN,OACnB,uBAAKrG,MAAO/E,EAAQ2K,eAChB,wBAAM5F,MAAO/E,EAAQ4L,cAAetJ,GACpC,wBAAMQ,QAAS,kBAAM,EAAKqI,iBAAiBC,KACvC,gBAAC,IAAD,CAAiBe,KAAMC,YAM/C,gBAACjK,EAAA,EAAD,CAAMnD,WAAS,EAAC7D,QAAS,GACrB,gBAACgH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACc,EAAA,EAAD,CAAQ0B,MAAO/E,EAAQkF,aAAc5B,QAAQ,WAAW7H,MAAM,YAAYqH,QAAS,kBAAM,EAAKlD,MAAME,YAApG,WAEJ,gBAACqC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,gBAACc,EAAA,EAAD,CAAQ8G,SAAUsB,KAAKR,MAAMN,cAAcvJ,OAAS,EAAkB2D,MAAO/E,EAAQiF,WAAY3B,QAAQ,YAAY7H,MAAM,UAAUqH,QAAS,kBAAM,EAAKwI,sBAAzJ,eAxGxB,GAAiC9J,a,UCfpB6K,GAAkD,SAACzM,GAA8C,IAEtG0M,EAGA1M,EAHA0M,KACAC,EAEA3M,EAFA2M,SACAvM,EACAJ,EADAI,QAJqG,EAMrEyB,mBAAS,UAN4D,mBAMlG+K,EANkG,KAMtFC,EANsF,OAOnEhL,mBAAS,GAP0D,mBAOlGiL,EAPkG,KAOrFC,EAPqF,OAQvElL,mBAAS,QAR8D,mBAQlGmL,EARkG,KAQvFC,EARuF,OASvDpL,oBAAS,GAT8C,mBASlGqL,EATkG,KAS/EC,EAT+E,KAUzGjJ,QAAQC,IAAIuI,EAAMC,GAgGlB,OACI,gCACI,gBAACpK,EAAA,EAAD,CAAMnD,WAAS,EAACuD,GAAI,IAChB,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAAC0H,EAAA,EAAD,KAAY,wDAEhB,gBAAC9H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gBAACJ,EAAA,EAAD,CAAMnD,WAAS,EAACuD,GAAI,GAAIjF,WAAY,UAChC,gBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,sBAAIwC,MAAO,CAAClK,QAAS,IAAKwB,OAAQ,MA3BxC,CACd,SACA,SA2BsC6P,IAAI,SAAC5J,EAAM0G,GAAP,OACV,sBAAI9G,UAAWlC,EAAQxB,UACnB,gBAAC0L,EAAA,EAAD,CAAMhI,UAAW8K,IAAWhN,EAAQvB,SAAUiO,IAAgB1D,EAAIhJ,EAAQtB,WAAa,MAAOoE,QAAS,kBA1BvH,SAACR,EAAM8I,GAC3BqB,EAAcnK,GACdqK,EAAevB,GAwBkI6B,CAAgB3K,EAAM0G,KAAK1G,QAM5J,gBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGL,UAAWlC,EAAQnE,YACjC,gBAACqO,EAAA,EAAD,CAAMpH,QAAS,WAAQ+J,EAAa,WAApC,wBAIZ,gBAAC1K,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAEO,UAAdiK,EACI,gCACI,gBAACX,EAAA,EAAD,CAAaE,SAAU,kBAAMjI,QAAQC,IAAI,WAAWmJ,YAAa,wBACjE,gBAACC,EAAA,EAAD,CACIb,KAtFR,CAC1B,CACCc,SAAU,kBACDC,MAAO,eACPC,eAAgB,GAChBtJ,OAAQ,UAEZ,CACLoJ,SAAU,gBACDC,MAAO,eACPC,eAAgB,GAChBtJ,OAAQ,WA4EgBuJ,QAxEL,CAC7B,CACCpE,KAAM,WACNxH,MAAO,YAEF,CACLwH,KAAM,QACNxH,MAAO,SAEF,CACLwH,KAAM,iBACNxH,MAAO,sBAEF,CACLwH,KAAM,SACNxH,MAAO,UAEF,CACLwH,KAAM,gBACNxH,MAAO,MAsD0B6L,iBACI,CAAC,CACGC,WAAY,gBACZ7R,MAAO,GACP8R,iBAAiB,EACjBC,MAAO,WAGfjM,QAAS,0CACTkM,6BAA8B,CAC1B,CAAEH,WAAY,gBAAiBI,gBAAgB,IAEnDC,YAAa,SAACC,GACVjK,QAAQC,IAAIgK,EAAK,kBAI/B,KAGY,SAAdvB,EACI,gCACI,gBAACX,EAAA,EAAD,CAAaE,SAAU,kBAAMjI,QAAQC,IAAI,WAAWmJ,YAAa,0BACjE,gBAACC,EAAA,EAAD,CACIb,KAtJV,CAClB,CACInE,SAAU,WACV6F,aAAc,2BACdC,mBAAoB,eACpBjK,OAAQ,UAEZ,CACImE,SAAU,YACV6F,aAAc,6BACdC,mBAAoB,eACpBjK,OAAQ,WA4IgBuJ,QAxIP,CACrB,CACIpE,KAAM,WACNxH,MAAO,YAEX,CACIwH,KAAM,eACNxH,MAAO,gBAEX,CACIwH,KAAM,qBACNxH,MAAO,sBAEX,CACIwH,KAAM,SACNxH,MAAO,UAEX,CACLwH,KAAM,gBACNxH,MAAO,MAsH0B6L,iBACI,CAAC,CACGC,WAAY,gBACZ7R,MAAO,GACP8R,iBAAiB,EACjBC,MAAO,WAGfjM,QAAS,0CACTkM,6BAA8B,CAC1B,CAAEH,WAAY,gBAAiBI,gBAAgB,IAEnDC,YAAa,SAACC,GACVjK,QAAQC,IAAIgK,EAAK,kBAI/B,OAId,gBAAC,iBAAD,CACIG,YAAa,WAAQrB,EAAa,SAClCD,UAAWA,EACXjL,MAAO,oBACP,gBAAC,GAAD,CACI7B,QAAS,WACL+M,EAAa,SAEjBtB,OA/FM,SAAC4C,GACnBrK,QAAQC,IAAIoK,EAAO,qBAiGf,gBAACC,GAAA,EAAD,CACRhK,YAAc0I,EACdhN,QAhGmC,WAC/BiN,GAAqB,IAgGzBrL,QAAS,uCACTC,MAAO,mBACP0M,QACC,gBAAClM,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAQ,SAAS9E,WAAW,UAC3C,gBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQP,QAAS,WAAOiK,GAAqB,IAAS7K,UAAWlC,EAAQ7B,OAAQmF,QAAS,WAAY7H,MAAO,aAA7G,WAED,gBAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQnB,UAAWlC,EAAQ7B,OAAQmF,QAAS,YAAa7H,MAAO,WAAhE,gB,iKCrMA,IAAM6S,GAA+C,SAAC1O,GAC5D,IAAMI,EAAUvF,IADyF,EAEzEgH,oBAAS,GAFgE,mBAElG8K,EAFkG,KAExFgC,EAFwF,OAG3E9M,oBAAS,GAHkE,mBAGlG+M,EAHkG,KAGzFC,EAHyF,OAIrEhN,mBAAS,WAJ4D,mBAIlG+K,EAJkG,KAItFC,EAJsF,OAKjFhL,mBAAS,QALwE,mBAKlG6H,EALkG,KAK5FoF,EAL4F,OAM7CjN,oBAAS,GANoC,mBAMlGkN,EANkG,KAM1EC,EAN0E,OAO7CnN,oBAAS,GAPoC,mBAOlGoN,EAPkG,KAO1EC,EAP0E,KAQzGhL,QAAQC,IAAI0K,EAAYjC,GACxB1I,QAAQC,IAAInE,GAIZ,IA0CMmP,EAA+B,WACpCD,GAA0B,GAC1BF,GAA0B,IAQ3B,OACC,gCACC,gBAACI,GAAA,EAAD,CACCC,aAAc,+BACdC,iBA7BiB,CACnB,WA6BEC,WA1Bc,WAChBZ,GAAY,GACZG,EAAQ,QACR5K,QAAQC,IAAI0I,EAAe,aAwBzB2C,WAAY,eACZC,WAAY,WACZC,cAAc,IAIf,uBAAKpN,UAAWlC,EAAQlF,MACtB0T,EACC,gBAAC,mBAAD,MAAwB,KAE1B,gBAACrM,EAAA,EAAD,CAAMnD,WAAS,EAACuD,GAAI,IACnB,gBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGL,UAAWlC,EAAQjE,kBACpC,gBAACwT,GAAA,EAAD,CACCpB,MAvEe,CACpB,CACChF,KAAM,WAGP,CACCA,KAAM,iBAGP,CACCA,KAAM,eA8DFqG,YAnCoB,SAAClN,GAC1BmK,EAAcnK,GACdiM,GAAY,OAoCT,gBAACpM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGL,UAAWlC,EAAQ9D,kBAErB,WAAdsQ,GAA2B,gBAAC,EAAD,CAASlD,KAAMA,EAAMtJ,QAASA,EAASuM,SAAUA,IAG9D,YAAdC,GAA4B,gBAAC,GAAD,CAAgBxM,QAASA,EAASuM,SAAUA,OAK5E,gBAAC6B,GAAA,EAAD,CACChK,YAAayK,EACb/O,QAASiP,EACTrN,QAAS,yBACTC,MAAO,eACP0M,QACC,gBAAClM,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAQ,SAAS9E,WAAW,UAC3C,gBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQP,QAAS,WAAQgM,GAA0B,IAAU5M,UAAWlC,EAAQ7B,OAAQmF,QAAS,WAAY7H,MAAO,aAApH,WAED,gBAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQnB,UAAWlC,EAAQ7B,OAAQmF,QAAS,YAAa7H,MAAO,WAAhE,YAKJ,gBAAC2S,GAAA,EAAD,CACChK,YAAauK,EACb7O,QAASiP,EACTrN,QAAS,oCACTC,MAAO,eACP0M,QACC,gBAAClM,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAQ,SAAS9E,WAAW,UAC3C,gBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQP,QAAS,WAAQ8L,GAA0B,IAAU1M,UAAWlC,EAAQ7B,OAAQmF,QAAS,WAAY7H,MAAO,aAApH,WAED,gBAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd,gBAACc,EAAA,EAAD,CAAQnB,UAAWlC,EAAQ7B,OAAQmF,QAAS,YAAa7H,MAAO,WAAhE,kBASDgU,GAAkB,SAACxE,GAAD,OAAkBA,EAAMyE,UAE1CC,GAAqB,SAACC,GAAD,MAAyB,CACnDC,IAAKC,6BAAmBxV,EAAqBsV","file":"static/js/9.bbf5b811.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","export const ActionConsts = {\n\tAccounts: {\n\t\tResetReducer: 'Accounts_ResetReducer',\n\t\tSetReducer: 'Accounts_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const AccountsActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Accounts.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Accounts.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const accountsPageStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n}));\n\nexport const changePasswordModalStyle = makeStyles(theme => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px'\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tinputTextField: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\tpaddingRight: 0\n\t},\n\ticonEye: {\n\t\tcolor: '#9EA3AC'\n\t},\n\tlabelNote: {\n\t\tcolor: '#797F92',\n\t\tfontSize: 12\n\t},\n\terrorMessage: {\n\t\tcolor: '#E53935',\n\t\tfontSize: 14\n\t},\n\terrorIcon: {\n\t\tcolor: '#E53935',\n\t}\n\t\n}));","import React from 'react'\nimport { changePasswordModalStyle } from '../style'\n\n// Material UI Imports\nimport {\n    Grid,\n    Box,\n    Dialog,\n    Button,\n    DialogTitle,\n    DialogActions,\n    DialogContent,\n    IconButton,\n    // TextField,\n    InputLabel,\n    OutlinedInput,\n    InputAdornment\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport { UI } from 'Components'\nimport { changePassword } from 'Pages/API/Calls/User'\n//import { SampleFetch } from 'Pages/API/Calls/testCall'\n\ninterface IProps {\n    visible: boolean,\n    userId: string,\n    onClose: () => void;\n}\n\ninterface textFieldProps {\n    label: string,\n    value: string,\n    classes: any,\n    note?: string,\n    id: string\n    error: boolean,\n    errorMsg: string,\n    onChange: (value, prop) => void;\n}\n\nexport const ChangePassword:\n    React.FC<IProps> = (props: IProps): JSX.Element => {\n\n        // React.useEffect(() => {\n        //     SampleFetch().then((res: any) => res.json().then((data) => {\n        //         console.log(data)\n        //     }))\n        // }, [])\n\n        const {\n            visible,\n            onClose,\n            userId\n        } = props;\n        const classes = changePasswordModalStyle()\n\n        // Password values handling\n        const handleTextFieldChange = (e, prop) => {\n            const { value } = e.target\n\n            setPasswordValues({ ...passwordValues, [prop]: value })\n        }\n\n        // Password values reset default\n        const resetPasswordValues = () => {\n            setPasswordValues({\n                oldPassword: '',\n                newPassword: '',\n                confirmPassword: ''\n            })\n            setOerror({\n                ...oError,\n                error: false\n            })\n            setNerror({\n                ...nError,\n                error: false\n            })\n            setCerror({\n                ...cError,\n                error: false\n            })\n\n            onClose()\n        }\n\n        const fetchChange = () => {\n            // Declare password values\n            const { oldPassword, newPassword, confirmPassword } = passwordValues\n\n\n            if (!validatePasswordValue(oldPassword)) setOerror({ message: 'Invalid input', error: true })\n            else setOerror({ message: '', error: false })\n\n            if (!validatePasswordValue(newPassword)) setNerror({ message: 'Invalid input', error: true })\n            else {\n                setNerror({ message: '', error: false })\n            }\n\n            if (!validatePasswordValue(confirmPassword)) setCerror({ message: 'Invalid input', error: true })\n            else {\n                if (confirmNewPassword(newPassword, confirmPassword)) {\n                    setNerror({ message: '', error: false })\n                    setCerror({ message: '', error: false })\n                } else {\n                    setNerror({ ...nError, error: true })\n                    setCerror({ message: 'Password doesn’t match', error: true })\n                }\n            }\n\n            if (validatePasswordValue(oldPassword) && validatePasswordValue(newPassword)\n                && validatePasswordValue(confirmPassword) && confirmNewPassword(newPassword, confirmPassword)) {\n                let constructParams = {\n                    old_password: oldPassword,\n                    new_password: newPassword,\n                    confirm_password: confirmPassword\n                }\n\n                changePassword(constructParams, userId).then((data) => {\n                    console.log(data);\n                    if (data.status === 200) {\n                        setModalDone({\n                            title: 'Change Password Success',\n                            message: 'You have successfully changed your password.',\n                            visible: true\n                        })\n                    } else {\n                        setModalDone({\n                            title: 'Error',\n                            message: 'Something went wrong. Your password has not been changed.',\n                            visible: true\n                        })\n                    }\n                }).catch((err) => {\n                    setModalDone({\n                        title: 'Error',\n                        message: err.message,\n                        visible: true\n                    })\n                })\n            }\n\n\n            // setNerror(newIsValid)\n            // setCerror(newCIsValid)\n\n        }\n\n        const validatePasswordValue = (password: string) => {\n            const minLenght = 6\n\n            if (password.length < minLenght) {\n                return false\n            }\n\n            return true\n        }\n\n        const confirmNewPassword = (newP1: string, newP2: string) => {\n            if ((newP1 !== '' && newP2 !== '') && (newP1 !== newP2)) {\n                return false\n            }\n\n            return true\n        }\n\n        const [passwordValues, setPasswordValues] = React.useState({\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n        })\n        const [oError, setOerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n        const [nError, setNerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n        const [cError, setCerror] = React.useState<any>({\n            message: '',\n            error: false\n        })\n\n        const [modalDone, setModalDone] = React.useState<any>({\n            message: '',\n            title: '',\n            visible: false\n        })\n\n        const handleDoneClose = () => {\n            setModalDone({\n                message: '',\n                title: '',\n                visibile: false\n            })\n        }\n\n        return (\n            <>\n                <Dialog\n                    open={visible}\n                    onClose={resetPasswordValues}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    className={classes.dialog}>\n                    {/* Modal Content Area */}\n                    <Grid\n                        container\n                        className={classes.container}\n                        justify=\"flex-start\"\n                        alignItems=\"flex-start\"\n                        direction=\"column\">\n                        <Grid item xs>\n                            <DialogTitle\n                                className={classes.dialogTitle}\n                                disableTypography={false}\n                                id=\"form-dialog-title\" >\n                                <Box fontWeight={700}>Change Password</Box>\n                                <IconButton\n                                    aria-label=\"close\"\n                                    className={classes.closeButton}\n                                    onClick={resetPasswordValues}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </DialogTitle>\n                        </Grid>\n                        <Grid\n                            item\n                            xs\n                            className={classes.dialogContentContainer}>\n                            <DialogContent>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"space-between\"\n                                    alignItems=\"flex-start\">\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='oldPassword'\n                                            error={oError.error}\n                                            errorMsg={oError.message}\n                                            label='Enter your old password'\n                                            value={passwordValues.oldPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='newPassword'\n                                            error={nError.error}\n                                            errorMsg={nError.message}\n                                            label='Enter your new password'\n                                            note='At least 6 alphanumeric characters'\n                                            value={passwordValues.newPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextFieldWithEyeIcon\n                                            id='confirmPassword'\n                                            error={cError.error}\n                                            errorMsg={cError.message}\n                                            label='Confirm your new password'\n                                            value={passwordValues.confirmPassword}\n                                            onChange={handleTextFieldChange}\n                                            classes={classes} />\n                                    </Grid>\n                                </Grid>\n                            </DialogContent>\n                            <DialogActions className={classes.dialogAction}>\n                                <Grid\n                                    container\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                    <Grid item xs={6}>\n                                        <Button\n                                            onClick={resetPasswordValues}\n                                            className={classes.button}\n                                            variant={'outlined'}\n                                            color={'secondary'}>Cancel</Button>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Button\n                                            onClick={fetchChange}\n                                            className={classes.button}\n                                            variant={'contained'}\n                                            color={'primary'}>Change</Button>\n                                    </Grid>\n                                </Grid>\n                            </DialogActions>\n                        </Grid>\n                    </Grid>\n                </Dialog>\n\n                <UI.MsgModal\n                    isModalOpen={modalDone.visible}\n                    onClose={handleDoneClose}\n                    title={modalDone.title}\n                    message={modalDone.message}\n                />\n            </>\n        )\n    }\n\n\n\nconst TextFieldWithEyeIcon: React.FC<textFieldProps> = (options: textFieldProps): JSX.Element => {\n    const {\n        classes,\n        label,\n        onChange,\n        value,\n        note,\n        id,\n        error,\n        errorMsg\n    } = options\n\n    const [type, setType] = React.useState<string>('password')\n\n    const handleClickShowPassword = () => {\n        if (type === 'password') {\n            setType('text')\n        } else {\n            setType('password')\n        }\n    }\n\n    return (\n        <>\n            <InputLabel\n                className={classes.inputLabel}\n                htmlFor=\"role_id\">{label}</InputLabel>\n            <span className={classes.labelNote}>{note && note}</span>\n            <OutlinedInput\n                id={id}\n                error={error}\n                type={type}\n                onChange={(e) => onChange(e, id)}\n                value={value}\n                className={classes.inputTextField}\n                labelWidth={0}\n                // helperText=\"Incorrect entry.\"\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}>\n                            {type === 'text' ? <Visibility className={classes.iconEye} /> : <VisibilityOff className={classes.iconEye} />}\n                        </IconButton>\n                    </InputAdornment>\n                } />\n            {\n                error &&\n                <Grid container>\n                    <Grid item xs={9}>\n                        <span className={classes.errorMessage}>{errorMsg}</span>\n                    </Grid>\n                    <Grid item xs={3} style={{ textAlign: 'right' }}>\n                        <ErrorIcon className={classes.errorIcon} fontSize='small' />\n                    </Grid>\n                </Grid>\n            }\n        </>\n    )\n}","import * as React from 'react';\nimport {\n    Grid,\n    // FormControl, \n    InputLabel,\n    Typography,\n    Link,\n    Button,\n    // TextareaAutosize,\n} from '@material-ui/core';\n//import { ReactTable } from 'Components/UI/TableComponent/ReactTable';\n//import { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { BasicTextField, BasicSelect, FloatingFooter } from 'Components/UI';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { useState } from 'react';\nimport { ChangePassword } from './ChangePassword'\nimport { getUserDetails } from 'Pages/API/Calls/User';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    saveButton: {\n        width: '135px',\n        fontSize: '14px',\n        color: '#fff',\n    },\n    cancelButton: {\n        width: '135px',\n        fontSize: '14px',\n        marginRight: '14px',\n        color: '#fff',\n        background: '#3C394A'\n    },\n    userAlignRight: {\n        textAlign: 'right',\n    }\n\n}));\n\nexport interface IAccountsProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    mode?: string,\n    invalidFields?: any[];\n}\n\n\n\nexport const Account: React.FC<IAccountsProps> = (props: IAccountsProps): JSX.Element => {\n    const styles = useStyles();\n    // const [userDetails, setUserDetails] = React.useState({\n    //     _userName: \"\",\n    //     _firstName: \"\",\n    //     _middleName: \"\",\n    //     _lastName: \"\",\n    //     _employeeIdNumber: \"\",\n    //     _department: \"\",\n    //     _jobPosition: \"\",\n    //     _section: \"\",\n    //     _location: \"\",\n    //     _email: \"\",\n    //     _password: \"\",\n    //     _status: \"\",\n    //     _effectivityDate: \"\",\n    //     _primaryRoleAndModule: \"\",\n    //     _userGroups: \"\",\n    //     _rolesFromUserGroups: \"\",\n    //     _otherRoles: \"\",\n    //     _expiryDate: \"\",\n    // });\n\n    const [userName, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [middleName, setMiddleName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [employeeIdNumber, setEmployeeIdNumber] = useState('');\n    const [department, setDepartment] = useState('');\n    const [jobPosition, setJobPosition] = useState('');\n    const [section, setSection] = useState('');\n    const [location, setLocation] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [status, setStatus] = useState('');\n    const [effectivityDate, setEffectivityDate] = useState('');\n    const [primaryRoleAndModule, setPrimaryRoleAndModule] = useState('');\n    const [userGroups, setUserGroups] = useState('');\n    const [rolesFromUserGroups, setRolesFromUserGroups] = useState('');\n    const [otherRoles, setOtherRoles] = useState('');\n    const [expiryDate, setExpiryDate] = useState('');\n    const [userId, setUserId] = useState('');\n    const tempRole: any = [];\n\n    const getLastSegment = () => {\n        return window.location.href.substring(window.location.href.lastIndexOf('/') + 1)\n    }\n    const newDetails: any = [];\n\n    React.useEffect(() => {\n        getUserDetails(getLastSegment())\n\n            .then((data) => {\n                setUsername(data.body.username);\n                setFirstName(data.body.first_name);\n                setMiddleName(data.body.middle_name);\n                setLastName(data.body.last_name);\n                setEmployeeIdNumber(data.body.employee_id);\n                setDepartment(data.body.department);\n                setJobPosition(data.body.job_position);\n                setSection(data.body.section);\n                setLocation(data.body.location);\n                setEmail(data.body.email);\n                setPassword('*****');\n                setStatus(data.body.is_locked ? \"Locked\" : \"Unlocked\");\n                setEffectivityDate(data.body.effectivity_date);\n                setPrimaryRoleAndModule(data.body.main_role + \" - \" + data.body.main_module);\n                setUserGroups(data.body.user_groups == null || undefined ? \"N/A\" : data.user_groups);\n                setRolesFromUserGroups(data.body.roles == null || undefined ? \"N/A\" : data.body.roles);\n                setUserId(data.body.user_id)\n                for (var i = 1; i < data.body.role.length; i++) {\n                    tempRole.push(data.body.role[i].name)\n                }\n\n                setOtherRoles(tempRole.join(', '));\n                setExpiryDate(data.body.expiry_date);\n                // updateUserDetails('userName', data.username);\n                // updateUserDetails('firstName', data.first_name);\n                // updateUserDetails('middleName', data.middle_name);\n                // updateUserDetails('lastName', data.last_name);\n                // updateUserDetails('employeeIdNumber', data.employee_id);\n                // updateUserDetails('department', data.department);\n                // updateUserDetails('jobPosition', data.job_position);\n                // updateUserDetails('section', data.section);\n                // updateUserDetails('location', data.location);\n                // updateUserDetails('email', data.email);\n                // updateUserDetails('password', \"*****\");\n                // updateUserDetails('status', data.is_locked ? \"Locked\" : \"Unlocked\");\n                // updateUserDetails('effectivityDate', data.effectivity_date);\n                // updateUserDetails('primaryRoleAndModule', data.primary_role_module);\n                // updateUserDetails('userGroups', data.user_groups);\n                // updateUserDetails('rolesFromUserGroups', data.roles == null || undefined ? \"N/A\" : data.roles);\n                // updateUserDetails('otherRoles', data.other_roles == null || undefined ? \"N/A\" : data.other_roles);\n                // updateUserDetails('expiryDate', data.expiry_date);\n            })\n            .catch(error => {\n                console.log('error: ', error);\n                return error;\n            });\n\n    }, []);\n\n    const { classes, mode } = props;\n    //const { rows, viewOnly, classes, mode } = props;\n    //console.log(rows, viewOnly);\n\n    const defaultSelectOption = { name: 'Intellicare - Head Office', value: 'Intellicare - Head Office' };\n\n    const [inputTypes] = useState([\n        defaultSelectOption,\n        { name: 'Text Field', value: 'Text Field' },\n        //{ name: 'Dropdown', value: 'Dropdown' },\n    ]);\n\n    const [fieldInputType, setFieldInputType] = useState('');\n\n    const handleFieldInputTypeChange = (\n        event: React.ChangeEvent<HTMLInputElement>,\n    ) => {\n        setFieldInputType(event.target.value);\n    };\n    // const fakeRows: any = [\n    // \t{\n    // \t\tobject_and_operations: 'User Activity Logs',\n    //         policies: '2',\n    //         policy_id: '31',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs',\n    //         policies: '123',\n    //         policy_id: '123321',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs2',\n    //         policies: '4555',\n    //         policy_id: '123132',\n    //     },\n    //     {\n    // \t\tobject_and_operations: 'User Activity Logs2',\n    //         policies: '53',\n    //         policy_id: '4',\n    //     },\n    // ];\n\n\n    // const columns: any = [\n    // \t{ \n    // \t\tname: 'object_and_operations',\n    // \t\ttitle: 'Object and Operations',\n    //     },\n    //     { \n    // \t\tname: 'policies',\n    // \t\ttitle: 'Policies',\n    //     },\n    //     { \n    // \t\tname: 'policy_id',\n    // \t\ttitle: 'Policy ID',\n    //     },\n    //     { \n    // \t\tname: 'action_delete',\n    //         title: ' ',\n    //         getCellValue: () => ('-') \n    //     },\n    // ]\n    const [ChangePasswordModalVisibility, setChangePasswordModalVisibility] = React.useState<boolean>(false);\n\n    // const updateUserDetails = (prop, value) => {\n    //     setUserDetails({\n    //         ...userDetails,\n    //         [prop]: value\n    //     })\n    // }\n\n    const openChangePasswordModal = () => {\n        setChangePasswordModalVisibility(true);\n    }\n\n    const onSaveChanges = () => {\n        // setUserDetails({\n        //     ...userDetails,\n        //     _userName: userName,\n        //     _firstName: firstName,\n        //     _middleName: middleName,\n        //     _lastName: lastName,\n        //     _employeeIdNumber: employeeIdNumber,\n        //     _department: department,\n        //     _jobPosition: jobPosition,\n        //     _section: section,\n        //     _location: location,\n        //     _email: email,\n        //     _password: password,\n        //     _status: status,\n        //     _effectivityDate: effectivityDate,\n        //     _primaryRoleAndModule: primaryRoleAndModule,\n        //     _userGroups: userGroups,\n        //     _rolesFromUserGroups: rolesFromUserGroups,\n        //     _otherRoles: otherRoles,\n        //     _expiryDate: expiryDate,\n        // })\n        newDetails.push({\n            username: userName,\n            first_name: firstName,\n            middle_name: middleName,\n            last_name: lastName,\n            employee_id: employeeIdNumber,\n            department: department,\n            job_position: jobPosition,\n            section: section,\n            location: location,\n            email: email,\n            password: password,\n            is_locked: status,\n            effectivity_date: effectivityDate,\n            main_role: primaryRoleAndModule,\n            main_module: primaryRoleAndModule,\n            user_groups: userGroups,\n            role: otherRoles,\n            expiry_date: expiryDate\n        })\n        console.log(newDetails)\n    }\n\n    const viewRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={12}>\n                    <Typography><b>ACCOUNT</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">USERNAME</InputLabel>\n                    <Typography><b>{userName}</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">PRIMARY ROLE AND MODULE</InputLabel>\n                    <Typography><b>{primaryRoleAndModule}</b></Typography>\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EMAIL</InputLabel>\n                    <Typography><b>{email}</b></Typography>\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">USER GROUPS</InputLabel>\n                    <Typography><b><u>{userGroups}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">PASSWORD</InputLabel>\n                    <Typography>{password}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLES FROM USER GROUPS</InputLabel>\n                    <Typography><b><u>{rolesFromUserGroups}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">STATUS</InputLabel>\n                    <Typography><b>{status}</b></Typography>\n                    {!status ? <Link>Unlock User</Link> : null}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">OTHER ROLES</InputLabel>\n                    <Typography><b><u>{otherRoles}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                    <Typography><b>{effectivityDate}</b></Typography>\n                    {/* <KeyboardDatePicker\n                        views={[\"year\",\"date\",\"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{width: \"100%\", marginTop: 10}}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                        // disableFuture\n\t\t            /> */}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                    <Typography><b>{expiryDate}</b></Typography>\n                    {/* <KeyboardDatePicker\n                        views={[\"year\",\"date\",\"month\"]}\n                        value={new Date()}\n                        style={{width: \"100%\", marginTop: 10}}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                        // disableFuture\n\t\t            /> */}\n                </Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <Typography><b>PROFILE</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">FIRST NAME</InputLabel>\n                    <Typography><b>{firstName}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MIDDLE NAME</InputLabel>\n                    <Typography><b>{middleName}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">LAST NAME</InputLabel>\n                    <Typography><b>{lastName}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EMPLOYEE ID NUMBER</InputLabel>\n                    <Typography><b>{employeeIdNumber}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DEPARTMENT</InputLabel>\n                    <Typography><b>{department}</b></Typography>\n                </Grid><Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">JOB POSITION / RANK</InputLabel>\n                    <Typography><b>{jobPosition}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">SECTION</InputLabel>\n                    <Typography><b>{section}</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">LOCATION</InputLabel>\n                    <Typography><b>{location}</b></Typography>\n                </Grid>\n            </>\n        )\n    }\n\n    const addRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MODULE</InputLabel>\n                    <Typography><b>User Management</b></Typography>\n                    <Link>Change Module</Link>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                    <Typography><b>RID2</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DESCRIPTION</InputLabel>\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    <BasicTextField></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                    <BasicTextField></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n            </>\n        )\n    }\n\n    const editRoleBody = () => {\n        return (\n            <>\n                <Grid item xs={12}>\n                    <Typography><b>ACCOUNT</b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Username</InputLabel>\n                    <BasicTextField\n                        onChange={(e) => {\n                            console.log(e.target.value)\n                            setUsername(e.target.value)\n                        }}\n                        value={userName} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Primary Role and Module</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setPrimaryRoleAndModule(e.target.value)\n                    }}\n                        value={primaryRoleAndModule} />\n                    {/* <TextareaAutosize></TextareaAutosize> */}\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Email</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setEmail(e.target.value)\n                    }}\n                        value={email} />\n                    {/*<BasicTextField></BasicTextField>*/}\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">User Groups</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setUserGroups(e.target.value)\n                    }}\n                        value={userGroups} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Password</InputLabel>\n                    <BasicTextField disabled value=\"*****\"></BasicTextField>\n                    <Link\n                        onClick={openChangePasswordModal}>Change Password</Link>\n                    <ChangePassword\n                        userId={userId}\n                        visible={ChangePasswordModalVisibility}\n                        onClose={() => { setChangePasswordModalVisibility(false) }} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Roles from User Groups</InputLabel>\n                    <Typography><b><u>{rolesFromUserGroups}</u></b></Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel disabled className={classes.inputLabel} htmlFor=\"role_id\">Status</InputLabel>\n                    <BasicTextField disabled value={status}></BasicTextField>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Other Roles</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setOtherRoles(e.target.value)\n                    }}\n                        value={otherRoles} />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Effectivity Date</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        format={'MMM DD, YYYY'}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Expiry Date</InputLabel>\n                    <KeyboardDatePicker\n                        views={[\"year\", \"date\", \"month\"]}\n                        value={new Date()}\n                        style={{ width: \"100%\", marginTop: 10 }}\n                        format={'MMM DD, YYYY'}\n                        onChange={(e) => {\n                            console.log(e);\n                        }}\n                        inputVariant={'outlined'}\n                    // disableFuture\n                    />\n                </Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <Typography><b>Edit Profile</b></Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">First Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setFirstName(e.target.value)\n                    }}\n                        value={firstName} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Middle Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setMiddleName(e.target.value)\n                    }}\n                        value={middleName} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Last Name</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setLastName(e.target.value)\n                    }}\n                        value={lastName} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Employee ID Number</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setEmployeeIdNumber(e.target.value)\n                    }}\n                        value={employeeIdNumber} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Department</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setDepartment(e.target.value)\n                    }}\n                        value={department} />\n                </Grid><Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Job Position / Rank</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setJobPosition(e.target.value)\n                    }}\n                        value={jobPosition} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Section</InputLabel>\n                    <BasicTextField onChange={(e) => {\n                        console.log(e.target.value)\n                        setSection(e.target.value)\n                    }}\n                        value={section} />\n                </Grid>\n                <Grid item xs={4}>\n                    <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">Location</InputLabel>\n                    <BasicSelect\n                        id=\"addFieldInputType\"\n                        menuItems={inputTypes}\n                        value={defaultSelectOption.value}\n                        error={props.invalidFields && props.invalidFields.includes('Input type not selected')\n                            && fieldInputType === ''}\n                        onChange={handleFieldInputTypeChange}\n                        width=\"100%\"\n                    />\n                </Grid>\n                <FloatingFooter>\n                    <Grid item xs={12} className={styles.userAlignRight}>\n                        <Button onClick={() => { console.log(\"cancel\") }} className={styles.cancelButton} variant=\"contained\" color=\"secondary\">Cancel</Button>\n                        <Button onClick={onSaveChanges} className={styles.saveButton} variant=\"contained\" color=\"primary\">Save Changes</Button>\n                    </Grid>\n                </FloatingFooter>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <Grid container xs={12} spacing={3}>\n                {\n                    mode === 'view' ? (\n                        viewRoleBody()\n                    ) : mode === 'edit' ? (\n                        editRoleBody()\n                    ) : mode === 'add' ? (\n                        addRoleBody()\n                    ) : null\n                }\n                {/* <Grid item xs={12}>\n                    <ReactSearch \n                        onSearch={()=> console.log('on search')} \n                        placeholder={'Search policies'}\n                    />\n                    <ReactTable \n                        rows={fakeRows}\n                        columns={columns}\n                        enableGrouping={true}\n                        groupColumnName={'object_and_operations'}\n                        viewOnly={false}\n                        columnExtensions={\n                            [{\n                                columnName: 'action_delete',\n                                width: 75,\n                                wordWrapEnabled: true,\n                                align: 'center'\n                            }]\n                        }\n                        message={'There are no user accounts to show yet.'}\n                        sortingStateColumnExtensions={[\n                            { columnName: 'action_delete', sortingEnabled: false }\n                        ]}\n                        onDeleteRow={(row) => {\n                            console.log(row, 'rowdeleted')\n                        }}\n                    />\n                </Grid> */}\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddRoleBodyState {\n    selectedItems: any;\n    comboArray: any;\n}\n\nexport class AddRoleBody extends React.Component<IAddRoleBodyProps, IAddRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n    // const {} = props;\n    // const classes = useStyles();\n    // const [selectedItems, setSelectedItems] = React.useState<any>([]);\n    componentDidMount() {\n        this.setState({\n            comboArray: [\n                {\n                    name: 'John Ernest Seraspi',\n                    value: 'test',\n                },\n                {\n                    name: 'Teqpwoe',\n                    value: 'test2',\n                },\n            ]\n        })\n    }\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        }; \n        \n        return (\n            <>\n                <ReactSearch \n                    searchLabel={'Search user account'} \n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Users</label>\n                    </div>\n                    { this.state.selectedItems.map((item,index) => \n                                <div style={classes.selectedItems}>\n                                    <span style={classes.selectedText}>{item}</span>\n                                    <span onClick={() => this.handleRemoveItem(index)}>\n                                        <FontAwesomeIcon icon={faTimesCircle}/>\n                                    </span>\n                                </div>\n                            ) \n                        }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button> \n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n   \n// }","import * as React from 'react';\nimport { Typography, Grid, Link, Button } from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { SideModalBlock } from 'Components/UI';\nimport { AddRoleBody } from './AddRoleBody';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\nexport interface IGroupsAndUsersProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any\n}\n\nexport const GroupsAndUsers : React.FC<IGroupsAndUsersProps> = (props: IGroupsAndUsersProps): JSX.Element => {\n    const {\n        rows,\n        viewOnly, \n        classes\n    } = props;\n    const [activeItem, setActiveItem] = useState('Groups');\n    const [activeClass, setActiveClass] = useState(0);\n    const [showBlock, setShowBlock] = useState('none');\n    const [isModalRemoveOpen, setIsModalRemoveOpen] = useState(false);\n    console.log(rows, viewOnly);\n    \n    const userRows: any = [\n        {\n            username: 'Imstaana',\n            user_account: 'Louise Marianne Sta. Ana',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n        {\n            username: 'psbarrios',\n            user_account: 'Philip Salvador Q. Barrios',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n    ]\n\n    const userColumns: any = [\n        {\n            name: 'username',\n            title: 'Username',\n        },\n        {\n            name: 'user_account',\n            title: 'User Account',\n        },\n        {\n            name: 'last_activity_date',\n            title: 'Last Activity Date',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        { \n\t\t\tname: 'action_delete',\n\t\t\ttitle: ' ',\n        },\n    ]\n\n    const groupsRows: any = [\n\t\t{\n\t\t\tgroup_id: '0122-93282-0012',\n            group: \"APD Encoding\",\n            users_in_group: 10,\n            status: 'Active',\n        },\n        {\n\t\t\tgroup_id: '0132-232-0012',\n            group: \"APD Decoding\",\n            users_in_group: 34,\n            status: 'Active',\n\t\t},\n\t];\n\n    const groupsColumns: any = [\n\t\t{ \n\t\t\tname: 'group_id',\n\t\t\ttitle: 'Group ID',\n        },\n        { \n\t\t\tname: 'group',\n\t\t\ttitle: 'Group',\n        },\n        { \n\t\t\tname: 'users_in_group',\n\t\t\ttitle: 'Users in the Group',\n        },\n        { \n\t\t\tname: 'status',\n\t\t\ttitle: 'Status',\n        },\n        { \n\t\t\tname: 'action_delete',\n\t\t\ttitle: ' ',\n        },\n    ];\n\n    const menuItems = [\n        'Groups',\n        'Users'\n    ]\n\n    const handleMenuClick = (item, index) => {\n        setActiveItem(item);\n        setActiveClass(index)\n    }\n\n    const onSaveAddRole = (items) => {\n        console.log(items, 'onsaveaddrole')\n    }\n\n    const handleRemoveRoleModalClose = () => {\n        setIsModalRemoveOpen(true)\n    }\n\n    return (\n        <>\n            <Grid container xs={12}>\n                <Grid item xs={12}>\n                    <Typography><b>Attached Groups and Users</b></Typography>\n                </Grid> \n                <Grid item xs={12}>\n                    <Grid container xs={12} alignItems={'center'}>\n                        <Grid item xs={6}>\n                            <ul style={{padding: '0', margin: '0'}}>\n                                {\n                                    menuItems.map((item, i) => (\n                                        <li className={classes.menuList}>\n                                            <Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => handleMenuClick(item, i)}>{item}</Link>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Grid>\n                        <Grid item xs={6} className={classes.alignRight}>\n                            <Link onClick={() => { setShowBlock('block') }}> Add to this role</Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    { \n                        activeItem == 'Groups' ?\n                            <>\n                                <ReactSearch onSearch={() => console.log('search')} placeholder={'Search a user group'}></ReactSearch>\n                                <ReactTable \n                                    rows={groupsRows} \n                                    columns={groupsColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                        : null\n                    }\n                    {\n                        activeItem == 'Users' ?\n                            <>\n                                <ReactSearch onSearch={() => console.log('search')} placeholder={'Search a user account'}/>\n                                <ReactTable \n                                    rows={userRows} \n                                    columns={userColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                        : null\n                    }\n                </Grid>\n            </Grid>\n            <SideModalBlock \n                handleClose={() => { setShowBlock('none') }} \n                showBlock={showBlock}\n                title={'Add to this Role'}>\n                <AddRoleBody \n                    onClose={() => {\n                        setShowBlock('none')\n                    }} \n                    onSave={onSaveAddRole}\n                />\n            </SideModalBlock>\n            <ModalComponent \n\t\t\t\tisModalOpen={ isModalRemoveOpen }\n\t\t\t\tonClose={handleRemoveRoleModalClose}\n\t\t\t\tmessage={'Remove APD screening from this role?'}\n\t\t\t\ttitle={'Remove from Role'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => {setIsModalRemoveOpen(false)}} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Remove</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/> \n        </>\n    )\n}","//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\nimport { Store } from 'Components/Stores/IStore';\nimport { AccountsActions } from './AccountsActions';\nimport { IAccountsPage } from './IAccountsPage';\nimport { Grid, Button } from '@material-ui/core';\n// import Typography from '@material-ui/core/Typography';\n\nimport { LoadingIndicator } from 'Components/UI';\nimport { Account } from './Components/Account';\nimport { GroupsAndUsers } from './Components/GroupsAndUsers';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { accountsPageStyles } from './style';\n// import { LoadingIndicator } from 'Components/UI';\n\n//#endregion Interface Imports\n\nexport const AccountsPage: React.FC<IAccountsPage.IProps> = (props: IAccountsPage.IProps): JSX.Element => {\n\tconst classes = accountsPageStyles();\n\tconst [viewOnly, setViewOnly] = useState(true);\n\tconst [loading, setLoading] = useState(false);\n\tconst [activeItem, setActiveItem] = useState('Account');\n\tconst [mode, setMode] = useState('view');\n\tconst [isModalConfirmExitOpen, setIsModalConfirmExitOpen] = useState(false);\n\tconst [isModalConfirmSaveOpen, setIsModalConfirmSaveOpen] = useState(false);\n\tconsole.log(setLoading, activeItem);\n\tconsole.log(props);\n\n\n\n\tconst sideBarItems = [\n\t\t{\n\t\t\tname: 'Account',\n\t\t\t// label: 'POLICY'\n\t\t},\n\t\t{\n\t\t\tname: 'Activity Logs',\n\t\t\t// label: 'GROUPIE'\n\t\t},\n\t\t{\n\t\t\tname: 'Audit Logs',\n\t\t\t// label: 'GROUPIE'\n\t\t},\n\t];\n\n\t// const menuItems = [\n\t// \t{\n\t// \t\tname: 'Notifications',\n\t// \t},\n\t// \t{\n\t// \t\tname: 'System',\n\t// \t},\n\t// \t{\n\t// \t\tname: 'Password',\n\t// \t},\n\t// ]\n\n\tconst breadCrumbs = [\n\t\t'ACCOUNT'\n\t];\n\n\tconst editRole = () => {\n\t\tsetViewOnly(false);\n\t\tsetMode('edit');\n\t\tconsole.log(setActiveItem, 'yes edit');\n\t}\n\n\tconst activeSideBarItem = (item) => {\n\t\tsetActiveItem(item);\n\t\tsetViewOnly(true);\n\t}\n\n\tconst handleModalConfirmationClose = () => {\n\t\tsetIsModalConfirmSaveOpen(false);\n\t\tsetIsModalConfirmExitOpen(false);\n\t}\n\n\n\t// const activeMenuItems = (item) => {\n\t// \tconsole.log(item);\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<SubHeader\n\t\t\t\theadingTitle={'Brian Joseph M. Dimaculangan'}\n\t\t\t\tbreadCrumbsArray={breadCrumbs}\n\t\t\t\tbuttonFunc={editRole}\n\t\t\t\tbuttonName={'Edit Account'}\n\t\t\t\tlayoutType={'layout_1'}\n\t\t\t\tenableButton={true}\n\t\t\t// activeItems={activeMenuItems}\n\t\t\t// menuItemsArray={menuItems}\n\t\t\t></SubHeader>\n\t\t\t<div className={classes.main}>\n\t\t\t\t{loading ?\n\t\t\t\t\t(<LoadingIndicator />) : null\n\t\t\t\t}\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={3} className={classes.sideBarContainer}>\n\t\t\t\t\t\t<SideMenu\n\t\t\t\t\t\t\titems={sideBarItems}\n\t\t\t\t\t\t\tactiveItems={activeSideBarItem}\n\t\t\t\t\t\t></SideMenu>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={9} className={classes.contentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Account' && <Account mode={mode} classes={classes} viewOnly={viewOnly}></Account>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Accounts' && <GroupsAndUsers classes={classes} viewOnly={viewOnly}></GroupsAndUsers>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmSaveOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Save all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmSaveOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Save</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmExitOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Exit and remove all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmExitOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button className={classes.button} variant={'contained'} color={'primary'}>Continue</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state: Store) => state.accounts;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(AccountsActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}