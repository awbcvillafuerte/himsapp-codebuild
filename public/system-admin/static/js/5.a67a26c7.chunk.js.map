{"version":3,"sources":["Components/UI/ModalComponent/ModalComponent.tsx","../node_modules/@material-ui/icons/Close.js","Pages/Lookup/Components/Loader/index.tsx","Components/UI/SubHeader/index.tsx","Components/UI/SideMenu/index.tsx","Components/UI/TableComponent/ReactTable.tsx","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/system/esm/css.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","Pages/Roles/ActionConsts.ts","Pages/Roles/RolesActions.ts","Pages/Roles/Components/ViewPolicies.tsx","Pages/Roles/Components/EditPolicies.tsx","Pages/Roles/Components/Policies.tsx","Pages/Roles/Components/AddUserRoleBody.tsx","Pages/Roles/Components/AddGroupRoleBody.tsx","Pages/Roles/Components/GroupsAndUsers.tsx","Pages/Roles/RolesPage.tsx"],"names":["useStyles","makeStyles","theme","dialog","dialogAction","marginBottom","spacing","marginTop","justifyContent","dialogContentContainer","width","container","paddingRight","paddingLeft","closeButton","position","right","top","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","classes","open","isModalOpen","onClose","aria-labelledby","maxWidth","className","justify","alignItems","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","defaultProps","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","root","height","zIndex","bottom","left","textAlign","backgroundColor","outline","display","flexDirection","Loader","size","grayBg","padding","mainContainer","sectionTitle","subSectionTitle","editBtn","alignRight","menuList","menuLink","LinkActive","textDecoration","SubHeader","buttonName","headingTitle","breadCrumbsArray","buttonFunc","layoutType","menuItemsArray","activeItems","enableButton","React","activeClass","setActiveClass","gutterBottom","length","map","crumbs","i","name","to","link","style","margin","classNames","itemName","index","variant","sideBarLists","listStyle","sideBarLink","sideBarLinkDisabled","pointerEvents","SideMenu","items","setActiveItem","useState","useEffect","reset","label","disabled","statusOption","Select","restProps","renderValue","selected","find","key","FilterCell","filter","onFilter","filteringEnabled","column","paddingTop","onChange","e","target","labelWidth","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupIconContentCell","expanded","verticalAlign","faAngleUp","faAngleDown","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","onCheckRow","onSelectGroup","loading","onSortingChange","enableOpenGroupTotalChecked","selection","setSelection","pageSizes","sorting","setSorting","selectCell","row","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","onFiltersChange","onFilterChange","messages","noData","cellComponent","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","isChecked","countChecked","countItems","data","iconComponent","groupNameChecked","acc","clone","styleFunction","newStyleFunction","output","css","input","fields","keys","forEach","prop","indexOf","omit","filterProps","propTypes","concat","_len","arguments","styles","Array","_key","fn","reduce","values","sm","md","lg","xl","defaultBreakpoints","up","handleBreakpoints","propValue","styleFromPropValue","isArray","themeBreakpoints","breakpoints","_themeBreakpoints","breakpoint","getPath","obj","path","split","options","_options$cssProperty","cssProperty","themeKey","transform","themeMapping","propValueFinal","getBorder","minWidth","maxHeight","minHeight","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","cache","arg","memoize","_prop$split","_prop$split2","a","property","dir","spacingKeys","getStyleFromPropValue","cssProperties","transformer","transformed","Math","abs","getValue","themeSpacing","getTransformer","Component","componentCreator","defaultTheme","positions","shadows","Box","ActionConsts","ResetReducer","SetReducer","RolesActions","payload","type","ViewPolicies","onNavigateSideMenu","Grid","InputLabel","inputLabel","htmlFor","Typography","role_id","module","description","status","effectivity_date","moment","format","expiry_date","associate_groups","groups","Link","console","log","date_last_update","EditPolicies","dataChanges","isProcessMaker","effectivityDate","expiryDate","editData","setEditData","onBlur","is_processMaker","Checkbox","maxDate","subtract","startOf","maxDateMessage","inputVariant","minDate","add","minDateMessage","invalidDateMessage","Policies","mode","rbacList","rbacState","onUpdateChange","onSortChange","onSearch","isAddedModalRole","setIsAddedModalRole","moduleValue","setModuleValue","isModuleModalOpen","setIsModuleModalOpen","moduleLabel","setModuleLabel","isModalConfirmChangeModule","setIsModalConfirmChangeModule","newRbacList","setNewRbacList","setLoading","defaultFilters","setDefaultFilters","isModalDeleteSuccessOpen","setIsModalDeleteSuccessOpen","isModalCannotEditOpen","setIsModalCannotEditOpen","isEdited","setIsEdited","moduleItems","handleUpdateCheck","_data","rbac","toISOString","is_processmaker","_id","group","ReactSearch","handleOnCheckRow","setTimeout","limit","count","handleOnCheckGroup","Button","button","menuItems","moduleName","Number","handleContinueRole","selectedItems","borderRadius","xIcon","AddUserRoleBody","handleOnSearch","list","arr","state","push","setState","handleRemoveItem","splice","handleOnSaveItems","onSave","comboArray","this","buttonsContainer","selectedContainer","selectedText","saveButton","cancelButton","searchLabel","comboBoxMode","comboListsArray","faTimesCircle","AddGroupRoleBody","getAllGroups","then","res","body","newChoices","c","beauty","catch","err","GroupsAndUsers","activeItem","groupShowBlock","setGroupShowBlock","userShowBlock","setUserShowBlock","isModalRemoveOpen","setIsModalRemoveOpen","isModalRemoveSuccessOpen","setIsModalSuccessRemoveOpen","isModalSuccessUserGroupOpen","setIsModalSuccessGroupOpen","isModalSuccessUserAccountOpen","setIsModalSuccessUserOpen","isModalRemoveSuccessUserAccountOpen","setIsModalSuccessRemoveUserOpen","onSaveAddRole","handleMenuClick","group_id","users_in_group","wordWrapEnabled","align","sortingEnabled","username","user_account","last_activity_date","handleClose","showBlock","main","headMain","gridContainer","paddingBottom","gridContainerNoPadding","sideBarContainer","borderRight","contentContainer","fieldGroupTitle","listItemTextRoot","flex","listItemTextPrimarySelected","cursor","listItemTextPrimaryNotSelected","dropzone","border","keyboardDatePicker","checkbox","radio","appBar","grow","flexGrow","buttonTitle","buttonSubTitle","RolesPage","setViewOnly","activeItemIndex","setActiveItemIndex","isModalConfirmExitOpen","setIsModalConfirmExitOpen","isModalConfirmSaveOpen","setIsModalConfirmSaveOpen","isModalSaveSuccessOpen","setIsmodalSaveSuccessOpen","setMode","isOpenSideModalBlock","setIsOpenSideModalBlock","policyResponse","setPolicyResponse","setModuleName","setRbacList","breadCrumbs","setBreadCrumbs","rbacCount","roleId","setRoleId","policyData","setPolicyData","isRedirect","setIsRedirect","order","skip","setRbacState","typingTimeout","setTypingTimeout","showDeactivationWarning","setShowDeactivationWarning","sideBarItems","handleGetRoleData","getRoleData","match","params","response","_crumbs","handGetRbacList","alert","sort","resParam","_mode","search","clearTimeout","_filter","_order","like","where","getRbacList","policy","activeSideBarItem","handleModalConfirmationClose","pathname","page","onChangeModuleName","generateRoleId","handleChangeModuleName","openSideModalBlock","updateRoleRbac","handleOnSave","today","exp_date","isSameOrAfter","mapStateToProps","roles","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/5.a67a26c7.chunk.js","sourcesContent":["import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom'\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tgrayBg: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '25px 24px'\n\t},\n\tmainContainer: {\n\t\tpadding: '25px 24px'\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n});\n\n\ninterface SubHeaderProps {\n\theadingTitle: string;\n\tbreadCrumbsArray: any[],\n\tbuttonName?: string,\n\tlayoutType?: string,\n\tmenuItemsArray?: any,\n\tenableButton?: boolean\n\tbuttonFunc?: () => void,\n\tactiveItems?: (item) => void,\n\n}\n\nexport const SubHeader: React.FC<SubHeaderProps> = (\n\tprops: SubHeaderProps,\n): JSX.Element | null => {\n\tconst {\n\t\tbuttonName,\n\t\theadingTitle,\n\t\tbreadCrumbsArray,\n\t\tbuttonFunc,\n\t\tlayoutType,\n\t\tmenuItemsArray,\n\t\tactiveItems,\n\t\tenableButton\n\t} = props\n\tconst classes = useStyles();\n\tconst [activeClass, setActiveClass] = React.useState(0);\n\n\n\tconst menulinkClick = (itemName, index) => {\n\t\tactiveItems !== undefined && activeItems(itemName)\n\t\tsetActiveClass(index)\n\t}\n\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={layoutType === 'layout_1' ? classes.mainContainer : classes.grayBg}>\n\t\t\t\t<Grid container xs={12} alignItems={'center'} >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_1' &&\n\t\t\t\t\t\t\t<Typography gutterBottom className={classes.subSectionTitle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbreadCrumbsArray && breadCrumbsArray.length > 0 && breadCrumbsArray.map((crumbs, i) => (\n\t\t\t\t\t\t\t\t\t\tbreadCrumbsArray.length === i + 1 ? <b>{crumbs.name ? crumbs.name : crumbs}</b> : <><RouteLink to={`${crumbs.link ? crumbs.link : ''}`} style={{ color: '#272E4C', textDecoration: 'none' }}>{crumbs.name ? crumbs.name : crumbs}</RouteLink> / </>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Typography gutterBottom className={classes.sectionTitle}>\n\t\t\t\t\t\t\t{headingTitle}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlayoutType === 'layout_2' &&\n\t\t\t\t\t\t\t<ul style={{ padding: '0', margin: '0' }}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmenuItemsArray.length > 0 && menuItemsArray.map((item, i) => (\n\t\t\t\t\t\t\t\t\t\t<li className={classes.menuList}>\n\t\t\t\t\t\t\t\t\t\t\t<Link className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)} onClick={() => menulinkClick(item.name, i)}>{item.name}</Link>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6} className={classes.alignRight}>\n\t\t\t\t\t\t{enableButton ?\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid=\"button-id\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.editBtn}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tbuttonFunc !== undefined && buttonFunc()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{buttonName}\n\t\t\t\t\t\t\t</Button> : ''}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t)\n}","import * as React from 'react';\nimport { Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles({\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n        listStyle: 'none',\n        position: 'sticky',\n        top: 20\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n    },\n    sideBarLinkDisabled: {\n        color: \"rgba(39, 46, 76, 0.6)\",\n\t\tmargin: \"0 0 10px\",\n        display: \"block\",\n        pointerEvents: 'none'\n    },\n    LinkActive: {\n        color: \"#2C2E8E\",\n        fontWeight: \"bold\",\n        textDecoration: \"underline\"\n    }\n});\n\nexport interface ISideMenuProps {\n    items: any,\n    activeItems: (item) => void,\n    reset?: any,\n    setActiveItem?: number,\n}\n\nexport const SideMenu : React.FC<ISideMenuProps> = (props: ISideMenuProps): JSX.Element => {\n    const {items , activeItems, setActiveItem} = props;\n    const [activeClass, setActiveClass] = useState(0);\n    const classes = useStyles();\n    useEffect(() => {\n        // resets the active item to zero when\n        // the reset props changes\n        setActiveItem && setActiveClass(setActiveItem)\n        if(props.reset !== undefined){\n            setActiveClass(0)\n            activeItems(items[0].name)\n        }\n    }, [props.reset])\n\n    const sideBarlinkClick = (itemName, index) => {\n        activeItems(itemName)\n        setActiveClass(index)\n    }\n\n    return (\n        <>\n            <ul className={classes.sideBarLists}>\n                {\n                    items.map((item, i) => (\n                        <li>\n                            {\n                                item.label !== undefined &&\n                                <Typography variant={'subtitle2'} style={{color:'#929292', fontSize: '12px'}}>{ item.label }</Typography>\n                            }\n                            {\n                                !item.disabled ? \n                                 <Link \n                                    className={classNames(classes.sideBarLink, setActiveItem ? setActiveItem === i ?  classes.LinkActive : null : activeClass === i ? classes.LinkActive : null)} \n                                    onClick={() => sideBarlinkClick(item.name, i)}\n                                >\n                                    { item.name } \n                                </Link> :\n                                <Link\n                                    className={classNames(classes.sideBarLinkDisabled)}\n                                >\n                                    { item.name }\n                                </Link>\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    )\n}","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n    // TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    faAngleDown,\n    faAngleUp,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport './ReactTable.scss';\n\n// import { ReactSearch } from '../SearchBar/ReactSearch';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    enableOpenGroupTotalChecked?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    groupNameChecked?: any,\n    loading?: boolean,\n    defaultFilters?: any,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n    onCheckRow?: (row) => void,\n    onSelectGroup?: (group) => void,\n    onFilterChange?: (filter) => void,\n    onSortingChange?: (sort) => void,\n\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    enableOpenGroupTotalChecked: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n    groupNameChecked: [],\n    loading: false,\n}\n\nconst statusOption = [\n    {\n        value: 'all',\n        label: 'All',\n    },\n    {\n        value: 'active',\n        label: 'Active'\n    },\n    {\n        value: 'deactivated',\n        label: 'Deactivated'\n    },\n    {\n        value: 'awaiting activation',\n        label: 'Awaiting activation'\n    }\n]\n\nconst Select = ({ items, ...restProps }: any) => {\n    return (\n        <MaterialUI.Select\n            variant='outlined'\n            style={{ width: '100%' }}\n            renderValue={(selected: any) => {\n                if (selected != null) {\n                    const value: any = items.find((item: any) => {\n                        return item.value === selected;\n                    });\n                    if (value) {\n                        return value.label;\n                    } else {\n                        return '——';\n                    }\n                }\n                return '——';\n            }}\n            {...restProps}\n        >\n            {items.map((item: any, i: number) => (\n                <MaterialUI.MenuItem key={i} value={item.value}>\n                    {item.label}\n                </MaterialUI.MenuItem>\n            ))}\n        </MaterialUI.Select>\n    );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else if (column.name === 'status') {\n            return (\n                <MaterialUI.TableCell classes={classes} style={{ paddingTop: '5px' }}>\n                    <Select\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        name={'status'}\n                        items={statusOption}\n                        id={'status'}\n                        value={filter ? filter.value : ''}\n                    />\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\n\nconst groupIconContentCell = ({ expanded }: any) => {\n    return (\n        <>\n            <div style={{ padding: '8.5px 12px', display: 'table-cell', verticalAlign: 'middle' }} >\n                <FontAwesomeIcon\n                    icon={expanded ? faAngleUp : faAngleDown}\n                    size={'2x'}\n                    color={\"rgba(0, 0, 0, 0.54)\"}\n                />\n            </div>\n        </>\n    )\n}\n\n\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize,\n        onCheckRow,\n        onSelectGroup,\n        // groupNameChecked,\n        loading,\n        onSortingChange,\n        enableOpenGroupTotalChecked\n    } = props;\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    const [sorting, setSorting] = React.useState([])\n    // const [pageSize, setPageSize] = React.useState(10);\n    // console.log(onCheckRow, onSelectGroup)\n\n    const setSortingMethod = (e: any) => {\n        onSortingChange && onSortingChange(e)\n        setSorting(e);\n    }\n    const handleSelectionChange = (row: any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const selectCell = ({ row, onToggle }: any) => {\n        return (\n            <MaterialUI.TableCell>\n                <MaterialUI.Checkbox\n                    icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                    checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                    checked={row.checked}\n                    onClick={(e: any) => {\n                        e.stopPropagation();\n                        onToggle();\n                        onCheckRow && onCheckRow(row);\n                    }}\n                />\n            </MaterialUI.TableCell>\n        )\n    }\n\n\n    const groupContentCell = ({ row }: any) => {\n\n        let isChecked = false;\n        let countChecked = 0;\n        let countItems = 0;\n        rows.map(data => {\n            if (data.name === row.value) {\n                countItems++;\n                if (data.checked) {\n                    isChecked = true;\n                    countChecked++;\n                }\n            }\n        })\n\n        if (!viewOnly) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 15.5px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <MaterialUI.Checkbox\n                            icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                            checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                            checked={isChecked}\n                            onClick={e => {\n                                e.stopPropagation();\n                                onSelectGroup && onSelectGroup(row.value)\n                            }}\n                        />\n                    </div>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else if (viewOnly && enableOpenGroupTotalChecked) {\n            return (\n                <>\n                    <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{row.value}</span>\n                    </div>\n                    <div style={{ padding: '8.5px 30px', display: 'table-cell', verticalAlign: 'middle' }} >\n                        <span>{countChecked}/{countItems}</span>\n                    </div>\n                </>\n            )\n        } else {\n            return (\n                <div style={{ padding: '8.5px 2px', display: 'table-cell', verticalAlign: 'middle' }} >\n                    <span>{row.value}</span>\n                </div>\n            )\n        }\n\n    }\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort && onSortingChange ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                            sorting={sorting}\n                            onSortingChange={setSortingMethod}\n                        />\n                    ) : !disableSort ? (\n                        <SortingState\n                            defaultSorting={[]}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ?\n                        <FilteringState\n                            onFiltersChange={props.onFilterChange}\n                        /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {!disableSort ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    {/* <TableFixedColumns /> */}\n                    <PagingPanel\n                        pageSizes={enableGrouping ? [30, 40, 50] : pageSizes}\n                    />\n                    {!viewOnly ?\n                        <TableSelection\n                            highlightRow\n                            selectByRowClick\n                            showSelectAll={enableSelectAll ? true : undefined}\n                            cellComponent={!loading ? selectCell : selectCell}\n                            showSelectionColumn={enableSelection}\n                        /> : null}\n\n                    {enableGrouping ?\n                        <TableGroupRow\n                            contentComponent={groupContentCell}\n                            iconComponent={groupIconContentCell}\n                        ></TableGroupRow> : null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n                {\n                    loading &&\n                    <Loader />\n                }\n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","import deepmerge from 'deepmerge'; // < 1kb payload overhead when lodash/merge is > 3kb.\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default css;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  process.env.NODE_ENV !== \"production\" ? warning(props.theme, '@material-ui/system: you are calling a style function without a theme value.') : void 0;\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal];\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight);\nexport default sizing;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport warning from 'warning';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\n\nfunction getTransformer(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      process.env.NODE_ENV !== \"production\" ? warning(abs <= themeSpacing.length - 1, [\"@material-ui/system: the value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n')) : void 0;\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(false, [\"@material-ui/system: the `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n')) : void 0;\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = getTransformer(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, palette, positions, shadows, sizing, spacing, typography, css } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = css(compose(borders, display, flexbox, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","export const ActionConsts = {\n\tRoles: {\n\t\tResetReducer: 'Roles_ResetReducer',\n\t\tSetReducer: 'Roles_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const RolesActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Roles.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Roles.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    InputLabel,\n    Typography,\n    Link\n} from '@material-ui/core';\nimport moment from 'moment';\n\ninterface IViewPoliciesProps {\n    classes?: any,\n    rows: any,\n    onNavigateSideMenu?: (group) => void,\n}\n\nexport const ViewPolicies: React.FC<IViewPoliciesProps> = (props: IViewPoliciesProps): JSX.Element => {\n    const {\n        classes,\n        rows,\n        onNavigateSideMenu,\n    } = props;\n\n    return (\n        <>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                <Typography><b>{rows && rows.role_id ? rows.role_id : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">MODULE</InputLabel>\n                <Typography><b>{rows && rows.module ? rows.module : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"description\">DESCRIPTION</InputLabel>\n                <Typography><b>{rows && rows.description ? rows.description : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                <Typography><b>{rows && rows.name ? rows.name : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"status\">STATUS</InputLabel>\n                <Typography><b>{rows && rows.status ? rows.status : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">EFFECTIVITY DATE</InputLabel>\n                <Typography><b>{rows && rows.effectivity_date ? moment(rows.effectivity_date).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">EXPIRY DATE</InputLabel>\n                <Typography><b>{rows && rows.expiry_date ? moment(rows.expiry_date).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"description\">ATTACHED GROUP/S</InputLabel>\n                <Typography>\n                    {\n                        rows && rows.associate_groups ? rows.associate_groups.length > 0 && rows.associate_groups.map((groups) => (\n                            <b>{groups}</b>\n                        )) : '-'\n                    }\n                </Typography>\n                <Link\n                    onClick={() => {\n                        console.log(onNavigateSideMenu)\n                        // onNavigateSideMenu && onNavigateSideMenu('Groups And Users')\n                    }}\n                >+ Add Group</Link>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"primary_module\">LAST UPDATE</InputLabel>\n                <Typography><b>{rows && rows.date_last_update ? moment(rows.date_last_update).format('MMMM DD, YYYY') : '-'}</b></Typography>\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport {\n    Grid,\n    InputLabel,\n    Typography,\n    Checkbox\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { BasicTextField } from 'Components/UI';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\ninterface IEditPoliciesProps {\n    classes?: any,\n    rows: any,\n    dataChanges: (data) => void,\n}\n\nexport const EditPolicies: React.FC<IEditPoliciesProps> = (props: IEditPoliciesProps): JSX.Element => {\n    const {\n        rows,\n        classes,\n        dataChanges\n    } = props;\n\n    const [editData, setEditData] = React.useState<any>({\n        description: null,\n        isProcessMaker: null,\n        effectivityDate: '',\n        expiryDate: '',\n    })\n\n\n    return (\n        <>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">MODULE</InputLabel>\n                <Typography><b>{rows.module}</b></Typography>\n                {/* <Link onClick={() => { setIsModuleModalOpen(true) }}>Change Module</Link> */}\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE ID</InputLabel>\n                <Typography><b>{rows.role_id}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">DESCRIPTION</InputLabel>\n                <BasicTextField\n                    value={editData.description !== null ? editData.description : rows.description}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            description: e.target.value\n                        })\n                    }}\n                    onBlur={(e: any) => {\n                        dataChanges({\n                            ...editData,\n                            description: e.target.value\n                        })\n                    }}\n                    disabled={rows.is_processMaker ? true : false}\n                ></BasicTextField>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">ROLE NAME</InputLabel>\n                <Typography><b>{rows && rows.name ? rows.name : '-'}</b></Typography>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel}>IS A PROCESSMAKER PROCESS MAKER ROLE</InputLabel>\n                <Checkbox\n                    checked={editData.isProcessMaker !== null ? editData.isProcessMaker : rows.is_processMaker}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            isProcessMaker: e.target.checked\n                        })\n                        dataChanges({\n                            ...editData,\n                            isProcessMaker: e.target.checked\n                        })\n                    }}\n                    disabled={true}\n                ></Checkbox>\n            </Grid>\n            <Grid item xs={4}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">STATUS</InputLabel>\n                <Typography><b>{rows && rows.status}</b></Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EFFECTIVITY DATE</InputLabel>\n                <KeyboardDatePicker\n                    maxDate={moment(editData.expiryDate).subtract(1, 'days').startOf('day')}\n                    maxDateMessage={\"Effectivity date cannot be higher or equal than expiry date.\"}\n                    value={editData.effectivityDate !== '' ? moment(editData.effectivityDate) : moment(rows.effectivity_date)}\n                    format={'MMM DD, YYYY'}\n                    style={{ width: \"100%\", marginTop: 10 }}\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            effectivityDate: e\n                        })\n                        dataChanges({\n                            ...editData,\n                            effectivityDate: e\n                        })\n                    }}\n                    disabled={rows.is_processMaker ? true : false}\n                    inputVariant={'outlined'}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <InputLabel className={classes.inputLabel} htmlFor=\"role_id\">EXPIRY DATE (If applicable)</InputLabel>\n                <KeyboardDatePicker\n                    minDate={moment(editData.effectivityDate).add(1, 'days').startOf('day')}\n                    minDateMessage={\"Expiry date cannot be lower or equal than effectivity date.\"}\n                    value={editData.expiryDate !== '' ? moment(editData.expiryDate) : rows.expiry_date ? moment(rows.expiry_date) : null}\n                    style={{ width: \"100%\", marginTop: 10 }}\n                    invalidDateMessage=\"\"\n                    format=\"MMMM DD, YYYY\"\n                    onChange={(e: any) => {\n                        setEditData({\n                            ...editData,\n                            expiryDate: e,\n                        })\n                        dataChanges({\n                            ...editData,\n                            expiryDate: e,\n                        })\n                    }}\n                    disabled={rows.is_processMaker ? true : false}\n                    inputVariant={'outlined'}\n                />\n            </Grid>\n\n\n        </>\n    )\n}\n","import * as React from 'react';\nimport {\n    Grid,\n    Button,\n} from '@material-ui/core';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { BasicSelect } from 'Components/UI';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n// import BasicSelect from 'Components/UI/BasicSelect'\nimport moment from 'moment';\nimport { RolesRbacData } from '../IRolesPage';\nimport { ViewPolicies } from './ViewPolicies';\nimport { EditPolicies } from './EditPolicies';\n\nexport interface IPoliciesProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    mode?: 'edit' | 'view' | 'add' | string,\n    moduleName?: string,\n    rbacList: any,\n    isEdited: boolean,\n    roleId?: string,\n    rbacState: any,\n    onPageChange: (page) =>  void,\n    onFilterChange: (filter) =>  void,\n    onSortChange: (sort) =>  void,\n    onPageSizeChange: (size) =>  void,\n    onSearch: (search) => void,\n    onChangeModuleName?: (name) => void,\n    onUpdateChange: (data) => void,\n    onNavigateSideMenu?: (name) => void,\n}\n\nexport const Policies: React.FC<IPoliciesProps> = (props: IPoliciesProps): JSX.Element => {\n    const {\n        rows,\n        classes,\n        mode,\n        rbacList,\n        rbacState,\n        onUpdateChange,\n        onNavigateSideMenu,\n        onPageChange,\n        onFilterChange,\n        onSortChange,\n        onPageSizeChange,\n        onSearch\n    } = props;\n    const [isAddedModalRole, setIsAddedModalRole] = React.useState(false)\n    const [moduleValue, setModuleValue] = React.useState(0);\n    const [isModuleModalOpen, setIsModuleModalOpen] = React.useState(false);\n    const [moduleLabel, setModuleLabel] = React.useState<any>(null);\n    const [isModalConfirmChangeModule, setIsModalConfirmChangeModule] = React.useState(false)\n    const [newRbacList, setNewRbacList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [defaultFilters, setDefaultFilters] = React.useState([]);\n    const [isModalDeleteSuccessOpen, setIsModalDeleteSuccessOpen] = React.useState(false)\n    const [isModalCannotEditOpen, setIsModalCannotEditOpen] = React.useState(false);\n    const [isEdited, setIsEdited] = React.useState(false);\n        \n    const [editData, setEditData] = React.useState<any>({\n        description: null,\n        isProcessMaker: null,\n        effectivityDate: '',\n        expiryDate: '',\n    });\n\n\n    const moduleItems = [\n        {\n            name: 'User Management',\n            value: '0'\n        },\n        {\n            name: 'Membership',\n            value: '1'\n        },\n        {\n            name: 'Underwriting',\n            value: '2'\n        },\n        {\n            name: 'Customer Care',\n            value: '3'\n        },\n        {\n            name: 'Claims',\n            value: '4',\n        },\n    ]\n\n    const columns: any = [\n        {\n            name: 'operation',\n            title: 'Object and Operations',\n        },\n        {\n            name: 'policy',\n            title: 'Policies',\n        },\n        {\n            name: 'policy_id',\n            title: 'Policy ID',\n        },\n        {\n            name: 'name',\n            title: 'Name'\n        }\n    ]\n\n\n    const handleCannotEditRoleModalClose = () => {\n        setIsModalCannotEditOpen(false)\n    }\n\n    const handleDeleteSuccessRoleModalClose = () => {\n        setIsModalDeleteSuccessOpen(false)\n    }\n\n    const handleRemoveRoleModalClose = () => {\n\n    }\n\n    const handleContinueRole = () => {\n        let moduleName = moduleItems[Number(moduleValue)].name;\n        setIsModalConfirmChangeModule(false);\n        setModuleLabel(moduleName);\n        console.log(moduleLabel)\n    }\n\n    const handleOnCheckRow = (row) => {\n        setLoading(true);\n\n        let rbac = rbacList;\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList);\n        } else {\n            rbac = newRbacList;\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data._id === row._id) {\n                    data['checked'] = !data['checked'];\n                }\n            })\n            setNewRbacList(rbac);\n        }\n        setLoading(false)\n    }\n\n    const handleOnCheckGroup = (group) => {\n        setLoading(true);\n        let rbac = rbacList;\n        let countChecked = 0;\n\n        if (newRbacList.length === 0) {\n            setNewRbacList(rbacList)\n        }\n        if (rbac.length > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group && data.checked === true) {\n                    countChecked++;\n                }\n            })\n        }\n        if (countChecked > 0) {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = false;\n                }\n            })\n        } else {\n            rbac.map((data: any) => {\n                if (data.name == group) {\n                    data['checked'] = true;\n                }\n            })\n        }\n        setNewRbacList(rbac);\n        setTimeout(() => {\n            setLoading(false);\n        }, 500)\n    }\n\n    const handleUpdateCheck = (_data: any) => {\n        var rbac: any[] = [];\n        const _rbacList = newRbacList.length > 0 ? newRbacList : rbacList;\n\n        rbac = _rbacList.filter((data: any) => {\n            return data.checked;\n        })\n\n        var data: RolesRbacData = {\n            module: rows.module,\n            name: rows.name,\n            role_id: rows.role_id,\n            effectivity_date: _data.effectivityDate ? moment(_data.effectivityDate).toISOString() : rows.effectivity_date,\n            description: _data.description !== null ? _data.description : rows.description,\n            status: 'active',\n            date_last_update: moment().toISOString(),\n            is_processmaker: _data.isProcessMaker ? _data.isProcessMaker : rows.is_processMaker ? rows.is_processmaker : false,\n            rbac: rbac.length > 0 ? rbac : rows.rbac,\n        }\n\n        if (mode === 'edit') {\n            data['_id'] = rows._id\n            data['status'] = rows.status\n        }\n\n        if (_data.expiryDate !== '' || null) {\n            data['expiry_date'] = moment(_data.expiryDate).toISOString();\n        }\n\n        console.log(_data);\n        onUpdateChange(data);\n        setIsEdited(true);\n        console.log(isEdited);\n    }\n\n    const handleOnFilterChange = (filter) => {\n        setDefaultFilters(filter);\n        onFilterChange(filter)\n    }\n\n    return (\n        <>\n            <Grid container xs={12} spacing={4}>\n                {\n                    mode === 'view' ? (\n                        <ViewPolicies\n                            rows={rows}\n                            onNavigateSideMenu={(group: string) => {\n                                onNavigateSideMenu && onNavigateSideMenu(group)\n                            }}\n                            classes={classes}\n                        />\n                    ) : mode === 'edit' ? (\n                        <EditPolicies\n                            rows={rows}\n                            classes={classes}\n                            dataChanges={(data: any) => {\n                                setEditData(data);\n                                handleUpdateCheck(data);\n                            }}\n                        />\n                    ) : null\n                }\n                <Grid item xs={12}>\n\n                    <ReactSearch\n                        onSearch={onSearch}\n                        onChange={onSearch}\n                        placeholder={'Search policies'}\n                    />\n                    {\n                        <ReactTable\n                            rows={rbacList}\n                            columns={columns}\n                            enableGrouping={true}\n                            groupColumnName={'name'}\n                            viewOnly={mode === 'view' ? true : false}\n                            enableOpenGroupTotalChecked={mode === 'view' ? true : false}\n                            message={'There are no policies to show yet.'}\n                            enableSelection={mode !== 'view' ? true : false}\n                            loading={loading}\n                            onCheckRow={(row) => {\n                                handleOnCheckRow(row)\n                                setTimeout(() => {\n                                    handleUpdateCheck(editData)\n                                }, 500)\n                            }}\n                            currentPage={rbacState.currentPage}\n                            pageSize={rbacState.limit}\n                            defaultFilters={defaultFilters}\n                            onFilterChange={handleOnFilterChange}\n                            onSortingChange={onSortChange}\n                            onSetPageSize={onPageSizeChange}\n                            onPageChange={onPageChange}\n                            totalCount={rbacState.count ? rbacState.count : 0}\n                            onSelectGroup={(group) => {\n                                handleOnCheckGroup(group)\n                                setTimeout(() => {\n                                    handleUpdateCheck(editData)\n                                }, 500)\n                            }}\n                        />\n                    }\n                </Grid>\n            </Grid>\n            <ModalComponent\n                isModalOpen={isAddedModalRole}\n                onClose={handleRemoveRoleModalClose}\n                message={'New Role has been added successfully.'}\n                title={'Added New Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsAddedModalRole(false) }} className={classes.button} variant={'contained'} color={'primary'}>Okay</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModuleModalOpen}\n                onClose={() => {\n                    setIsModuleModalOpen(false)\n                }}\n                message={'Select a module for the role you will create:'}\n                title={'Choose a Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\" style={{ textAlign: 'center' }}>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModuleModalOpen(false)\n                                }}\n                                variant={'outlined'}\n                                color={'secondary'}\n                                className={classes.button}\n                            >Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button variant={'contained'} color={'primary'}\n                                className={classes.button}\n                                onClick={() => {\n                                    setIsModalConfirmChangeModule(true)\n                                    setIsModuleModalOpen(false)\n                                }}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            >\n                <div style={{ width: '90%', margin: 'auto' }}>\n                    <BasicSelect\n                        menuItems={moduleItems}\n                        width={'100%'}\n                        value={moduleValue}\n                        onChange={(e: any) => {\n                            setModuleValue(e.target.value)\n                        }}\n                    />\n                </div>\n            </ModalComponent>\n            <ModalComponent\n                isModalOpen={isModalConfirmChangeModule}\n                onClose={() => {\n                    setIsModalConfirmChangeModule(false);\n                }}\n                message={'All progress made will be lost. Continue to change the module?'}\n                title={'Confirm Change Module'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button onClick={() => { setIsModalConfirmChangeModule(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className={classes.button} variant={'contained'} color={'primary'} onClick={() => handleContinueRole()}>Continue</Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n            <ModalComponent\n                isModalOpen={isModalDeleteSuccessOpen}\n                onClose={handleDeleteSuccessRoleModalClose}\n                message={'New role has been deleted.'}\n                title={'Delete Success'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalDeleteSuccessOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n\n\n            <ModalComponent\n                isModalOpen={isModalCannotEditOpen}\n                onClose={handleCannotEditRoleModalClose}\n                message={'You do not have an assigned role to your account to perform this action.'}\n                title={'Cannot Edit Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalCannotEditOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddUserRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddUserRoleBodyState {\n    selectedItems: any;\n    comboArray: any;\n}\n\nexport class AddUserRoleBody extends React.Component<IAddUserRoleBodyProps, IAddUserRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n    // const {} = props;\n    // const classes = useStyles();\n    // const [selectedItems, setSelectedItems] = React.useState<any>([]);\n    componentDidMount() {\n        this.setState({\n            comboArray: [\n                {\n                    name: 'John Ernest Seraspi',\n                    value: 'test',\n                },\n                {\n                    name: 'Teqpwoe',\n                    value: 'test2',\n                },\n            ]\n        })\n    }\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <ReactSearch\n                    searchLabel={'Search user account'}\n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Users</label>\n                    </div>\n                    {this.state.selectedItems.map((item, index) =>\n                        <div style={classes.selectedItems}>\n                            <span style={classes.selectedText}>{item}</span>\n                            <span onClick={() => this.handleRemoveItem(index)}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                            </span>\n                        </div>\n                    )\n                    }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n// import { InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { getAllGroups } from 'Pages/API/Calls/Roles';\n\nconst useStyles = makeStyles(() => ({\n    selectedItems: {\n        borderRadius: 20,\n        fontSize: 13,\n        backgroundColor: '#d1d4db',\n        padding: '5px 10px'\n    },\n    xIcon: {\n        fontSize: 16\n    }\n}));\nconsole.log(useStyles);\n\ninterface IAddGroupRoleBodyProps {\n    onClose: () => void;\n    onSave: (items) => void;\n}\n\ninterface IAddGroupRoleBodyState {\n    selectedItems: any;\n    comboArray: any[];\n}\n\n\nexport class AddGroupRoleBody extends React.Component<IAddGroupRoleBodyProps, IAddGroupRoleBodyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedItems: [],\n            comboArray: [],\n        }\n    }\n\n    componentDidMount() {\n        getAllGroups().then(res => {\n            let data = {\n                body: res.body,\n                label: \"name\",\n            }\n            let newChoices: any = [];\n\n            if (data.body && data.body.length > 0) {\n                data.body.map(c => {\n                    let beauty = {\n                        name: c[data.label],\n                        value: c\n                    }\n                    newChoices.push(beauty)\n                })\n                this.setState({\n                    comboArray: newChoices\n                })\n                console.log(this.state.comboArray)\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n\n    handleOnSearch = (list) => {\n        let arr = this.state.selectedItems;\n        arr.push(list);\n        this.setState({\n            selectedItems: arr\n        })\n        console.log(arr);\n    }\n\n    handleRemoveItem = (index) => {\n        let arr = this.state.selectedItems;\n        arr.splice(index, 1);\n        this.setState({\n            selectedItems: arr\n        })\n    }\n\n    handleOnSaveItems = () => {\n        this.props.onSave(this.state.selectedItems);\n    }\n\n    public render(): JSX.Element {\n        const classes = {\n            buttonsContainer: {\n                padding: '1em',\n            },\n            selectedContainer: {\n                padding: '3em 0 2em'\n            },\n            selectedItems: {\n                borderRadius: 20,\n                fontSize: 13,\n                backgroundColor: '#d1d4db',\n                padding: '5px 10px',\n                margin: '5px',\n                display: 'inline-block',\n            },\n            selectedText: {\n                paddingRight: '5px'\n            },\n            saveButton: {\n                width: '135px',\n                fontSize: '14px',\n                color: '#fff',\n            },\n            cancelButton: {\n                width: '135px',\n                fontSize: '14px',\n            }\n        };\n\n        return (\n            <>\n                <ReactSearch\n                    searchLabel={'Search user group'}\n                    onSearch={this.handleOnSearch}\n                    comboBoxMode={true}\n                    comboListsArray={this.state.comboArray}\n                />\n                <div style={classes.selectedContainer}>\n                    <div>\n                        <label>Selected Groups</label>\n                    </div>\n                    {this.state.selectedItems.map((item, index) =>\n                        <div style={classes.selectedItems}>\n                            <span style={classes.selectedText}>{item}</span>\n                            <span onClick={() => this.handleRemoveItem(index)}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                            </span>\n                        </div>\n                    )\n                    }\n                </div>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        <Button style={classes.cancelButton} variant=\"outlined\" color=\"secondary\" onClick={() => this.props.onClose()}>Cancel</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button disabled={this.state.selectedItems.length < 1 ? true : false} style={classes.saveButton} variant=\"contained\" color=\"primary\" onClick={() => this.handleOnSaveItems()}>Save</Button>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n}\n// export const AddRoleBody : React.FC<IAddRoleBodyProps> = (props: IAddRoleBodyProps): JSX.Element => {\n\n// }","import * as React from 'react';\nimport { Typography, Grid, Link, Button } from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { SideModalBlock } from 'Components/UI';\nimport { AddUserRoleBody } from './AddUserRoleBody';\nimport { AddGroupRoleBody } from './AddGroupRoleBody';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\n\nexport interface IGroupsAndUsersProps {\n    rows?: any,\n    viewOnly: boolean,\n    classes: any,\n    openSideModalBlock?: boolean,\n}\n\nexport const GroupsAndUsers: React.FC<IGroupsAndUsersProps> = (props: IGroupsAndUsersProps): JSX.Element => {\n    const {\n        rows,\n        viewOnly,\n        classes,\n        // openSideModalBlock\n    } = props;\n    const [activeItem, setActiveItem] = useState('Groups');\n    const [activeClass, setActiveClass] = useState(0);\n    const [groupShowBlock, setGroupShowBlock] = useState('none');\n    const [userShowBlock, setUserShowBlock] = useState('none');\n    const [isModalRemoveOpen, setIsModalRemoveOpen] = useState(false);\n    const [isModalRemoveSuccessOpen, setIsModalSuccessRemoveOpen] = useState(false);\n    const [isModalSuccessUserGroupOpen, setIsModalSuccessGroupOpen] = useState(false);\n    const [isModalSuccessUserAccountOpen, setIsModalSuccessUserOpen] = useState(false);\n    const [isModalRemoveSuccessUserAccountOpen, setIsModalSuccessRemoveUserOpen] = useState(false);\n    console.log(rows, viewOnly);\n\n    const userRows: any = [\n        {\n            username: 'Imstaana',\n            user_account: 'Louise Marianne Sta. Ana',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n        {\n            username: 'psbarrios',\n            user_account: 'Philip Salvador Q. Barrios',\n            last_activity_date: 'Nov 12, 2019',\n            status: 'Active',\n        },\n    ]\n\n    const userColumns: any = [\n        {\n            name: 'username',\n            title: 'Username',\n        },\n        {\n            name: 'user_account',\n            title: 'User Account',\n        },\n        {\n            name: 'last_activity_date',\n            title: 'Last Activity Date',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ]\n\n    const groupsRows: any = [\n        {\n            group_id: '0122-93282-0012',\n            group: \"APD Encoding\",\n            users_in_group: 10,\n            status: 'Active',\n        },\n        {\n            group_id: '0132-232-0012',\n            group: \"APD Decoding\",\n            users_in_group: 34,\n            status: 'Active',\n        },\n    ];\n\n    const groupsColumns: any = [\n        {\n            name: 'group_id',\n            title: 'Group ID',\n        },\n        {\n            name: 'group',\n            title: 'Group',\n        },\n        {\n            name: 'users_in_group',\n            title: 'Users in the Group',\n        },\n        {\n            name: 'status',\n            title: 'Status',\n        },\n        {\n            name: 'action_delete',\n            title: ' ',\n        },\n    ];\n\n    const menuItems = [\n        'Groups',\n        'Users'\n    ]\n\n    const handleMenuClick = (item, index) => {\n        setActiveItem(item);\n        setActiveClass(index)\n    }\n\n    const onSaveAddRole = (items) => {\n        console.log(items, 'onsaveaddrole')\n    }\n\n    const handleRemoveRoleModalClose = () => {\n        setIsModalRemoveOpen(true)\n    }\n\n    const handleRemoveSuccessGroupModalClose = () => {\n        setIsModalSuccessRemoveOpen(true)\n    }\n\n    const handleSuccessUserGroupClose = () => {\n        setIsModalSuccessGroupOpen(true)\n    }\n\n    const handleSuccessUserAccountClose = () => {\n        setIsModalSuccessUserOpen(true)\n    }\n\n    const handleRemoveSuccessUserAccountClose = () => {\n        setIsModalSuccessRemoveUserOpen(true)\n    }\n\n    return (\n        <>\n            <Grid container xs={12}>\n                <Grid item xs={12}>\n                    <Typography><b>Attached Groups and Users</b></Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container xs={12} alignItems={'center'}>\n                        <Grid item xs={6}>\n                            <ul style={{ padding: '0', margin: '0' }}>\n                                {\n                                    menuItems.map((item, i) => (\n                                        <li className={classes.menuList}>\n                                            <Link\n                                                className={classNames(classes.menuLink, activeClass === i ? classes.LinkActive : null)}\n                                                onClick={() => handleMenuClick(item, i)}>\n                                                {item}\n                                            </Link>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Grid>\n                        <Grid item xs={6} className={classes.alignRight}>\n                            {/* <Link onClick={() => { setShowBlock('block') }}> Add to this role</Link> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        activeItem == 'Groups' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setGroupShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onSearch={() => console.log('search')}\n                                    placeholder={'Search a user group'}\n                                ></ReactSearch>\n                                <ReactTable\n                                    rows={groupsRows}\n                                    columns={groupsColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                            : null\n                    }\n                    {\n                        activeItem == 'Users' ?\n                            <>\n                                <Grid className={classes.alignRight}>\n                                    <Link onClick={() => { setUserShowBlock('block') }}> Add to this role</Link>\n                                </Grid>\n                                <ReactSearch\n                                    onSearch={() => console.log('search')}\n                                    placeholder={'Search a user account'} />\n                                <ReactTable\n                                    rows={userRows}\n                                    columns={userColumns}\n                                    columnExtensions={\n                                        [{\n                                            columnName: 'action_delete',\n                                            width: 75,\n                                            wordWrapEnabled: true,\n                                            align: 'center'\n                                        }]\n                                    }\n                                    message={'There are no user accounts to show yet.'}\n                                    sortingStateColumnExtensions={[\n                                        { columnName: 'action_delete', sortingEnabled: false }\n                                    ]}\n                                    onDeleteRow={(row) => {\n                                        console.log(row, 'rowdeleted')\n                                    }}\n                                />\n                            </>\n                            : null\n                    }\n                </Grid>\n            </Grid>\n            {\n                // had to put this condition because if both blocks are open,\n                // the Users block overlaps with the Groups block\n                activeItem === 'Groups' ? (\n                    <SideModalBlock\n                        handleClose={() => { setGroupShowBlock('none') }}\n                        // showBlock={groupShowBlock === 'none' ? openSideModalBlock ? 'block' : 'none' : 'block' }\n                        showBlock={groupShowBlock}\n                        title={'Add to this Role'}>\n                        <AddGroupRoleBody\n                            onClose={() => {\n                                setGroupShowBlock('none')\n                            }}\n                            onSave={onSaveAddRole}\n                        />\n                    </SideModalBlock>\n                ) : activeItem === 'Users' ? (\n                    <SideModalBlock\n                        handleClose={() => { setUserShowBlock('none') }}\n                        showBlock={userShowBlock}\n                        title={'Add to this Role'}>\n                        <AddUserRoleBody\n                            onClose={() => {\n                                setUserShowBlock('none')\n                            }}\n                            onSave={onSaveAddRole}\n                        />\n                    </SideModalBlock>\n                ) : null\n            }\n            <ModalComponent\n                isModalOpen={isModalRemoveOpen}\n                onClose={handleRemoveRoleModalClose}\n                message={'Remove APD screening from this role?'}\n                title={'Remove from Role'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModalRemoveOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'outlined'}\n                                color={'secondary'}>\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                onClick={() => {\n                                    setIsModalRemoveOpen(false)\n                                    setIsModalSuccessRemoveOpen(true)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Remove\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalSuccessUserGroupOpen}\n                onClose={handleSuccessUserGroupClose}\n                message={'New user group have been successfully added.'}\n                title={'User group added!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessGroupOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalRemoveSuccessOpen}\n                onClose={handleRemoveSuccessGroupModalClose}\n                message={'APD Screening has been removed from this role.'}\n                title={'Remove from Role!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessRemoveOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalSuccessUserAccountOpen}\n                onClose={handleSuccessUserAccountClose}\n                message={'New user account have been successfully added.'}\n                title={'User account added!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item >\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessUserOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n            <ModalComponent\n                isModalOpen={isModalRemoveSuccessUserAccountOpen}\n                onClose={handleRemoveSuccessUserAccountClose}\n                message={'Christine T. Punzalan has been removed from this role.'}\n                title={'Remove from Role!'}\n                buttons={\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                            <Button\n                                onClick={() => {\n                                    setIsModalSuccessRemoveUserOpen(false)\n                                }}\n                                className={classes.button}\n                                variant={'contained'}\n                                color={'primary'}>\n                                Okay\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n            />\n        </>\n    )\n}\n","//#region Global Imports\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\nimport { Store } from 'Components/Stores/IStore';\nimport { RolesActions } from './RolesActions';\nimport { IRolesPage } from './IRolesPage';\nimport { Grid, Button } from '@material-ui/core';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { LoadingIndicator, FloatingFooter } from 'Components/UI';\nimport { Policies } from './Components/Policies';\nimport { GroupsAndUsers } from './Components/GroupsAndUsers';\nimport { SubHeader } from 'Components/UI/SubHeader';\nimport { SideMenu } from 'Components/UI/SideMenu';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport { getRoleData, getRbacList, updateRoleRbac } from 'Pages/API/Calls/Roles';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment'\n\n// import { LoadingIndicator } from 'Components/UI';\n//#endregion Interface Imports\n\nconst useStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tpadding: '32px 24px 25px'\n\t},\n\tmain: {\n\t\tbackgroundColor: '#F5F7FB',\n\t\tpadding: '32px 24px',\n\t\tposition: 'relative'\n\t},\n\theadMain: {\n\t\t// backgroundColor: '#F5F7FB',\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(1),\n\t\tpaddingBottom: '75px'\n\t},\n\tgridContainerNoPadding: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tsectionTitle: {\n\t\tfontSize: 24,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tsubSectionTitle: {\n\t\tfontSize: 14,\n\t\tfontWeight: 400,\n\t\tcolor: '#272e4c',\n\t},\n\teditBtn: {\n\t\twidth: '135px',\n\t\tfontSize: '14px',\n\t\tcolor: '#fff',\n\t},\n\talignRight: {\n\t\ttextAlign: 'right',\n\t},\n\tsideBarContainer: {\n\t\tborderRight: \"1px solid #ccc\",\n\t\tpaddingRight: \"25px\",\n\t},\n\tcontentContainer: {\n\t\tpaddingLeft: \"25px\",\n\t},\n\tsideBarLists: {\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tlistStyle: 'none'\n\t},\n\tsideBarLink: {\n\t\tcolor: \"#272e4c\",\n\t\tmargin: \"0 0 10px\",\n\t\tdisplay: \"block\"\n\t},\n\tfieldGroupTitle: {\n\t\tfontSize: 13,\n\t\tfontWeight: 700,\n\t\tcolor: '#272e4c',\n\t},\n\tlistItemTextRoot: {\n\t\tflex: 'none',\n\t},\n\tlistItemTextPrimarySelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 1)',\n\t\tcursor: 'pointer',\n\t},\n\tlistItemTextPrimaryNotSelected: {\n\t\tfontSize: 14,\n\t\tfontWeight: 700,\n\t\tcolor: 'rgba(39, 46, 76, 0.3)',\n\t\tcursor: 'pointer',\n\t},\n\tdropzone: {\n\t\twidth: '460px',\n\t\theight: '88px',\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\tborder: '2px dashed rgba(30, 32, 113, 0.3)',\n\t\tborderRadius: '5px',\n\t\tbackgroundColor: '#e6e8ee',\n\t\tcolor: '#7b8094',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tinputLabel: {\n\t\tcolor: '#272e4c',\n\t\tfontSize: '12px',\n\t\tmarginBottom: '5px'\n\t},\n\tkeyboardDatePicker: {\n\t\tmarginTop: '10px',\n\t\tmarginBottom: '20px',\n\t\twidth: '212px',\n\t},\n\tcheckbox: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tradio: {\n\t\t'&.Mui-checked': {\n\t\t\tcolor: '#1e2071',\n\t\t},\n\t},\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tborder: '1px solid #707070',\n\t\tbackgroundColor: 'rgba(54, 54, 54, 0.64)',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: 'calc(100% - 72px)',\n\t\t},\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tbutton: {\n\t\tmargin: '0 10px',\n\t\tminHeight: '42px',\n\t\tminWidth: '150px',\n\t\tfontSize: 14\n\t},\n\tbuttonTitle: {\n\t\tfontWeight: 700,\n\t\tfontSize: 13,\n\t},\n\tbuttonSubTitle: {\n\t\tfontWeight: 400,\n\t\tfontSize: 7,\n\t},\n\tmenuList: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: \"10px 45px 10px 0\"\n\t},\n\tmenuLink: {\n\t\tcolor: \"#929292\",\n\t\tdisplay: \"block\",\n\t\tfontSize: \"1.10em\",\n\t\t'&:hover': {\n\t\t\tcolor: \"#3ab77d\",\n\t\t}\n\t},\n\tLinkActive: {\n\t\tcolor: \"#3ab77d\",\n\t\tfontWeight: \"bold\",\n\t\ttextDecoration: \"underline\"\n\t}\n}));\n\n\nexport const RolesPage: React.FC<IRolesPage.IProps> = (props: IRolesPage.IProps): JSX.Element => {\n\tconst classes = useStyles();\n\tconst [viewOnly, setViewOnly] = useState(true);\n\tconst [isEdited, setIsEdited] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [activeItem, setActiveItem] = useState('Policies');\n\tconst [activeItemIndex, setActiveItemIndex] = useState(0);\n\tconst [isModalConfirmExitOpen, setIsModalConfirmExitOpen] = useState(false);\n\tconst [isModalConfirmSaveOpen, setIsModalConfirmSaveOpen] = useState(false);\n\tconst [isModalSaveSuccessOpen, setIsmodalSaveSuccessOpen] = useState(false);\n\tconst [mode, setMode] = useState('view');\n\t// const [dataResponse, setDataResponse ] = useState([]);\n\tconst [isOpenSideModalBlock, setIsOpenSideModalBlock] = useState(false);\n\tconst [policyResponse, setPolicyResponse] = useState<any>([]);\n\tconst [moduleName, setModuleName] = useState('User Management');\n\tconst [rbacList, setRbacList] = useState([]);\n\tconst [breadCrumbs, setBreadCrumbs] = useState<any[]>([])\n\tconst [rbacCount,] = useState(0);\n\tconst [roleId, setRoleId] = useState('');\n\tconst [policyData, setPolicyData] = useState<any>({})\n\tconst [isRedirect, setIsRedirect] = useState<boolean>(false)\n\tconst [rbacState, setRbacState] = useState<any>({\n\t\tfilter: [],\n\t\torder: '',\n\t\tlimit: 40,\n\t\tskip: 0,\n\t\tcount: 0,\n\t\tcurrentPage: 0\n\t})\n\tconst [typingTimeout, setTypingTimeout] = useState<any>(0);\n\tconst [showDeactivationWarning, setShowDeactivationWarning] = useState<boolean>(false)\n\n\tconst sideBarItems = [\n\t\t{\n\t\t\tname: 'Policies',\n\t\t\t// label: 'POLICY'\n\t\t},\n\t\t// {\n\t\t// \tname: 'Groups And Users',\n\t\t// \t// label: 'GROUPIE'\n\t\t// },\n\t];\n\n\tReact.useEffect(() => {\n\t\thandleGetRoleData()\n\t}, []);\n\n\tconst handleGetRoleData = () => {\n\t\tsetMode('view');\n\t\tsetLoading(true)\n\t\tgetRoleData(props.match.params.id).then(response => {\n\t\t\tvar _crumbs: any[] = [\n\t\t\t\t{\n\t\t\t\t\tname: \"ROLES\",\n\t\t\t\t\tlink: \"/system-admin/users/roles\"\n\t\t\t\t},\n\t\t\t];\n\t\t\t_crumbs.push({ name: response.name })\n\t\t\tsetBreadCrumbs(_crumbs);\n\t\t\tsetPolicyResponse(response);\n\t\t\thandGetRbacList(\n\t\t\t\trbacState.filter,\n\t\t\t\trbacState.order,\n\t\t\t\trbacState.limit,\n\t\t\t\trbacState.skip,\n\t\t\t\trbacState.currentPage,\n\t\t\t\tresponse,\n\t\t\t\t'view',\n\t\t\t);\n\t\t\tconsole.log(response)\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\tconsole.log(err)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst handGetRbacList = (\n\t\tfilter: any,\n\t\tsort: any,\n\t\tlimit: number,\n\t\tskip: number,\n\t\tcurrentPage: number,\n\t\tresParam?: any,\n\t\t_mode?: string,\n\t\tsearch?: string,\n\t) => {\n\n\t\tif (typingTimeout) {\n\t\t\tclearTimeout(typingTimeout)\n\t\t}\n\n\t\tlet _filter: any = {};\n\t\tlet _order = sort ? `${sort[0].columnName} ${sort[0].direction}` : '';\n\n\t\tif (filter.length > 0) {\n\t\t\tfilter.map((item: any) => {\n\t\t\t\t_filter[item.columnName] = {\n\t\t\t\t\tlike: `^${item.value}.*`,\n\t\t\t\t\toptions: \"i\"\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\t_filter = {\n\t\t\t\tmodule: {\n\t\t\t\t\tlike: \"^.*\",\n\t\t\t\t\toptions: \"i\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet params = {\n\t\t\tlimit: limit,\n\t\t\tskip: skip,\n\t\t\torder: _order,\n\t\t\twhere: _filter\n\t\t}\n\n\t\tsetTypingTimeout(setTimeout(() => {\n\t\t\tsetLoading(true)\n\t\t\tgetRbacList(params, search ? search : '').then(response => {\n\t\t\t\tlet res = response.body;\n\t\t\t\tsetRbacState({\n\t\t\t\t\tcurrentPage: currentPage,\n\t\t\t\t\tfilter: filter,\n\t\t\t\t\torder: sort,\n\t\t\t\t\tlimit: limit,\n\t\t\t\t\tskip: skip,\n\t\t\t\t\tcount: response.count\n\t\t\t\t})\n\n\t\t\t\tres.length > 0 && res.map((item: any) => {\n\t\t\t\t\tresParam.rbac && resParam.rbac.length > 0 && resParam.rbac.map((policy: any) => {\n\t\t\t\t\t\tif (item._id === policy._id) {\n\t\t\t\t\t\t\titem['checked'] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\t// if (_mode === 'view' && resParam) {\n\t\t\t\t// \tres = res.length > 0 && res.filter((item: any) => {\n\t\t\t\t// \t\treturn item.checked ? true : false\n\t\t\t\t// \t})\n\t\t\t\t// }\n\n\t\t\t\tsetRbacList(res)\n\t\t\t\tsetLoading(false)\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t\talert(err);\n\t\t\t})\n\t\t}, filter.length > 0 || search ? 2000 : 0))\n\t}\n\n\tconst editRole = () => {\n\t\tsetViewOnly(false);\n\t\tsetMode('edit');\n\t\thandGetRbacList(\n\t\t\trbacState.filter,\n\t\t\trbacState.order,\n\t\t\trbacState.limit,\n\t\t\trbacState.skip,\n\t\t\trbacState.currentPage,\n\t\t\tpolicyResponse,\n\t\t\t'edit',\n\t\t)\n\t}\n\n\tconst activeSideBarItem = (item) => {\n\t\tconsole.log(item)\n\t\tsetActiveItem(item);\n\t\tsetViewOnly(true);\n\t\tsideBarItems.map((data, index) => {\n\t\t\tif (data.name === item) {\n\t\t\t\tif (item === 'Groups And Users') {\n\t\t\t\t\tsetIsOpenSideModalBlock(true)\n\t\t\t\t}\n\t\t\t\tsetActiveItemIndex(index);\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleModalConfirmationClose = () => {\n\t\tsetIsModalConfirmSaveOpen(false);\n\t\tsetIsModalConfirmExitOpen(false);\n\t}\n\n\tconst generateRoleId = (moduleName: string, count: number) => {\n\t\tlet roleId = '';\n\n\t\tswitch (moduleName) {\n\t\t\tcase 'User Management':\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Membership':\n\t\t\t\troleId = `MRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Underwriting':\n\t\t\t\troleId = `URID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Customer Care':\n\t\t\t\troleId = `CRID0${count}`\n\t\t\t\tbreak;\n\t\t\tcase 'Claims':\n\t\t\t\troleId = `CLRID0${count}`\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\troleId = `UMRID0${count}`\n\t\t\t\tbreak;\n\t\t}\n\t\treturn roleId;\n\t}\n\n\tconst handleChangeModuleName = (moduleName) => {\n\t\tsetRoleId(generateRoleId(moduleName, rbacCount));\n\t}\n\n\n\tconst handleOnSave = () => {\n\t\tlet data = policyData;\n\n\t\tif (!data[\"expiry_date\"] && data.expiry_date === null) {\n\t\t\tdelete data.expiry_date\n\t\t}\n\n\t\tdata.rbac && data.rbac.map((rbac: any) => {\n\t\t\tif (rbac.checked) {\n\t\t\t\tdelete rbac.checked\n\t\t\t}\n\t\t})\n\t\tsetLoading(true)\n\t\tupdateRoleRbac(data._id, data).then((response: any) => {\n\t\t\tconsole.log(response)\n\t\t\tsetMode('view');\n\t\t\thandGetRbacList(\n\t\t\t\trbacState.filter,\n\t\t\t\trbacState.order,\n\t\t\t\trbacState.limit,\n\t\t\t\trbacState.skip,\n\t\t\t\trbacState.currentPage,\n\t\t\t\tresponse,\n\t\t\t\t'view',\n\t\t\t)\n\t\t\tsetPolicyResponse(response)\n\t\t\tsetIsmodalSaveSuccessOpen(true)\n\t\t\tsetIsModalConfirmSaveOpen(false);\n\t\t\tsetBreadCrumbs([\n\t\t\t\t{\n\t\t\t\t\tname: \"ROLES\",\n\t\t\t\t\tlink: \"/system-admin/users/roles\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: response.name\n\t\t\t\t}\n\t\t\t])\n\t\t\tsetModuleName(response.module)\n\t\t\tsetLoading(false);\n\t\t\tsetIsEdited(false);\n\t\t}).catch(err => {\n\t\t\tsetLoading(false)\n\t\t\talert(err);\n\t\t})\n\t}\n\n\tconst handleRemoveAllChanges = () => {\n\t\thandleGetRoleData()\n\t\thandGetRbacList(\n\t\t\trbacState.filter,\n\t\t\trbacState.order,\n\t\t\trbacState.limit,\n\t\t\trbacState.skip,\n\t\t\trbacState.currentPage,\n\t\t\tpolicyResponse,\n\t\t\t'view',\n\t\t)\n\t\tsetIsModalConfirmExitOpen(false)\n\t\tsetIsRedirect(true)\n\t}\n\n\tconst renderSaveChangesMessage = () => {\n\t\tif (showDeactivationWarning)\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<span>Save all changes made?</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<strong>NOTE:</strong><br />\n\t\t\t\t\t<span>You changed the expiry date of this role. This will deactivate the role.</span>\n\t\t\t\t</>\n\t\t\t)\n\t\telse\n\t\t\treturn 'Save all changes made?'\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tisRedirect &&\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/system-admin/users',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t<SubHeader\n\t\t\t\theadingTitle={breadCrumbs[1] ? breadCrumbs[1].name : ''}\n\t\t\t\tbreadCrumbsArray={breadCrumbs}\n\t\t\t\tbuttonFunc={editRole}\n\t\t\t\tbuttonName={'Edit Role'}\n\t\t\t\tlayoutType={'layout_1'}\n\t\t\t\tenableButton={mode === 'view' && activeItem === 'Policies' && policyResponse.is_processmaker === false ? true : false}\n\t\t\t></SubHeader>\n\t\t\t<div className={classes.main}>\n\t\t\t\t{loading ?\n\t\t\t\t\t(<LoadingIndicator />) : null\n\t\t\t\t}\n\t\t\t\t<Grid container xs={12}>\n\t\t\t\t\t<Grid item xs={3} className={classes.sideBarContainer}>\n\t\t\t\t\t\t<SideMenu\n\t\t\t\t\t\t\titems={sideBarItems}\n\t\t\t\t\t\t\tactiveItems={activeSideBarItem}\n\t\t\t\t\t\t\tsetActiveItem={activeItemIndex}\n\t\t\t\t\t\t></SideMenu>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={9} className={classes.contentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Policies' &&\n\t\t\t\t\t\t\t<Policies\n\t\t\t\t\t\t\t\trbacList={rbacList}\n\t\t\t\t\t\t\t\tmoduleName={moduleName}\n\t\t\t\t\t\t\t\troleId={roleId}\n\t\t\t\t\t\t\t\trows={policyResponse}\n\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tviewOnly={viewOnly}\n\t\t\t\t\t\t\t\tisEdited={isEdited}\n\t\t\t\t\t\t\t\trbacState={rbacState}\n\t\t\t\t\t\t\t\tonSearch={(search: string) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\trbacState.page,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonNavigateSideMenu={(name: string) => {\n\t\t\t\t\t\t\t\t\tactiveSideBarItem(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChangeModuleName={(name: string) => {\n\t\t\t\t\t\t\t\t\thandleChangeModuleName(name)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonUpdateChange={(data: any) => {\n\t\t\t\t\t\t\t\t\tsetPolicyData(data);\n\t\t\t\t\t\t\t\t\tsetIsEdited(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonPageChange={(page: number) => {\n\t\t\t\t\t\t\t\t\tlet skip = page * rbacState.limit\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\tskip,\n\t\t\t\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonPageSizeChange={(size: number) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\t\t\t\trbacState.skip,\n\t\t\t\t\t\t\t\t\t\trbacState.currentPage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonFilterChange={(filter: any) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\tfilter,\n\t\t\t\t\t\t\t\t\t\trbacState.order,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonSortChange={(sort: any) => {\n\t\t\t\t\t\t\t\t\thandGetRbacList(\n\t\t\t\t\t\t\t\t\t\trbacState.filter,\n\t\t\t\t\t\t\t\t\t\tsort,\n\t\t\t\t\t\t\t\t\t\trbacState.limit,\n\t\t\t\t\t\t\t\t\t\trbacState.skip,\n\t\t\t\t\t\t\t\t\t\trbacState.currentPage,\n\t\t\t\t\t\t\t\t\t\tpolicyData ? policyData : policyResponse,\n\t\t\t\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactiveItem == 'Groups And Users' &&\n\t\t\t\t\t\t\t<GroupsAndUsers\n\t\t\t\t\t\t\t\trows={policyResponse}\n\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\tviewOnly={viewOnly}\n\t\t\t\t\t\t\t\topenSideModalBlock={isOpenSideModalBlock}\n\t\t\t\t\t\t\t></GroupsAndUsers>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmSaveOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={renderSaveChangesMessage()}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button onClick={() => { setIsModalConfirmSaveOpen(false) }} className={classes.button} variant={'outlined'} color={'secondary'}>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => handleOnSave()}\n\t\t\t\t\t\t\t>Save</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalConfirmExitOpen}\n\t\t\t\tonClose={handleModalConfirmationClose}\n\t\t\t\tmessage={'Exit and remove all changes made?'}\n\t\t\t\ttitle={'Confirmation'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetIsModalConfirmExitOpen(false)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'outlined'}\n\t\t\t\t\t\t\t\tcolor={'secondary'}\n\t\t\t\t\t\t\t>Cancel</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleRemoveAllChanges()\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>Continue</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<ModalComponent\n\t\t\t\tisModalOpen={isModalSaveSuccessOpen}\n\t\t\t\tonClose={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\tmessage={'Changes has been saved.'}\n\t\t\t\ttitle={'Save Success'}\n\t\t\t\tbuttons={\n\t\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\tonClick={() => { setIsmodalSaveSuccessOpen(false) }}\n\t\t\t\t\t\t\t>Okay</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{\n\t\t\t\tmode === 'edit' && activeItem === 'Policies' && policyData !== '' && isEdited === true ?\n\t\t\t\t\t<FloatingFooter>\n\t\t\t\t\t\t<Grid container spacing={1} justify={'flex-end'} style={{ textAlign: 'right' }}>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\tvariant={'contained'}\n\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#3C394A' }}\n\t\t\t\t\t\t\t\t\tonClick={() => setIsModalConfirmExitOpen(true)}\n\t\t\t\t\t\t\t\t>Cancel</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\tvariant={'contained'}\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tconst today = moment().startOf('day')\n\t\t\t\t\t\t\t\t\t\tconst exp_date = policyData && policyData.expiry_date ? moment(policyData.expiry_date).startOf('day')  : undefined;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (today.isSameOrAfter(exp_date)) {\n\t\t\t\t\t\t\t\t\t\t\tsetShowDeactivationWarning(true)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetShowDeactivationWarning(false)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsetIsModalConfirmSaveOpen(true)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>Save Changes</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</FloatingFooter>\n\n\t\t\t\t\t: \"\"\n\t\t\t}\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state: Store) => state.roles;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tMap: bindActionCreators(RolesActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}