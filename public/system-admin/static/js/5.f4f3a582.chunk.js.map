{"version":3,"sources":["Pages/Lookup/Components/Loader/index.tsx","Components/UI/ModalComponent/ModalComponent.tsx","Components/UI/TableComponent/ReactTable.tsx","Pages/Users/ActionConsts.ts","Pages/Users/UsersActions.ts","Pages/Users/Sections/UsersTable/RolesTableList.tsx","Pages/Users/Tabs/Account/TableComponent.tsx","Pages/Users/Tabs/Account/Accounts.const.ts","Pages/Users/Tabs/Account/AccountsTab.tsx","Pages/Users/UsersPage.tsx"],"names":["useStyles","makeStyles","root","position","width","height","zIndex","right","bottom","top","left","textAlign","backgroundColor","container","outline","alignItems","justifyContent","display","flexDirection","Loader","classes","className","size","defaultProps","theme","dialog","dialogAction","marginBottom","spacing","marginTop","dialogContentContainer","paddingRight","paddingLeft","closeButton","color","palette","grey","dialogTitle","fontSize","fontWeight","ModalComponent","props","open","isModalOpen","onClose","aria-labelledby","maxWidth","justify","direction","item","xs","disableTypography","id","title","aria-label","onClick","message","children","undefined","buttons","FilterCell","filter","onFilter","filteringEnabled","column","name","style","padding","value","labelWidth","onChange","e","target","placeholder","SortingIcon","marginLeft","icon","faSortUp","faSortDown","SortLabel","onSort","hideSortIcon","textOverflow","overflow","faSort","groupIconContentCell","expanded","verticalAlign","faAngleUp","faAngleDown","ReactTable","rows","columns","disableSort","disableFilter","enableGrouping","groupColumnName","viewOnly","columnExtensions","sortingStateColumnExtensions","defaultSorting","onDeleteRow","enableSelection","enableSelectAll","onRowClick","totalCount","onPageChange","currentPage","pageSize","onSetPageSize","onCheckRow","onSelectGroup","loading","defaultFilters","onSortingChange","React","selection","setSelection","pageSizes","sorting","setSorting","selectCell","row","onToggle","faMinusSquare","checkedIcon","faCheckSquare","checked","stopPropagation","onCurrentPageChange","onPageSizeChange","onSelectionChange","grouping","columnName","filters","onFiltersChange","onFilterChange","messages","noData","cellComponent","faMinusCircle","showSortingControls","sortLabelComponent","highlightRow","selectByRowClick","showSelectAll","showSelectionColumn","contentComponent","isChecked","countChecked","countItems","map","data","iconComponent","groupNameChecked","ActionConsts","ResetReducer","SetReducer","UsersActions","payload","type","RolesTableList","APIGetRolesList","page","limit","skip","setState","getRolesList","then","res","body","count","catch","err","console","log","onSearchTableRoles","searchRoleData","state","handleOnFilterChange","_filter","typingTimeout","clearTimeout","default_filter","setTimeout","handleSortChange","sort","order","handleRowClick","redirect_to_role","redirect_data","handleAddRole","isModuleModalOpen","handleContinueRole","moduleItems","Number","moduleValue","redirect_to_addrole","_self","this","to","pathname","role_id","_id","from","Grid","md","ReactSearch","onSearch","faDownload","addFieldIcon","Link","linkStyleSelected","faPlus","Button","variant","button","margin","BasicSelect","menuItems","COLUMN_EXTENSIONS","wordWrapEnabled","statusOption","label","Select","items","restProps","renderValue","selected","find","i","key","utils","MomentUtils","disabled","format","inputVariant","invalidDateMessage","date","toISOString","paddingTop","renderSortable","sortingEnabled","TableComponent","useState","getRowId","userTableColumn","tableConst","cursor","marginRight","searchSection","tableTop","searchTabAction","AccountTabPage","useEffect","getUsers","offset","newState","saveSummary","setLoading","getUserList","where","error","updateTableState","setSummary","summary","prop","setTableState","tableStates","query","isLoading","isRowClicked","setIsRowClicked","userIdSelected","setUserIdSelected","setTypingTimeout","LoadingIndicator","searchUser","GenerateReport","boxShadow","Object","entries","length","total_users","onlineUsers","active_users","deactived_users","array","newEntry","forEach","newRow","first_name","middlename","last_name","group","hasOwnProperty","role","x","expiry_date","moment","last_login","status","textTransform","push","rowDataFixer","w","or","like","options","middle_name","a","values","join","page_tab_titles","UsersTabs","withStyles","indicator","Tabs","UsersTab","minWidth","textDecoration","Tab","gridContainerNoPadding","sectionTitle","subSectionTitle","fieldGroupTitle","dropzone","border","borderRadius","inputLabel","keyboardDatePicker","checkbox","radio","appBar","breakpoints","up","grow","flexGrow","minHeight","buttonTitle","buttonSubTitle","gridContainer","breadCrumbs","headerTitle","paddingBottom","linkPrevious","sideBar","borderRight","selectedpage","linkCurrent","main","gridItemLayout","avatar","sideNavHeader","listItemTextRoot","flex","listItemTextPrimarySelected","listItemTextPrimaryNotSelected","addACode","codeHeader","opacity","letterSpacing","textAlignLast","codeItems","codeListItems","UsersPage","selectedTab","setSelectedTab","Typography","_event","tab","index","aria-controls","mapStateToProps","users","mapDispatchToProps","dispatch","Map","bindActionCreators"],"mappings":"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","file":"static/js/5.f4f3a582.chunk.js","sourcesContent":["import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface LoaderProps {\n}\n\nconst useStyles = makeStyles({\n\troot: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        zIndex: 9999,\n        right: '0px',\n        bottom: '0px',\n        top: '0px',\n        left: '0px',\n        textAlign: \"center\",\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    container:{\n        height: '100%',\n        outline: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n});\n\nexport const Loader: React.FC<LoaderProps> = (): JSX.Element => {\n    // const buttonclasses = ButtonStyle();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <CircularProgress size={150}/>\n            </div>\n        </div>\n    )\n}\n\nLoader.defaultProps = {}","import React, { FC } from 'react';\n// import Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport { IModalComponent } from './IModalComponent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdialog: {},\n\tdialogAction: {\n\t\tmarginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        justifyContent:'center'\n\t},\n\tdialogContentContainer: {\n        width: '100%'\n\t},\n\tcontainer: {\n        paddingRight:'15px',\n        paddingLeft:'15px',\n        width: '450px'\n\t},\n\tcloseButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\t},\n\tdialogTitle: {\n        marginTop: theme.spacing(2),\n        // marginBottom: theme.spacing(2),\n        fontSize: '16px',\n        color: '#272E4C',\n\t\tfontWeight: 700\n    },\n}));\n\nexport const ModalComponent: FC<IModalComponent.IProps> = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.isModalOpen}\n\t\t\tonClose={props.onClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\tmaxWidth=\"sm\"\n\t\t\tclassName={classes.dialog}\n\t\t> \n\t\t\t <div>\n                <Grid container className={classes.container} justify=\"flex-start\" alignItems=\"flex-start\" direction=\"column\">\n                    <Grid item xs>\n\t\t\t\t\t\t<DialogTitle className={classes.dialogTitle} disableTypography={false} id=\"form-dialog-title\" >\n\t\t\t\t\t\t\t<Box fontWeight={700}>{props.title}</Box>\n\t\t\t\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.onClose}>\n                                <CloseIcon />\n                            </IconButton>\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs className={classes.dialogContentContainer}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprops.message ? \n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"space-between\" alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{props.message}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</DialogContent> : null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.children ? props.children : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<DialogActions className={classes.dialogAction}>\n\t\t\t\t\t\t\t{ props.buttons !== undefined ?\n\t\t\t\t\t\t\t\tprops.buttons: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Grid>\n                </Grid>\n\t\t\t</div>\n\t\t</Dialog>\n\t);\n};\n\nModalComponent.defaultProps = {\n\tisModalOpen: false,\n};\n","import * as React from 'react';\n// import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    FilteringState,\n    IntegratedFiltering,\n    SortingState,\n    IntegratedSorting,\n    IntegratedGrouping,\n    GroupingState,\n    SelectionState,\n    // IntegratedPaging,\n    PagingState,\n    CustomPaging,\n} from '@devexpress/dx-react-grid';\nimport {\n    Grid,\n    Table,\n    //   Toolbar,\n    TableHeaderRow,\n    TableFilterRow,\n    TableGroupRow,\n    TableSelection,\n    PagingPanel,\n    // TableFixedColumns,\n} from '@devexpress/dx-react-grid-material-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    // faSearch,\n    faCheckSquare,\n    faMinusSquare,\n    faSort,\n    faSortUp,\n    faSortDown,\n    faMinusCircle,\n    faAngleDown,\n    faAngleUp,\n    // faPlus,\n    // faCheck, \n    // faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport * as MaterialUI from '@material-ui/core';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\n// import { ReactSearch } from '../SearchBar/ReactSearch';\n\nexport interface IReactTableProps {\n    rows: any,\n    columns: any,\n    disableSort?: boolean,\n    disableFilter?: boolean,\n    enableGrouping?: boolean,\n    enableSelection?: boolean,\n    enableSelectAll?: boolean,\n    groupColumnName?: string,\n    viewOnly?: boolean,\n    columnExtensions?: any[],\n    message?: string,\n    sortingStateColumnExtensions?: any[],\n    defaultSorting?: any[],\n    totalCount?: number,\n    currentPage?: number,\n    pageSize?: number,\n    groupNameChecked?: any,\n    loading?: boolean,\n    defaultFilters?: any,\n    onDeleteRow?: (row) => void,\n    onRowClick?: (row) => void,\n    onPageChange?: (page) => void,\n    onSetPageSize?: (size) => void,\n    onCheckRow?: (row) => void,\n    onSelectGroup?: (group) => void,\n    onFilterChange?: (filter) => void,\n    onSortingChange?: (sort) => void,\n\n}\n\nconst defaultProps: IReactTableProps = {\n    rows: [],\n    columns: [],\n    disableSort: false,\n    disableFilter: false,\n    enableGrouping: false,\n    enableSelection: false,\n    enableSelectAll: false,\n    groupColumnName: '',\n    viewOnly: true,\n    columnExtensions: [],\n    message: '',\n    sortingStateColumnExtensions: [],\n    defaultSorting: [],\n    totalCount: 0,\n    currentPage: 0,\n    pageSize: 0,\n    groupNameChecked: [],\n    loading: false,\n}\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n    if (filteringEnabled) {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                    <MaterialUI.OutlinedInput\n                        classes={classes}\n                        style={{ width: '100%' }}\n                        value={filter ? filter.value : ''}\n                        labelWidth={0}\n                        onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                        placeholder=\"\"\n                    />\n                </MaterialUI.TableCell>\n            );\n        }\n    }\n    return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n    direction === 'asc' ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n    ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n        );\n\nconst SortLabel = ({ column, onSort, children, direction }: any) => {\n    if (column.name === 'action_delete') {\n        return null;\n    } else {\n        return (\n            <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                {children}\n                {direction ? (\n                    <SortingIcon direction={direction} />\n                ) : (\n                        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n                    )}\n            </MaterialUI.TableSortLabel>\n        );\n    }\n};\n\n\nconst groupIconContentCell = ({expanded}: any) => {\n    return (\n        <>\n            <div style={{padding: '8.5px 12px', display:'table-cell', verticalAlign:'middle'}} > \n                <FontAwesomeIcon \n                    icon={expanded ? faAngleUp : faAngleDown} \n                    size={'2x'}\n                    color={\"rgba(0, 0, 0, 0.54)\"}\n                />       \n            </div>\n        </>\n    )\n}\n\n\n\nexport const ReactTable: React.FC<IReactTableProps> = (props: IReactTableProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        disableSort,\n        disableFilter,\n        enableGrouping,\n        groupColumnName,\n        viewOnly,\n        message,\n        columnExtensions,\n        sortingStateColumnExtensions,\n        defaultSorting,\n        onDeleteRow,\n        enableSelection,\n        enableSelectAll,\n        onRowClick,\n        totalCount,\n        onPageChange,\n        currentPage,\n        pageSize,\n        onSetPageSize,\n        onCheckRow,\n        onSelectGroup,\n        // groupNameChecked,\n        loading,\n        defaultFilters,\n        onSortingChange\n    } = props;\n\n    const [selection, setSelection] = React.useState<any>([])\n    const [pageSizes] = React.useState([5, 10, 15]);\n    const [sorting, setSorting ] = React.useState([])\n    // const [pageSize, setPageSize] = React.useState(10);\n    // console.log(onCheckRow, onSelectGroup)\n\n    const setSortingMethod = (e : any) => {\n        onSortingChange && onSortingChange(e)\n        setSorting(e);\n    }\n    const handleSelectionChange = (row : any[]) => {\n        if (onRowClick) {\n            if (!enableSelection) {\n                onRowClick(row[0]);\n            }\n        } else {\n            setSelection(row);\n        }\n    }\n\n    const selectCell = ({row, onToggle}: any) => {\n        return (\n            <MaterialUI.TableCell>\n                <MaterialUI.Checkbox\n                    icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                    checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                    checked={row.checked}\n                    onClick={(e: any)=> {\n                        e.stopPropagation();\n                        onToggle();\n                        onCheckRow && onCheckRow(row);\n                    }}\n                />\n            </MaterialUI.TableCell>\n        )\n    }\n\n\nconst groupContentCell = ({row}: any) => {\n    \n    let isChecked = false;\n    let countChecked = 0;\n    let countItems = 0;\n    rows.map(data => {\n        if (data.name === row.value) {\n            countItems++;\n            if (data.checked) {\n                isChecked = true;\n                countChecked++;\n            }\n        }\n    })\n    \n    if (!viewOnly) {\n        return (\n            <>\n                <div style={{padding: '8.5px 15.5px', display:'table-cell', verticalAlign:'middle'}} > \n                    <MaterialUI.Checkbox\n                        icon={<FontAwesomeIcon icon={faMinusSquare} />}\n                        checkedIcon={<FontAwesomeIcon icon={faCheckSquare} />}\n                        checked={isChecked}\n                        onClick={e => {\n                            e.stopPropagation();\n                            onSelectGroup && onSelectGroup(row.value)\n                        }}\n                />\n                </div>\n                <div style={{padding: '8.5px 2px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{row.value}</span>\n                </div>\n                <div style={{padding: '8.5px 30px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{countChecked}/{countItems}</span>\n                </div>\n            </>\n        )\n    } else {\n        return (\n            <div style={{padding: '8.5px 2px', display:'table-cell', verticalAlign:'middle'}} >\n                    <span>{row.value}</span>\n            </div>\n        )\n    }\n    \n}\n\n    const tableCell = ({ value, row, column }: any) => {\n        if (column.name === 'action_delete') {\n            return (\n                <MaterialUI.TableCell style={{ padding: '0px 30px 8px 10px', textAlign: 'right' }}>\n                    <span\n                        onClick={() => {\n                            onDeleteRow && onDeleteRow(row)\n                        }}>\n\n                        <FontAwesomeIcon\n                            icon={faMinusCircle}\n                        />\n                    </span>\n\n                </MaterialUI.TableCell>\n            )\n        } else {\n            return (\n                <MaterialUI.TableCell>\n                    {value}\n                </MaterialUI.TableCell>\n            )\n        }\n    }\n\n\n    return (\n        <div style={{ padding: '10px 0' }}>\n            <Paper>\n                <Grid\n                    rows={rows}\n                    columns={columns}\n                >\n                    <PagingState\n                        currentPage={currentPage}\n                        onCurrentPageChange={onPageChange}\n                        pageSize={pageSize}\n                        onPageSizeChange={onSetPageSize}\n                    />\n                    <CustomPaging\n                        totalCount={totalCount}\n                    />\n                    {!disableSort && onSortingChange ? (\n                        <SortingState\n                            defaultSorting={defaultSorting}\n                            columnExtensions={sortingStateColumnExtensions}\n                            sorting={sorting}\n                            onSortingChange={setSortingMethod}\n                        />\n                    ) : !disableSort ? (\n                        <SortingState\n                          defaultSorting={[]}\n                        />\n                    ) : null}\n                    {!viewOnly ? <SelectionState\n                        selection={selection}\n                        onSelectionChange={handleSelectionChange}\n                    /> : null}\n                    {enableGrouping && groupColumnName ? <GroupingState grouping={[{ columnName: groupColumnName }]} /> : null}\n                    {!disableFilter ? \n                    <FilteringState \n                        defaultFilters={[]} \n                        filters={defaultFilters !== undefined ? defaultFilters : []}\n                        onFiltersChange={props.onFilterChange}\n                    /> : null}\n                    {/* <IntegratedPaging /> */}\n                    {!defaultFilters && !disableFilter ? <IntegratedFiltering /> : null}\n                    {!disableSort ? <IntegratedSorting /> : null}\n                    {enableGrouping ? <IntegratedGrouping /> : null}\n                    <Table\n                        columnExtensions={columnExtensions}\n                        messages={{ noData: message }}\n                        cellComponent={tableCell}\n                    />\n                    <TableHeaderRow\n                        showSortingControls={!disableSort}\n                        sortLabelComponent={SortLabel}\n                    />\n                    {/* <TableFixedColumns /> */}\n                    <PagingPanel\n                        pageSizes={pageSizes}\n                    />\n                    {!viewOnly ? \n                        <TableSelection \n                            highlightRow \n                            selectByRowClick\n                            showSelectAll={enableSelectAll ? true : undefined} \n                            cellComponent={!loading ? selectCell : selectCell} \n                            showSelectionColumn={enableSelection}\n                        /> : null}\n                    \n                    {enableGrouping ? \n                        <TableGroupRow \n                            contentComponent={groupContentCell}\n                            iconComponent={groupIconContentCell}\n                        ></TableGroupRow>: null}\n                    {!disableFilter ? <TableFilterRow cellComponent={FilterCell} /> : null}\n                </Grid>\n                {\n                    loading &&\n                    <Loader />\n                } \n            </Paper>\n        </div>\n    )\n}\n\nReactTable.defaultProps = defaultProps;","export const ActionConsts = {\n\tUsers: {\n\t\tResetReducer: 'Users_ResetReducer',\n\t\tSetReducer: 'Users_SetReducer',\n\t},\n};\n","//#region Global Imports\n// import { Dispatch } from 'redux';\n//#endregion Global Imports\n\n//#region Local Imports\nimport { ActionConsts } from './ActionConsts';\n// import { PlanetaryService } from 'Components/Services';\n//#endregion Local Imports\n\n//#region Interface Imports\n//#endregion Interface Imports\n\nexport const UsersActions = {\n\tMap: (payload: []) => ({\n\t\tpayload,\n\t\ttype: ActionConsts.Users.SetReducer,\n\t}),\n\n\tReset: () => ({\n\t\ttype: ActionConsts.Users.ResetReducer,\n\t}),\n\n\t// GetApod: (payload) => async (dispatch: Dispatch) => {\n\n\t// },\n};\n","import * as React from 'react';\nimport {\n    Grid,\n    // InputLabel, \n    // Typography,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { ReactTable } from 'Components/UI/TableComponent/ReactTable';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { getRolesList, searchRoleData } from 'Pages/API/Calls/Roles';\nimport { Redirect } from 'react-router-dom';\nimport { Loader } from 'Pages/Lookup/Components/Loader';\nimport { ModalComponent } from 'Components/UI/ModalComponent/ModalComponent';\nimport BasicSelect from 'Components/UI/BasicSelect'\n\ninterface IProps {\n    classes: any;\n}\n\ninterface IState {\n    rows: any;\n    columns: any;\n    loading: boolean;\n    redirect_to_role: boolean;\n    redirect_to_addrole: boolean;\n    redirect_data: any;\n    isModuleModalOpen: boolean;\n    moduleItems: any[];\n    moduleValue: number;\n    totalCount: number;\n    currentPage: number;\n    limit: number;\n    order: string;\n    typingTimeout: any;\n    default_filter: any;\n}\n\nexport class RolesTableList extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        const moduleItems = [\n            {\n                name: 'User Management',\n                value: 0\n            },\n            {\n                name: 'Membership',\n                value: 1\n            },\n            {\n                name: 'Underwriting',\n                value: 2\n            },\n            {\n                name: 'Customer Care',\n                value: 3\n            },\n            {\n                name: 'Claims',\n                value: 4,\n            },\n            {\n                name: 'Billing',\n                value: 5,\n            },\n        ]\n        const columns = [\n            {\n                name: 'name',\n                title: 'Role Name',\n            },\n            {\n                name: 'role_id',\n                title: 'Role ID',\n            },\n            {\n                name: 'associate_groups',\n                title: 'Associated Groups',\n            },\n            {\n                name: 'module',\n                title: 'Module',\n            },\n            {\n                name: 'status',\n                title: 'Status',\n            },\n        ];\n\n        this.state = {\n            loading: true,\n            columns: columns,\n            rows: [],\n            redirect_to_role: false,\n            redirect_to_addrole: false,\n            redirect_data: [],\n            isModuleModalOpen: false,\n            moduleItems: moduleItems,\n            moduleValue: 0,\n            totalCount: 0,\n            currentPage: 0,\n            typingTimeout: 0,\n            limit: 10,\n            order: '',\n            default_filter: [],\n        }\n    }\n\n    componentDidMount() {\n        let _self = this;\n        this.setState({\n            loading: true,\n        }, () => {\n            _self.APIGetRolesList(this.state.currentPage, this.state.limit);\n        });\n    }\n\n    APIGetRolesList = (page: number, limit: number) => {\n        var skip = 0;\n        this.setState({\n            loading: true,\n        })\n\n        if (page) {\n            skip = page * limit;\n        }\n\n        getRolesList(limit, 0, skip, '').then(res => {\n            this.setState({\n                rows: res.body,\n                loading: false,\n                totalCount: res.count,\n                currentPage: page,\n                limit: limit\n            });\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                loading: false,\n            })\n        })\n    }\n\n    onSearchTableRoles = (data) => {\n        console.log(data);\n        this.setState({\n            loading: true\n        })\n        if (data !== null && data !== '') {\n            searchRoleData(data).then(res => {\n                console.log(res);\n                this.setState({\n                    rows: res.body,\n                    loading: false,\n                    totalCount: res.count,\n                })\n            });\n        } else {\n            this.APIGetRolesList(this.state.currentPage, this.state.limit);\n        }\n        \n    }\n\n    handleOnFilterChange = (filter) => {\n        let _filter = ''\n\n        if (this.state.typingTimeout) {\n            clearTimeout(this.state.typingTimeout)\n        }\n\n        filter.map((item: any)=> {\n            _filter += `filter[where][${item.columnName}][regexp]=/${item.value}.*/i&`\n        })\n\n        this.setState({\n            default_filter: filter,\n            typingTimeout: setTimeout(() => {\n                this.setState({\n                    loading: true,\n                })\n                getRolesList(this.state.limit, 0, 0, _filter).then(res => {\n                    this.setState({\n                        rows: res.body,\n                        loading: false,\n                        totalCount: res.count,\n                    });\n                }).catch(err => {\n                    console.log(err);\n                    this.setState({\n                        loading: false,\n                    })\n                })   \n            },1500)\n        })    \n    }\n\n    handleSortChange = (sort) => {\n        const filter = this.state.default_filter;\n        let _filter = '';\n        let order = `${sort.columnName}`;\n\n        sort.map((item: any) => {\n            order += `&filter[order]=${item.columnName} ${item.direction}`;\n        })\n        filter.map((item: any)=> {\n            _filter += `filter[where][${item.columnName}][regexp]=/${item.value}.*/i&`\n        })\n        this.setState({\n            loading: true,\n        })\n        getRolesList(this.state.limit, 0, 0, _filter, order).then(res => {\n            this.setState({\n                rows: res.body,\n                loading: false,\n                totalCount: res.count,\n            });\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                loading: false,\n            })\n        })  \n    }\n\n    handleRowClick = (row) => {\n        var data = this.state.rows;\n        this.setState({\n            redirect_to_role: true,\n            redirect_data: data[row]\n        })\n    }\n\n    handleAddRole = () => {\n        console.log('handleAddRole');\n        this.setState({\n            isModuleModalOpen: true,\n        })\n    }\n\n    handleContinueRole = () => {\n        var data = this.state.moduleItems[Number(this.state.moduleValue)].name;\n        console.log(data, 'datawew');\n        this.setState({\n            redirect_to_addrole: true,\n            redirect_data: data\n        })\n    }\n\n    render(): JSX.Element {\n\n        if (this.state.redirect_to_role) {\n            return (\n                <>\n                    <Redirect\n                        to={{\n                            pathname: '/system-admin/roles/' + this.state.redirect_data.role_id,\n                            //   state: { from: this.state.redirect_data },\n                        }}\n                    />\n\n                    <Redirect\n                        to={{\n                            pathname: '/system-admin/roles/' + this.state.redirect_data._id,\n                            //   state: { from: this.state.redirect_data },\n                        }}\n                    />\n                </>\n\n\n            );\n        }\n        if (this.state.redirect_to_addrole) {\n            return (\n                <Redirect\n                    to={{\n                        pathname: '/system-admin/roles/add-role',\n                        state: { from: this.state.redirect_data },\n                    }}\n                />\n            );\n        }\n        return (\n\n            <div>\n                {this.state.loading ? <Loader /> : null}\n                <Grid container alignItems={'center'} style={{ textAlign: 'center' }} spacing={4}>\n                    <Grid item xs={8} md={9}>\n                        <ReactSearch placeholder={'Search a role'} onSearch={this.onSearchTableRoles} />\n                    </Grid>\n                    <Grid item xs={4} md={3}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faDownload} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected}>Generate Report</Link>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={faPlus} className={this.props.classes.addFieldIcon} />\n                                <Link className={this.props.classes.linkStyleSelected} onClick={() => this.handleAddRole()}>Add Role</Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <ReactTable\n                    rows={this.state.rows}\n                    columns={this.state.columns}\n                    message={'There are no user roles to show yet.'}\n                    viewOnly={false}\n                    enableSelection={false}\n                    onRowClick={this.handleRowClick}\n                    totalCount={this.state.totalCount}\n                    currentPage={this.state.currentPage}\n                    pageSize={this.state.limit}\n                    defaultFilters={this.state.default_filter}\n                    onFilterChange={this.handleOnFilterChange}\n                    onSortingChange={this.handleSortChange}\n                    onSetPageSize={(size: any) => {\n                        this.APIGetRolesList(this.state.currentPage, size);\n                    }}\n                    onPageChange={(page: any) => {\n                        this.APIGetRolesList(page, this.state.limit);\n                    }}\n                />\n\n                <ModalComponent\n                    isModalOpen={this.state.isModuleModalOpen}\n                    onClose={() => {\n                        this.setState({\n                            isModuleModalOpen: false\n                        })\n                    }}\n                    message={'Select a module for the role you will create:'}\n                    title={'Choose a Module'}\n                    buttons={\n                        <Grid container justify=\"center\" alignItems=\"center\" style={{ textAlign: 'center' }}>\n                            <Grid item xs={6}>\n                                <Button\n                                    onClick={() => {\n                                        this.setState({\n                                            isModuleModalOpen: false\n                                        })\n                                    }}\n                                    variant={'outlined'}\n                                    color={'secondary'}\n                                    className={this.props.classes.button}\n                                >Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className={this.props.classes.button} variant={'contained'} color={'primary'} onClick={() => this.handleContinueRole()}>Continue</Button>\n                            </Grid>\n                        </Grid>\n                    }\n                >\n                    <div style={{ width: '90%', margin: 'auto' }}>\n                        <BasicSelect\n                            menuItems={this.state.moduleItems}\n                            width={'100%'}\n                            value={this.state.moduleValue}\n                            onChange={(e: any) => {\n                                this.setState({\n                                    moduleValue: e.target.value\n                                })\n                            }}\n                        />\n                    </div>\n                </ModalComponent>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nimport {\n    Grid,\n    VirtualTable,\n    TableHeaderRow,\n    TableSelection,\n    PagingPanel,\n    TableFilterRow\n} from '@devexpress/dx-react-grid-material-ui'\n\nimport {\n    PagingState,\n    CustomPaging,\n    SortingState,\n    SelectionState,\n    FilteringState,\n    // IntegratedFiltering\n  } from '@devexpress/dx-react-grid'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport {\n    faSort,\n    faSortUp,\n    faSortDown\n} from '@fortawesome/free-solid-svg-icons'\nimport * as MaterialUI from '@material-ui/core'\n\ninterface IProps {\n    rows: any[]\n    columns: any[]\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    // Evemts\n    onCurrentPageChange: (value) => void\n    onFilterChange: (value) => void\n    onPageSizeChange: (value) => void\n    onSortingChange: (value) => void\n    onRowClick: (value) => void\n}\n\nconst COLUMN_EXTENSIONS = [\n  {\n    columnName: 'username',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'name',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'group',\n    wordWrapEnabled: true,\n  },\n  {\n    columnName: 'role',\n    wordWrapEnabled: true,\n  },\n];\n\nconst statusOption = [\n  {\n    value: 'active',\n    label: 'Active'\n  },\n  {\n    value: 'inactive',\n    label: 'Inactive'\n  },\n  {\n    value: 'locked',\n    label: 'Locked'\n  }\n]\n\nconst Select = ({ items, ...restProps  }: any) => {\n  return (\n      <MaterialUI.Select\n          variant='outlined'\n          style={{ width: '100%' }}\n          renderValue={(selected: any) => {\n              if (selected != null) {\n                  const value: any = items.find((item: any) => {\n                      return item.value === selected;\n                  });\n                  if (value) {\n                      return value.label;\n                  } else {\n                      return '——';\n                  }\n              }\n              return '——';\n          }}\n          {...restProps}\n      >\n          {items.map((item: any, i: number) => (\n              <MaterialUI.MenuItem key={i} value={item.value}>\n                  {item.label}\n              </MaterialUI.MenuItem>\n          ))}\n      </MaterialUI.Select>\n  );\n};\n\nconst FilterCell = ({ filter, onFilter, filteringEnabled, classes, column }: any) => {\n  if (filteringEnabled) {\n      if (column.name === 'last_login' || column.name === 'expiry_date') {\n          return (\n            <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                    disabled\n                    variant=\"dialog\"\n                    format=\"MMMM DD, YYYY\"\n                    inputVariant=\"outlined\"\n                    // className={datePickerClasses.keyboardDatePicker}\n                    value={filter ? filter.value : ''}\n                    invalidDateMessage=\"\"\n                    onChange={date => {console.log(date); onFilter(date ? { value: date.toISOString() } : null)}}\n                />\n              </MuiPickersUtilsProvider>\n            </MaterialUI.TableCell>\n          )\n      } else if (column.name === 'status') {\n        return (\n          <MaterialUI.TableCell classes={classes} style={{paddingTop: '5px'}}>\n            <Select\n                onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                name={'status'}\n                items={statusOption}\n                id={'status'}\n                value={filter ? filter.value : ''}\n            />\n          </MaterialUI.TableCell>\n        )\n      } else {\n          return (\n              <MaterialUI.TableCell style={{ padding: '0px 10px 8px 10px' }} classes={classes}>\n                  <MaterialUI.OutlinedInput\n                      classes={classes}\n                      style={{ width: '100%' }}\n                      value={filter ? filter.value : ''}\n                      labelWidth={0}\n                      onChange={e => onFilter(e.target.value ? { value: e.target.value } : null)}\n                      placeholder=\"\"\n                  />\n              </MaterialUI.TableCell>\n          );\n      }\n  }\n  return null;\n}\n\nconst SortingIcon = ({ direction }: any) =>\n  direction === 'asc' ? (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortUp} />\n  ) : (\n    <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSortDown} />\n  );\n\nconst renderSortable = ({ column, onSort, children, direction }: any) => {\n  if (\n      column.sortingEnabled !== undefined &&\n      column.sortingEnabled !== null &&\n      column.sortingEnabled === false\n    ) {\n      return <span>{column.title}</span>;\n    } else {\n      return (\n        <MaterialUI.TableSortLabel hideSortIcon={true} onClick={onSort}>\n          {children}\n          {direction ? (\n            <SortingIcon direction={direction} />\n          ) : (\n            <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={faSort} />\n          )}\n        </MaterialUI.TableSortLabel>\n      );\n  }\n}\n\nexport const TableComponent: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const {\n        rows,\n        columns,\n        totalCount,\n        currentPage,\n        pageSize,\n        pageSizes,\n        // events\n        onFilterChange,\n        onCurrentPageChange,\n        onPageSizeChange,\n        onSortingChange,\n        onRowClick\n    } = props;\n\n    const getRowId = row => row._id;\n\n    const [selection, setSelection] = React.useState([]);\n\n    const handleSelection = (e) => {\n      setSelection(e);\n      onRowClick(e);\n    }\n\n    return (\n        <>\n            <Grid\n              getRowId={getRowId}\n              rows={rows}\n              columns={columns}>\n\n              <FilteringState\n                onFiltersChange={onFilterChange} />\n              {/* <IntegratedFiltering /> */}\n\n              <SelectionState\n                selection={selection}\n                onSelectionChange={handleSelection}\n              />\n\n              <SortingState onSortingChange={onSortingChange} />\n\n              <PagingState\n                  currentPage = {currentPage}\n                  pageSize = {pageSize}\n                  // Events\n                  onCurrentPageChange = {onCurrentPageChange}\n                  onPageSizeChange = {onPageSizeChange}\n              />\n\n              <CustomPaging totalCount = {totalCount}/>\n\n              <VirtualTable\n                columnExtensions={COLUMN_EXTENSIONS} />\n              <TableHeaderRow showSortingControls sortLabelComponent={renderSortable}/>\n\n              <TableFilterRow cellComponent={FilterCell} />\n\n              <TableSelection\n                selectByRowClick\n                highlightRow\n                showSelectionColumn={false}\n              />\n\n              <PagingPanel pageSizes = {pageSizes} />\n            </Grid>\n        </>\n    )\n}","export const userTableColumn = [\n    { name: 'username', title: 'Username' },\n    { name: 'name', title: 'Name' },\n    { name: 'group', title: 'User Group' },\n    { name: 'role', title: 'User Role/s' },\n    { name: 'last_login', title: 'Last Login Date' },\n    { name: 'expiry_date', title: 'Expiry Date' },\n    { name: 'status', title: 'Status' }\n]\n\nexport const tableConst = [10, 15, 20]","import React from 'react'\nimport { TableComponent } from './TableComponent'\n\nimport { userTableColumn, tableConst } from './Accounts.const'\nimport { getUserList, searchUser } from 'Pages/API/Calls/User'\nimport { UI } from 'Components'\nimport { \n    Grid,\n} from '@material-ui/core';\nimport { ReactSearch } from 'Components/UI/SearchBar/ReactSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouteTo } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\ninterface IProps {\n\n}\n\n\nconst useStyles = makeStyles({\n    addFieldIcon: {\n        color: '#3AB77D',\n        cursor: 'pointer',\n        fontSize: '13px',\n        marginRight: '8px',\n        marginLeft: '20px'\n    },\n    searchSection: {\n        marginBottom: '21px'\n    },\n    label: {\n        color: '#272E4C',\n        fontSize: 13\n    },\n    value: {\n        color: '#3AB77D',\n        fontSize: 13,\n        fontWeight: 800,\n        marginRight: '10px'\n    },\n    tableTop: {\n        padding: '20px'\n    },\n    searchTabAction: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    }\n})\n\nexport const AccountTabPage: React.FC<IProps> = (props: IProps): JSX.Element => {\n    const classes = useStyles();\n    React.useEffect(() => {\n        getUsers({pageSize: 10, offset: 0}, true)\n    }, [])\n\n    const {\n\n    } = props;\n\n    // Fetch\n    const getUsers = (newState?: any, saveSummary?: boolean) => {\n        setLoading(true)\n        getUserList(\n            newState.pageSize,\n            newState.offset,\n            newState.where,\n            newState.order).then((data: any) => {\n\n            if (!data.error) {\n                const state = {\n                    ...newState,\n                    rows: data.body,\n                    totalCount: data.count\n                }\n\n                updateTableState(state)\n\n                if (saveSummary && saveSummary === true) {\n                    setSummary(data.summary)\n                }\n            } else {\n                const state = {\n                    ...newState,\n                    rows: [],\n                    totalCount: 0\n                }\n\n                updateTableState(state)\n            }\n           \n            setLoading(false)\n        }).catch(() => {\n            setLoading(false)\n        })\n    }\n\n    // Fetch\n    const getSearchUser = (newState?: any) => {\n        setLoading(true)\n        searchUser(\n            newState.pageSize,\n            newState.offset,\n            newState.query,\n            newState.where,\n            newState.order,).then((data: any) => {\n\n            if (!data.error) {\n                const state = {\n                    ...newState,\n                    rows: data.body,\n                    totalCount: data.count\n                }\n\n                updateTableState(state)\n            } else {\n                const state = {\n                    ...newState,\n                    rows: [],\n                    totalCount: 0\n                }\n\n                updateTableState(state)\n            }\n           \n            setLoading(false)\n        }).catch(() => {\n            setLoading(false)\n        })\n    }\n\n    // Table event handlers\n    const onCurrentPageChange = (value) => {\n        const state = {\n            currentPage: value,\n            pageSize: tableStates.pageSize,\n            offset: tableStates.pageSize * value,\n            order: tableStates.order,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onPageSizeChange = (value) => {\n        const state = {\n            pageSize: value,\n            offset: tableStates.offset,\n            order: tableStates.order,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onFilterChange = (value) => {\n        if (typingTimeout) {\n            clearTimeout(typingTimeout);\n        }\n\n        setTypingTimeout (setTimeout(function () {\n            const state = {\n                pageSize: tableStates.pageSize,\n                offset: 0,\n                order: tableStates.order,\n                where: {}\n            }\n    \n            value.map(w => \n                w.columnName === 'name' ?\n                    state.where = {\n                        or: [\n                            {\n                                first_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            },{\n                                middle_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            },{\n                                last_name: {\n                                    like: `${w.value}.*`,\n                                    options: 'i'\n                                }\n                            }\n                        ]\n                    }\n                :  w.columnName === 'group' ?\n                    state.where['group_name'] = {\n                        like: `${w.value}.*`,\n                        options: 'i'\n                    }\n                :  w.columnName === 'role' ?\n                    state.where[ \"role.name\"] = {\n                        like: `${w.value}.*`,\n                        options: 'i'\n                    }\n                :\n                state.where[w.columnName] = {\n                    like: `${w.value}.*`,\n                    options: 'i'\n                }\n            )\n\n            getUsers(state)\n        }, 3000));\n    }\n\n    const onSortingChange = (value) => {\n        let a = Object.values(value[0]).join(' ')\n        \n        const state = {\n            pageSize: tableStates.pageSize,\n            offset: tableStates.offset,\n            order: a,\n            where: tableStates.where\n        }\n\n        getUsers(state)\n    }\n\n    const onRowClick = (value) => {\n        setUserIdSelected(value)\n        setIsRowClicked(true)\n    }\n\n    // const handleSearchChange = ({target}) => {\n    //     setSearchValue(target.value)\n    // }\n\n    const updateTableState = (prop) => {\n        setTableState({\n            ...tableStates,\n            ...prop\n        })\n    }\n\n    const rowDataFixer = (array: any) => {\n        let newEntry: any = [];\n        if (array.length > 0) {\n            array.forEach(data => {\n                let newRow = {\n                    ...data,\n                    name: `${data.first_name} ${data.middlename} ${data.last_name}`,\n                    group: data.hasOwnProperty('group') ? data.group.name : 'N/A',\n                    role: data.hasOwnProperty('role') && data.role.length > 0 ? data.role.map((x, i) => `${x.name}${i !== (data.role.length - 1) ? ', ' : ''}`) : 'N/A',\n                    expiry_date: data.hasOwnProperty('expiry_date') ? moment(data.expiry_date).format('MMM DD, YYYY') : 'N/A',\n                    last_login: data.hasOwnProperty('last_login') ? moment(data.last_login).format('MMM DD, YYYY') : 'N/A',\n                    status: data.hasOwnProperty('status') ? <span style={{textTransform: 'capitalize'}}>{data.status}</span> : 'N/A',\n                }\n\n                newEntry.push(newRow)\n            })\n\n            return newEntry\n        }   \n\n        return []\n    }\n\n    const handleSearchUser = (e) => {\n        const state = {\n            pageSize: tableStates.pageSize,\n            offset: 0,\n            order: tableStates.order,\n            where: tableStates.where,\n            query: e\n        }\n\n        if (e !== '') {\n            getSearchUser(state)\n        } else {\n            getUsers(state)\n        }\n\n    }\n\n    // States\n    const [tableStates, setTableState] = React.useState<any>({\n        rows: [],\n        currentPage: 0,\n        totalCount: 0,\n        pageSize: 10,\n        offset: 0,\n        order: '',\n        where: {},\n        query: ''\n    })\n\n    // const [searchValue, setSearchValue] = React.useState<string>('')\n    const [isLoading, setLoading] = React.useState<boolean>(true)\n    const [isRowClicked, setIsRowClicked] = React.useState<boolean>(false)\n    const [userIdSelected, setUserIdSelected] = React.useState<string>('')\n    const [typingTimeout, setTypingTimeout] = React.useState<any>(0)\n    // const [query, setQuery] = React.useState<string>('')\n    const [summary, setSummary] = React.useState<any>()\n\n    if (isRowClicked === true) {\n        return <Redirect to={`accounts/${userIdSelected}`} />\n    }\n  \n    return (\n        <>\n        { isLoading && <UI.LoadingIndicator /> }\n            <Grid\n                container xs={12}\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.searchSection}>\n                <Grid item xs={9}>\n                    {/* <OutlinedInput\n                        fullWidth={true}\n                        id=\"outlined-adornment-amount\"\n                        value={query}\n                        onChange={handleSearchUser}\n                        placeholder=\"Search user\"\n                        startAdornment={\n                        <InputAdornment position=\"start\">\n                            <SearchIcon style={{color: '#363636', opacity: 0.4}} />\n                        </InputAdornment>}\n                        labelWidth={0} /> */}\n                    <ReactSearch placeholder={'Search user'} onSearch={handleSearchUser} />\n                </Grid>\n                <Grid\n                    xs={3}\n                    md={3}>\n                    <div className={classes.searchTabAction}>\n                        <UI.GenerateReport></UI.GenerateReport>\n                        <FontAwesomeIcon icon={faPlus} className={classes.addFieldIcon} />\n                        <RouteTo to='adduser'>\n                            <Link>Add User</Link>\n                        </RouteTo>\n                    </div>\n                </Grid>\n            </Grid>\n            <div style={{boxShadow: '0px 3px 6px #00000029'}}>\n                <Grid container className={classes.tableTop}>\n                    {\n                        summary && Object.entries(summary).length > 0 ?\n                            <>\n                                <Grid\n                                    style={{textAlign: 'center'}}\n                                    item xs={3}>\n                                    <span className={classes.value}>{summary.total_users}</span>\n                                    <span className={classes.label}>TOTAL</span>\n                                </Grid>\n                                <Grid\n                                    style={{textAlign: 'center'}}\n                                    item xs={3}>\n                                    <span className={classes.value}>{summary.onlineUsers}</span>\n                                    <span className={classes.label}>ONLINE NOW</span>\n                                </Grid>\n                                <Grid\n                                    style={{textAlign: 'center'}}\n                                    item xs={3}>\n                                    <span className={classes.value}>{summary.active_users}</span>\n                                    <span className={classes.label}>ACTIVE</span>\n                                </Grid>\n                                <Grid\n                                    style={{textAlign: 'center'}}\n                                    item xs={3}>\n                                    <span className={classes.value}>{summary.deactived_users}</span>\n                                    <span className={classes.label}>INACTIVE</span>\n                                </Grid>\n                            </>\n                        : 'Loading...'\n                    }\n                </Grid>\n                <TableComponent\n                    rows = {rowDataFixer(tableStates.rows)}\n                    columns = {userTableColumn}\n                    pageSize = {tableStates.pageSize}\n                    pageSizes = {tableConst}\n                    currentPage = {tableStates.currentPage}\n                    totalCount = {tableStates.totalCount}\n                    // Events\n                    onRowClick = {onRowClick}\n                    onFilterChange = {onFilterChange}\n                    onCurrentPageChange = {onCurrentPageChange}\n                    onPageSizeChange = {onPageSizeChange}\n                    onSortingChange = {onSortingChange} />\n            </div>\n        </>\n    )\n} ","//#region Global Imports\nimport * as React from 'react';\nimport { bindActionCreators, Dispatch } from 'redux';\n// import NEOLink from 'next/link';\n//#endregion Global Imports\n\n//#region Interface Imports\n// import { Heading } from 'Components/UI/Heading';\n// import { Grid } from '@material-ui/core';\nimport { Store } from 'Components/Stores/IStore';\nimport { UsersActions } from './UsersActions';\n// import { IUsersPage } from './IUsersPage';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport { useState } from \"react\";\n// import { UsersTable } from './Sections/UsersTable';\nimport { RolesTableList } from './Sections/UsersTable/RolesTableList';\n// import {UsersTable} from './Sections/UsersTable';\nimport { AccountTabPage } from './Tabs/Account/AccountsTab';\n// import {GridHorizontalDivider} from \"../../Components/UI\";\n\n//#endregion Interface Imports\nconst page_tab_titles: any = ['Accounts', 'Roles', 'Groups', 'Policies'];\nconst UsersTabs = withStyles({\n  root: {},\n  indicator: {\n    display: 'none',\n  },\n})(Tabs);\n\nconst UsersTab = withStyles({\n  root: {\n    color: 'rgba(39, 46, 76, 0.5)',\n    minWidth: 80,\n    paddingLeft: 24,\n    paddingRight: 24,\n    fontSize: '0.875rem',\n    fontWeight: 400,\n    '&:hover': {\n      color: 'rgba(39, 46, 76, 1)',\n      fontWeight: 400,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  },\n  selected: {},\n})(Tab);\n\nconst useStyles = makeStyles(theme => ({\n  gridContainerNoPadding: {\n    padding: theme.spacing(1),\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  subSectionTitle: {\n    fontSize: 16,\n    fontWeight: 400,\n    color: '#272e4c',\n  },\n  fieldGroupTitle: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: '#272e4c',\n  },\n  // listItemTextRoot: {\n  // \tflex: 'none',\n  // },\n  // listItemTextPrimarySelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 1)',\n  // \tcursor: 'pointer',\n  // },\n  // listItemTextPrimaryNotSelected: {\n  // \tfontSize: 14,\n  // \tfontWeight: 700,\n  // \tcolor: 'rgba(39, 46, 76, 0.3)',\n  // \tcursor: 'pointer',\n  // },\n  dropzone: {\n    width: '460px',\n    height: '88px',\n    marginTop: '10px',\n    marginBottom: '20px',\n    border: '2px dashed rgba(30, 32, 113, 0.3)',\n    borderRadius: '5px',\n    backgroundColor: '#e6e8ee',\n    color: '#7b8094',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  inputLabel: {\n    color: '#272e4c',\n  },\n  keyboardDatePicker: {\n    marginTop: '10px',\n    marginBottom: '20px',\n    width: '212px',\n  },\n  checkbox: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  radio: {\n    '&.Mui-checked': {\n      color: '#1e2071',\n    },\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    border: '1px solid #707070',\n    backgroundColor: 'rgba(54, 54, 54, 0.64)',\n    [theme.breakpoints.up('sm')]: {\n      width: 'calc(100% - 72px)',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    margin: '0 10px',\n    minHeight: '42px',\n    minWidth: '150px',\n  },\n  buttonTitle: {\n    fontWeight: 700,\n    fontSize: 13,\n  },\n  buttonSubTitle: {\n    fontWeight: 400,\n    fontSize: 7,\n  },\n  gridContainer: {\n    backgroundColor: '',\n    minHeight: '100px',\n  },\n  breadCrumbs: {\n    marginBottom: '20px',\n  },\n  headerTitle: {\n    fontSize: '1.5rem',\n    alignItems: 'flex-start',\n    fontWeight: 600,\n    paddingBottom: '20px',\n  },\n  linkPrevious: {\n    fontSize: 12,\n    fontWeight: 300,\n    color: 'black',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  sideBar: {\n    borderRight: '1px solid #C3C3C3',\n  },\n  selectedpage: {\n    paddingLeft: '37px',\n  },\n  linkCurrent: {\n    fontSize: 12,\n    fontWeight: 600,\n    color: 'black',\n    cursor: 'pointer',\n  },\n  main: {\n    backgroundColor: '#F5F7FB',\n    padding: '32px 24px',\n  },\n  gridItemLayout: {\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    width: '130px',\n    height: '130px',\n  },\n\n  sideNavHeader: {\n    fontSize: 13,\n    fontWeight: 700,\n    color: 'rgba(39, 46, 76, 0.3)',\n  },\n  listItemTextRoot: {\n    flex: 'none',\n  },\n  listItemTextPrimarySelected: {\n    fontSize: 14,\n    fontWeight: 700,\n    color: '#2c2e8e',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n  },\n  listItemTextPrimaryNotSelected: {\n    fontSize: 14,\n    color: '#272e4c',\n    cursor: 'pointer',\n  },\n  addFieldIcon: {\n    color: '#3AB77D',\n    cursor: 'pointer',\n    fontSize: '13px',\n    marginRight: '8px',\n  },\n  addACode: {\n    paddingRight: '15px',\n    marginTop: 15,\n    textAlign: 'center',\n  },\n  codeHeader: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Medium 16px/22px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '16px',\n  },\n  codeItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 0.6,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n  },\n  codeListItems: {\n    color: '#272E4C',\n    textAlign: 'left',\n    // font: 'Regular 12px/14px Usual',\n    opacity: 1,\n    letterSpacing: 0,\n    textAlignLast: 'left',\n    fontSize: '12px',\n    // width: '230px',\n    // height: '22px',\n    '&:hover': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n    '&$selected': {\n      textDecoration: 'underline',\n      color: '#3AB77D',\n      fontWeight: 600,\n    },\n  }\n}));\n\nexport const UsersPage = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  // const [sideNav, setSideNav] = useState('information');\n  const classes = useStyles();\n\n  const handleTabChange = (\n    _event: React.ChangeEvent<HTMLDivElement>,\n    tab: number,\n  ) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className={classes.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.gridContainer}\n      >\n        <Grid item>\n          <Typography className={classes.headerTitle}>Users\n        <UsersTabs\n              value={selectedTab}\n              onChange={handleTabChange}\n              aria-label=\"page tab\"\n            >\n              {page_tab_titles.map((title: string, index: number) => (\n                <UsersTab\n                  label={title}\n                  id={'users_tab_' + index}\n                  aria-controls={'users-tabpanel-' + index}\n                  key={index}\n                />\n              ))}\n            </UsersTabs>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Headers */}\n\n\n      {/* Body */}\n      <Grid container>\n        <Grid item xs={12} md={12} className={classes.selectedpage}>\n          {\n            selectedTab === 0 ?\n              (<AccountTabPage />)\n              : selectedTab === 1 ?\n                (<RolesTableList classes={classes} />)\n                : null\n          }\n          {/* <UsersTable classes={classes} /> */}\n        </Grid>\n      </Grid>\n\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Store) => state.users;\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  Map: bindActionCreators(UsersActions.Map, dispatch),\n});\n\nexport { mapStateToProps, mapDispatchToProps };\n"],"sourceRoot":""}